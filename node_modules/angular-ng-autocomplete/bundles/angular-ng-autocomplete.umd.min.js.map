{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://angular-ng-autocomplete/lib/autocomplete-lib.component.ts","ng://angular-ng-autocomplete/lib/autocomplete/autocomplete.component.ts","ng://angular-ng-autocomplete/lib/autocomplete/highlight.pipe.ts","ng://angular-ng-autocomplete/lib/autocomplete-lib.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","__spread","concat","AutocompleteLibComponent","ngOnInit","Component","args","selector","template","isArrowUp","keyCode","isArrowDown","isArrowUpDown","isEnter","isBackspace","isDelete","isESC","isTab","AutocompleteComponent","elementRef","renderer","query","filteredList","historyList","isHistoryListVisible","selectedIdx","toHighlight","notFound","isFocused","isOpen","isScrollToEnd","overlay","manualOpen","undefined","manualClose","data","placeholder","heading","historyHeading","historyListMaxNumber","notFoundText","minQueryLength","focusFirst","selected","EventEmitter","inputChanged","inputFocused","inputCleared","opened","closed","scrolledToEnd","propagateChange","onTouched","writeValue","isTypeString","searchKeyword","registerOnChange","fn","registerOnTouched","onChange","event","target","setDisabledState","isDisabled","disabled","ngAfterViewInit","initEventStream","handleScroll","setInitialValue","initialValue","select","ngOnChanges","changes","Array","isArray","currentValue","handleItemsChange","firstChange","handleOpen","filterList","initSearchHistory","customFilter","defaultFilterFunction","_this","filter","item","toLowerCase","indexOf","emit","window","localStorage","getItem","historyIdentifier","existingHistory","JSON","parse","some","existingItem","copiedExistingHistory","slice","splice","setItem","stringify","selectedIndex","map","el","unshift","saveHistory","handleClose","handleClick","clickedComponent","inside","nativeElement","parentNode","handleOverlay","listen","filteredListElement","scrollToEnd","setPanelState","stopPropagation","open","close","focus","handleFocus","clear","remove","history_2","isLoading","searchInput","scrollTop","scrollHeight","clientHeight","inputKeyUp$","fromEvent","pipe","inputKeyDown$","listenEventStream","debounceTime","subscribe","onKeyUp","preventDefault","onFocusItem","onHandleEnter","onEsc","onTab","onDelete","totalNumItem","key","sum","scrollToFocusedItem","index","listElement","historyListElement","items","childNodes","node","nodeType","className","includes","listHeight","offsetHeight","itemHeight","visibleTop","visibleBottom","targetPosition","offsetTop","blur","copiedHistoryList","saveHistoryToLocalStorage","removeHistoryItem","v","removeItem","resetHistoryList","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","encapsulation","ViewEncapsulation","None","host","(document:click)","class","ElementRef","Renderer2","ViewChild","Input","Output","ContentChild","TemplateRef","HighlightPipe","transform","text","search","pattern","replace","split","join","regex","RegExp","name_1","match","text2","Pipe","name","AutocompleteLibModule","NgModule","imports","CommonModule","FormsModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ng-autocomplete-lib',\n  template: `\n    <p>\n      autocomplete-lib works!\n    </p>\n  `,\n  styles: []\n})\nexport class AutocompleteLibComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {\n  AfterViewInit,\n  Component, ContentChild,\n  ElementRef,\n  EventEmitter, forwardRef,\n  Input, OnChanges,\n  OnInit,\n  Output,\n  Renderer2,\n  SimpleChanges, TemplateRef,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {fromEvent, Observable} from 'rxjs';\nimport {debounceTime, filter, map} from 'rxjs/operators';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\n/**\n * Keyboard events\n */\nconst isArrowUp = keyCode => keyCode === 38;\nconst isArrowDown = keyCode => keyCode === 40;\nconst isArrowUpDown = keyCode => isArrowUp(keyCode) || isArrowDown(keyCode);\nconst isEnter = keyCode => keyCode === 13;\nconst isBackspace = keyCode => keyCode === 8;\nconst isDelete = keyCode => keyCode === 46;\nconst isESC = keyCode => keyCode === 27;\nconst isTab = keyCode => keyCode === 9;\n\n\n@Component({\n  selector: 'ng-autocomplete',\n  templateUrl: './autocomplete.component.html',\n  styleUrls: ['./autocomplete.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AutocompleteComponent),\n      multi: true\n    }\n  ],\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    '(document:click)': 'handleClick($event)',\n    'class': 'ng-autocomplete'\n  },\n})\n\nexport class AutocompleteComponent implements OnInit, OnChanges, AfterViewInit, ControlValueAccessor {\n  @ViewChild('searchInput') searchInput: ElementRef; // input element\n  @ViewChild('filteredListElement') filteredListElement: ElementRef; // element of items\n  @ViewChild('historyListElement') historyListElement: ElementRef; // element of history items\n\n  inputKeyUp$: Observable<any>;\n  inputKeyDown$: Observable<any>;\n\n  public query = ''; // search query\n  public filteredList = []; // list of items\n  public historyList = []; // list of history items\n  public isHistoryListVisible = true;\n  public elementRef;\n  public selectedIdx = -1;\n  public toHighlight = '';\n  public notFound = false;\n  public isFocused = false;\n  public isOpen = false;\n  public isScrollToEnd = false;\n  public overlay = false;\n  private manualOpen = undefined;\n  private manualClose = undefined;\n\n\n  // @Inputs\n  /**\n   * Data of items list.\n   * It can be array of strings or array of objects.\n   */\n  @Input() public data = [];\n  @Input() public searchKeyword: string; // keyword to filter the list\n  @Input() public placeholder = '';\n  @Input() public heading = '';\n  @Input() public initialValue: any;\n  /**\n   * History identifier of history list\n   * When valid history identifier is given, then component stores selected item to local storage of user's browser.\n   * If it is null then history is hidden.\n   * History list is visible if at least one history item is stored.\n   */\n  @Input() public historyIdentifier: string;\n  /**\n   * Heading text of history list.\n   * If it is null then history heading is hidden.\n   */\n  @Input() public historyHeading = 'Recently selected';\n  @Input() public historyListMaxNumber = 15; // maximum number of items in the history list.\n  @Input() public notFoundText = 'Not found'; // set custom text when filter returns empty result\n  @Input() public isLoading: boolean; // loading mask\n  @Input() public debounceTime: number; // delay time while typing\n  @Input() public disabled: boolean; // input disable/enable\n  /**\n   * The minimum number of characters the user must type before a search is performed.\n   */\n  @Input() public minQueryLength = 1;\n\n  /**\n   * Focus first item in the list\n   */\n  @Input() public focusFirst = false;\n\n  /**\n   * Custom filter function\n   */\n  @Input() public customFilter: (items: any[], query: string) => any[];\n\n  // @Output events\n  /** Event that is emitted whenever an item from the list is selected. */\n  @Output() selected = new EventEmitter<any>();\n\n  /** Event that is emitted whenever an input is changed. */\n  @Output() inputChanged = new EventEmitter<any>();\n\n  /** Event that is emitted whenever an input is focused. */\n  @Output() readonly inputFocused: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event that is emitted whenever an input is cleared. */\n  @Output() readonly inputCleared: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event that is emitted when the autocomplete panel is opened. */\n  @Output() readonly opened: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event that is emitted when the autocomplete panel is closed. */\n  @Output() readonly closed: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event that is emitted when scrolled to the end of items. */\n  @Output() readonly scrolledToEnd: EventEmitter<void> = new EventEmitter<void>();\n\n\n  // Custom templates\n  @Input() itemTemplate !: TemplateRef<any>;\n  @Input() notFoundTemplate !: TemplateRef<any>;\n  @ContentChild(TemplateRef) customTemplate !: TemplateRef<any>;\n\n  /**\n   * Propagates new value when model changes\n   */\n  propagateChange: any = () => {\n  };\n\n  onTouched: any = () => {\n  };\n\n  /**\n   * Writes a new value from the form model into the view,\n   * Updates model\n   */\n  writeValue(value: any = '') {\n    this.query = value && !this.isTypeString(value) ? value[this.searchKeyword] : value;\n  }\n\n  /**\n   * Registers a handler that is called when something in the view has changed\n   */\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  /**\n   * Registers a handler specifically for when a control receives a touch event\n   */\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  /**\n   * Event that is called when the value of an input element is changed\n   */\n  onChange(event) {\n    this.propagateChange(event.target.value);\n  }\n\n  constructor(elementRef: ElementRef, private renderer: Renderer2) {\n    this.elementRef = elementRef;\n  }\n\n  /**\n   * Event that is called when the control status changes to or from DISABLED\n   */\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit() {\n    this.initEventStream();\n    this.handleScroll();\n  }\n\n  /**\n   * Set initial value\n   * @param value\n   */\n  public setInitialValue(value: any) {\n    if (this.initialValue) {\n      this.select(value);\n    }\n  }\n\n  /**\n   * Update search results\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    this.setInitialValue(this.initialValue);\n    if (\n      changes &&\n      changes.data &&\n      Array.isArray(changes.data.currentValue)\n    ) {\n      this.handleItemsChange();\n      if (!changes.data.firstChange && this.isFocused) {\n        this.handleOpen();\n      }\n    }\n  }\n\n  /**\n   * Items change\n   */\n  public handleItemsChange() {\n    this.isScrollToEnd = false;\n    if (!this.isOpen) {\n      return;\n    }\n\n    this.filteredList = this.data;\n    this.notFound = !this.filteredList || this.filteredList.length === 0;\n\n    // Filter list when updating data and panel is open\n    if (this.isOpen) {\n      this.filterList();\n    }\n  }\n\n  /**\n   * Filter data\n   */\n  public filterList() {\n    this.selectedIdx = -1;\n    this.initSearchHistory();\n    if (this.query != null && this.data) {\n      this.toHighlight = this.query;\n      this.filteredList = this.customFilter !== undefined ? this.customFilter([...this.data], this.query) : this.defaultFilterFunction();\n      // If [focusFirst]=\"true\" automatically focus the first match\n      if (this.filteredList.length > 0 && this.focusFirst) {\n        this.selectedIdx = 0;\n      }\n    } else {\n      this.notFound = false;\n    }\n  }\n\n  /**\n   * Default filter function, used unless customFilter is provided\n   */\n  public defaultFilterFunction(): any[] {\n    return this.data.filter((item: any) => {\n      if (typeof item === 'string') {\n        // string logic, check equality of strings\n        return item.toLowerCase().indexOf(this.query.toLowerCase()) > -1;\n      } else if (typeof item === 'object' && item instanceof Object) {\n        // object logic, check property equality\n        return item[this.searchKeyword].toLowerCase().indexOf(this.query.toLowerCase()) > -1;\n      }\n    });\n  }\n\n\n  /**\n   * Check if item is a string in the list.\n   * @param item\n   */\n  isTypeString(item) {\n    return typeof item === 'string';\n  }\n\n  /**\n   * Select item in the list.\n   * @param item\n   */\n  public select(item) {\n    this.query = !this.isTypeString(item) ? item[this.searchKeyword] : item;\n    this.isOpen = true;\n    this.overlay = false;\n    this.selected.emit(item);\n    this.propagateChange(item);\n\n    if (this.initialValue) {\n      // check if history already exists in localStorage and then update\n      const history = window.localStorage.getItem(`${this.historyIdentifier}`);\n      if (history) {\n        let existingHistory = JSON.parse(localStorage[`${this.historyIdentifier}`]);\n        if (!(existingHistory instanceof Array)) existingHistory = [];\n\n        // check if selected item exists in existingHistory\n        if (!existingHistory.some((existingItem) => !this.isTypeString(existingItem)\n          ? existingItem[this.searchKeyword] == item[this.searchKeyword] : existingItem == item)) {\n          existingHistory.unshift(item);\n          localStorage.setItem(`${this.historyIdentifier}`, JSON.stringify(existingHistory));\n\n          // check if items don't exceed max allowed number\n          if (existingHistory.length >= this.historyListMaxNumber) {\n            existingHistory.splice(existingHistory.length - 1, 1);\n            localStorage.setItem(`${this.historyIdentifier}`, JSON.stringify(existingHistory));\n          }\n        } else {\n          // if selected item exists in existingHistory swap to top in array\n          if (!this.isTypeString(item)) {\n            // object logic\n            const copiedExistingHistory = existingHistory.slice(); // copy original existingHistory array\n            const selectedIndex = copiedExistingHistory.map((el) => el[this.searchKeyword]).indexOf(item[this.searchKeyword]);\n            copiedExistingHistory.splice(selectedIndex, 1);\n            copiedExistingHistory.splice(0, 0, item);\n            localStorage.setItem(`${this.historyIdentifier}`, JSON.stringify(copiedExistingHistory));\n          } else {\n            // string logic\n            const copiedExistingHistory = existingHistory.slice(); // copy original existingHistory array\n            copiedExistingHistory.splice(copiedExistingHistory.indexOf(item), 1);\n            copiedExistingHistory.splice(0, 0, item);\n            localStorage.setItem(`${this.historyIdentifier}`, JSON.stringify(copiedExistingHistory));\n          }\n        }\n      } else {\n        this.saveHistory(item);\n      }\n    } else {\n      this.saveHistory(item);\n    }\n    this.handleClose();\n  }\n\n  /**\n   * Document click\n   * @param e event\n   */\n  public handleClick(e) {\n    let clickedComponent = e.target;\n    let inside = false;\n    do {\n      if (clickedComponent === this.elementRef.nativeElement) {\n        inside = true;\n        if (this.filteredList.length) {\n          this.handleOpen();\n        }\n      }\n      clickedComponent = clickedComponent.parentNode;\n    } while (clickedComponent);\n    if (!inside) {\n      this.handleClose();\n    }\n  }\n\n  /**\n   * Handle body overlay\n   */\n  handleOverlay() {\n    this.overlay = false;\n  }\n\n  /**\n   * Scroll items\n   */\n  public handleScroll() {\n    this.renderer.listen(this.filteredListElement.nativeElement, 'scroll', () => {\n      this.scrollToEnd();\n    });\n  }\n\n  /**\n   * Define panel state\n   */\n  setPanelState(event) {\n    if (event) {\n      event.stopPropagation();\n    }\n    // If controls are untouched\n    if (typeof this.manualOpen === 'undefined'\n      && typeof this.manualClose === 'undefined') {\n      this.isOpen = false;\n      this.handleOpen();\n    }\n\n    // If one of the controls is untouched and other is deactivated\n    if (typeof this.manualOpen === 'undefined'\n      && this.manualClose === false\n      || typeof this.manualClose === 'undefined'\n      && this.manualOpen === false) {\n      this.isOpen = false;\n      this.handleOpen();\n    }\n\n    // if controls are touched but both are deactivated\n    if (this.manualOpen === false && this.manualClose === false) {\n      this.isOpen = false;\n      this.handleOpen();\n    }\n\n    // if open control is touched and activated\n    if (this.manualOpen) {\n      this.isOpen = false;\n      this.handleOpen();\n      this.manualOpen = false;\n    }\n\n    // if close control is touched and activated\n    if (this.manualClose) {\n      this.isOpen = true;\n      this.handleClose();\n      this.manualClose = false;\n    }\n  }\n\n  /**\n   * Manual controls\n   */\n  open() {\n    this.manualOpen = true;\n    this.isOpen = false;\n    this.handleOpen();\n  }\n\n  close() {\n    this.manualClose = true;\n    this.isOpen = true;\n    this.handleClose();\n  }\n\n  focus() {\n    this.handleFocus(event);\n  }\n\n  clear() {\n    this.remove(event);\n  }\n\n  /**\n   * Remove search query\n   */\n  public remove(e) {\n    e.stopPropagation();\n    this.query = '';\n    this.inputCleared.emit();\n    this.propagateChange(this.query);\n    this.setPanelState(e);\n\n    if (this.data && !this.data.length) {\n      this.notFound = false;\n    }\n  }\n\n  /**\n   * Initialize historyList search\n   */\n  initSearchHistory() {\n    this.isHistoryListVisible = false;\n    if (this.historyIdentifier && !this.query) {\n      const history = window.localStorage.getItem(`${this.historyIdentifier}`);\n      if (history) {\n        this.isHistoryListVisible = true;\n        this.filteredList = [];\n        this.historyList = history ? JSON.parse(history) : [];\n      } else {\n        this.isHistoryListVisible = false;\n      }\n    } else {\n      this.isHistoryListVisible = false;\n    }\n  }\n\n  handleOpen() {\n    if (this.isOpen || this.isOpen && !this.isLoading) {\n      return;\n    }\n    // If data exists\n    if (this.data && this.data.length) {\n      this.isOpen = true;\n      this.overlay = true;\n      this.filterList();\n      this.opened.emit();\n    }\n  }\n\n  handleClose() {\n    if (!this.isOpen) {\n      this.isFocused = false;\n      return;\n    }\n    this.isOpen = false;\n    this.overlay = false;\n    this.filteredList = [];\n    this.selectedIdx = -1;\n    this.notFound = false;\n    this.isHistoryListVisible = false;\n    this.isFocused = false;\n    this.closed.emit();\n  }\n\n  handleFocus(e) {\n    this.searchInput.nativeElement.focus();\n    if (this.isFocused) {\n      return;\n    }\n    this.inputFocused.emit(e);\n    // if data exists then open\n    if (this.data && this.data.length) {\n      this.setPanelState(event);\n    }\n    this.isFocused = true;\n  }\n\n  scrollToEnd(): void {\n    if (this.isScrollToEnd) {\n      return;\n    }\n\n    const scrollTop = this.filteredListElement.nativeElement\n      .scrollTop;\n    const scrollHeight = this.filteredListElement.nativeElement\n      .scrollHeight;\n    const elementHeight = this.filteredListElement.nativeElement\n      .clientHeight;\n    const atBottom = scrollHeight === scrollTop + elementHeight;\n    if (atBottom) {\n      this.scrolledToEnd.emit();\n      this.isScrollToEnd = true;\n    }\n  }\n\n  /**\n   * Initialize keyboard events\n   */\n  initEventStream() {\n    this.inputKeyUp$ = fromEvent(\n      this.searchInput.nativeElement, 'keyup'\n    ).pipe(map(\n      (e: any) => e\n    ));\n\n    this.inputKeyDown$ = fromEvent(\n      this.searchInput.nativeElement,\n      'keydown'\n    ).pipe(map(\n      (e: any) => e\n    ));\n\n    this.listenEventStream();\n  }\n\n  /**\n   * Listen keyboard events\n   */\n  listenEventStream() {\n    // key up event\n    this.inputKeyUp$\n      .pipe(\n        filter(e =>\n          !isArrowUpDown(e.keyCode) &&\n          !isEnter(e.keyCode) &&\n          !isESC(e.keyCode) &&\n          !isTab(e.keyCode)),\n        debounceTime(this.debounceTime)\n      ).subscribe(e => {\n      this.onKeyUp(e);\n    });\n\n    // cursor up & down\n    this.inputKeyDown$.pipe(filter(\n      e => isArrowUpDown(e.keyCode)\n    )).subscribe(e => {\n      e.preventDefault();\n      this.onFocusItem(e);\n    });\n\n    // enter keyup\n    this.inputKeyUp$.pipe(filter(e => isEnter(e.keyCode))).subscribe(e => {\n      //this.onHandleEnter();\n    });\n\n    // enter keydown\n    this.inputKeyDown$.pipe(filter(e => isEnter(e.keyCode))).subscribe(e => {\n      this.onHandleEnter();\n    });\n\n    // ESC\n    this.inputKeyUp$.pipe(\n      filter(e => isESC(e.keyCode),\n        debounceTime(100))\n    ).subscribe(e => {\n      this.onEsc();\n    });\n\n    // TAB\n    this.inputKeyDown$.pipe(\n      filter(e => isTab(e.keyCode))\n    ).subscribe(e => {\n      this.onTab();\n    });\n\n    // delete\n    this.inputKeyDown$.pipe(\n      filter(e => isBackspace(e.keyCode) || isDelete(e.keyCode))\n    ).subscribe(e => {\n      this.onDelete();\n    });\n  }\n\n  /**\n   * on keyup == when input changed\n   * @param e event\n   */\n  onKeyUp(e) {\n    this.notFound = false; // search results are unknown while typing\n    // if input is empty\n    if (!this.query) {\n      this.notFound = false;\n      this.inputChanged.emit(e.target.value);\n      this.inputCleared.emit();\n      this.setPanelState(e);\n    }\n    // note that '' can be a valid query\n    if (!this.query && this.query !== '') {\n      return;\n    }\n    // if query >= to minQueryLength\n    if (this.query.length >= this.minQueryLength) {\n      this.inputChanged.emit(e.target.value);\n      this.filterList();\n\n      // If no results found\n      if (!this.filteredList.length && !this.isLoading) {\n        this.notFoundText ? this.notFound = true : this.notFound = false;\n      }\n\n      if (this.data && !this.data.length) {\n        this.isOpen = true;\n      }\n    }\n  }\n\n\n  /**\n   * Keyboard arrow top and arrow bottom\n   * @param e event\n   */\n  onFocusItem(e) {\n    // move arrow up and down on filteredList or historyList\n    if (!this.historyList.length || !this.isHistoryListVisible) {\n      // filteredList\n      const totalNumItem = this.filteredList.length;\n      if (e.key === 'ArrowDown') {\n        let sum = this.selectedIdx;\n        sum = (this.selectedIdx === null) ? 0 : sum + 1;\n        this.selectedIdx = (totalNumItem + sum) % totalNumItem;\n        this.scrollToFocusedItem(this.selectedIdx);\n      } else if (e.key === 'ArrowUp') {\n        if (this.selectedIdx == -1) {\n          this.selectedIdx = 0;\n        }\n        this.selectedIdx = (totalNumItem + this.selectedIdx - 1) % totalNumItem;\n        this.scrollToFocusedItem(this.selectedIdx);\n      }\n    } else {\n      // historyList\n      const totalNumItem = this.historyList.length;\n      if (e.key === 'ArrowDown') {\n        let sum = this.selectedIdx;\n        sum = (this.selectedIdx === null) ? 0 : sum + 1;\n        this.selectedIdx = (totalNumItem + sum) % totalNumItem;\n        this.scrollToFocusedItem(this.selectedIdx);\n      } else if (e.key === 'ArrowUp') {\n        if (this.selectedIdx == -1) {\n          this.selectedIdx = 0;\n        }\n        this.selectedIdx = (totalNumItem + this.selectedIdx - 1) % totalNumItem;\n        this.scrollToFocusedItem(this.selectedIdx);\n      }\n    }\n  }\n\n  /**\n   * Scroll to focused item\n   * * @param index\n   */\n  scrollToFocusedItem(index) {\n    let listElement = null;\n    // Define list element\n    if (!this.historyList.length || !this.isHistoryListVisible) {\n      // filteredList element\n      listElement = this.filteredListElement.nativeElement;\n    } else {\n      // historyList element\n      listElement = this.historyListElement.nativeElement;\n    }\n\n    const items = Array.prototype.slice.call(listElement.childNodes).filter((node: any) => {\n      if (node.nodeType === 1) {\n        // if node is element\n        return node.className.includes('item');\n      } else {\n        return false;\n      }\n    });\n\n    if (!items.length) {\n      return;\n    }\n\n    const listHeight = listElement.offsetHeight;\n    const itemHeight = items[index].offsetHeight;\n    const visibleTop = listElement.scrollTop;\n    const visibleBottom = listElement.scrollTop + listHeight - itemHeight;\n    const targetPosition = items[index].offsetTop;\n\n    if (targetPosition < visibleTop) {\n      listElement.scrollTop = targetPosition;\n    }\n\n    if (targetPosition > visibleBottom) {\n      listElement.scrollTop = targetPosition - listHeight + itemHeight;\n    }\n  }\n\n  /**\n   * Select item on enter click\n   */\n  onHandleEnter() {\n    // click enter to choose item from filteredList or historyList\n    if (this.selectedIdx > -1) {\n      if (!this.historyList.length || !this.isHistoryListVisible) {\n        // filteredList\n        this.query = !this.isTypeString(this.filteredList[this.selectedIdx])\n          ? this.filteredList[this.selectedIdx][this.searchKeyword]\n          : this.filteredList[this.selectedIdx];\n\n        this.saveHistory(this.filteredList[this.selectedIdx]);\n        this.select(this.filteredList[this.selectedIdx]);\n      } else {\n        // historyList\n        this.query = !this.isTypeString(this.historyList[this.selectedIdx])\n          ? this.historyList[this.selectedIdx][this.searchKeyword]\n          : this.historyList[this.selectedIdx];\n        this.saveHistory(this.historyList[this.selectedIdx]);\n        this.select(this.historyList[this.selectedIdx]);\n      }\n    }\n    this.isHistoryListVisible = false;\n    this.handleClose();\n  }\n\n  /**\n   * Esc click\n   */\n  onEsc() {\n    this.searchInput.nativeElement.blur();\n    this.handleClose();\n  }\n\n  /**\n   * Tab click\n   */\n  onTab() {\n    this.searchInput.nativeElement.blur();\n    this.handleClose();\n  }\n\n  /**\n   * Delete click\n   */\n  onDelete() {\n    this.isOpen = true;\n  }\n\n\n  /**\n   * Select item to save in localStorage\n   * @param selected\n   */\n  saveHistory(selected) {\n    if (this.historyIdentifier) {\n      // check if selected item exists in historyList\n      if (!this.historyList.some((item) => !this.isTypeString(item)\n        ? item[this.searchKeyword] == selected[this.searchKeyword] : item == selected)) {\n        this.saveHistoryToLocalStorage([selected, ...this.historyList]);\n\n        // check if items don't exceed max allowed number\n        if (this.historyList.length >= this.historyListMaxNumber) {\n          this.historyList.splice(this.historyList.length - 1, 1);\n          this.saveHistoryToLocalStorage([selected, ...this.historyList]);\n        }\n      } else {\n        // if selected item exists in historyList swap to top in array\n        if (!this.isTypeString(selected)) {\n          // object logic\n          const copiedHistoryList = this.historyList.slice(); // copy original historyList array\n          const selectedIndex = copiedHistoryList.map((item) => item[this.searchKeyword]).indexOf(selected[this.searchKeyword]);\n          copiedHistoryList.splice(selectedIndex, 1);\n          copiedHistoryList.splice(0, 0, selected);\n          this.saveHistoryToLocalStorage([...copiedHistoryList]);\n        } else {\n          // string logic\n          const copiedHistoryList = this.historyList.slice(); // copy original historyList array\n          copiedHistoryList.splice(this.historyList.indexOf(selected), 1);\n          copiedHistoryList.splice(0, 0, selected);\n          this.saveHistoryToLocalStorage([...copiedHistoryList]);\n        }\n      }\n    }\n  }\n\n  /**\n   * Save item in localStorage\n   * @param selected\n   */\n  saveHistoryToLocalStorage(selected) {\n    window.localStorage.setItem(\n      `${this.historyIdentifier}`,\n      JSON.stringify(selected)\n    );\n  }\n\n  /**\n   * Remove item from localStorage\n   * @param index\n   * @param e event\n   */\n  removeHistoryItem(index, e) {\n    e.stopPropagation();\n    this.historyList = this.historyList.filter((v, i) => i !== index);\n    this.saveHistoryToLocalStorage(this.historyList);\n    if (this.historyList.length == 0) {\n      window.localStorage.removeItem(`${this.historyIdentifier}`);\n      this.filterList();\n    }\n  }\n\n  /**\n   * Reset localStorage\n   * @param e event\n   */\n  resetHistoryList(e) {\n    e.stopPropagation();\n    this.historyList = [];\n    window.localStorage.removeItem(`${this.historyIdentifier}`);\n    this.filterList();\n  }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'highlight'\n})\nexport class HighlightPipe implements PipeTransform {\n  transform(text: any, search: any, searchKeyword?: any): any {\n    let pattern = search.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n    pattern = pattern.split(' ').filter((t) => {\n      return t.length > 0;\n    }).join('|');\n    const regex = new RegExp(pattern, 'gi');\n\n    if (!search) {\n      return text;\n    }\n\n    if (searchKeyword) {\n      const name = text[searchKeyword].replace(regex, (match) => `<b>${match}</b>`);\n      // copy original object\n      const text2 = {...text};\n      // set bold value into searchKeyword of copied object\n      text2[searchKeyword] = name;\n      return text2;\n    } else {\n      return search ? text.replace(regex, (match) => `<b>${match}</b>`) : text;\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {AutocompleteLibComponent} from './autocomplete-lib.component';\nimport {AutocompleteComponent} from './autocomplete/autocomplete.component';\nimport {FormsModule} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport {HighlightPipe} from './autocomplete/highlight.pipe';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  declarations: [AutocompleteLibComponent, AutocompleteComponent, HighlightPipe],\n  exports: [AutocompleteLibComponent, AutocompleteComponent, HighlightPipe]\n})\nexport class AutocompleteLibModule {\n}\n"]}