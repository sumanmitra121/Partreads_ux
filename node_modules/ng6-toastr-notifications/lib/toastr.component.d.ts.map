{"version":3,"file":"toastr.component.d.ts","sources":["toastr.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ChangeDetectorRef, NgZone, OnDestroy } from \"@angular/core\";\r\nimport { AnimationEvent } from \"@angular/animations\";\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Toastr } from \"./toastr\";\r\nimport { ToastrOptions } from \"./toastr.options\";\r\nexport declare class ToastrComponent implements OnDestroy {\r\n    sanitizer: DomSanitizer;\r\n    private cdr;\r\n    private _zone;\r\n    messageClass: string;\r\n    titleClass: string;\r\n    position: string;\r\n    maxShown: number;\r\n    newestOnTop: boolean;\r\n    animate: string;\r\n    toastrs: Toastr[];\r\n    private _fresh;\r\n    onToastClicked: (toast: Toastr) => void;\r\n    private _onEnter;\r\n    private _onExit;\r\n    constructor(sanitizer: DomSanitizer, cdr: ChangeDetectorRef, _zone: NgZone, options: ToastrOptions);\r\n    onEnter(): Observable<void>;\r\n    onExit(): Observable<void>;\r\n    addToastr(toast: Toastr): void;\r\n    removeToastr(toast: Toastr): void;\r\n    removeAllToasts(): void;\r\n    clicked(toast: Toastr): void;\r\n    anyToast(): boolean;\r\n    findToast(toastId: number): Toastr | void;\r\n    onAnimationEnd(event: AnimationEvent): void;\r\n    private _ngExit();\r\n    ngOnDestroy(): void;\r\n}\r\n"]}