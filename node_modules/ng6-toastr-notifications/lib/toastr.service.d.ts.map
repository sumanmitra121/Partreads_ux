{"version":3,"file":"toastr.service.d.ts","sources":["toastr.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ApplicationRef, ComponentFactoryResolver, Injector, NgZone } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { ToastrOptions } from \"./toastr.options\";\r\nimport { Toastr } from \"./toastr\";\r\nexport interface IImplicitContext<T> {\r\n    $implicit?: T;\r\n}\r\nexport declare class ToastrManager {\r\n    private _applicationRef;\r\n    private _componentFactoryResolver;\r\n    private _injector;\r\n    private ngZone;\r\n    private options;\r\n    toastrContainers: Array<any>;\r\n    private index;\r\n    private toastClicked;\r\n    constructor(_applicationRef: ApplicationRef, _componentFactoryResolver: ComponentFactoryResolver, _injector: Injector, ngZone: NgZone, options: ToastrOptions);\r\n    private createToastrComponent<T>(type, providers?);\r\n    private attachToApplication<T>(componentRef);\r\n    private detachFromApplication<T>(componentRef);\r\n    private isToastrContainerExist(position);\r\n    private getToastrComponentRef(position);\r\n    createTimeout(toast: Toastr): any;\r\n    setupToast(toast: Toastr, options?: any): Toastr;\r\n    private clearToast(toast);\r\n    private clearAllToasts();\r\n    private dispose(toastrComponentRef);\r\n    private _onToastClicked(toast);\r\n    dismissToastr(toast: Toastr): void;\r\n    dismissAllToastr(): void;\r\n    onClickToast(): Observable<Toastr>;\r\n    showToastr(toastr: Toastr, options?: Object): Promise<Toastr>;\r\n    errorToastr(message: string, title?: string, options?: any): Toastr;\r\n    infoToastr(message: string, title?: string, options?: any): Toastr;\r\n    successToastr(message: string, title?: string, options?: any): Toastr;\r\n    warningToastr(message: string, title?: string, options?: any): Toastr;\r\n    customToastr(message: string, title?: string, options?: any): Toastr;\r\n}\r\n"]}