{"version":3,"file":"ngx-editor-schema.umd.js","sources":["../../../projects/ngx-editor/schema/marks.ts","../../../projects/ngx-editor/schema/nodes.ts","../../../projects/ngx-editor/schema/index.ts","../../../projects/ngx-editor/schema/ngx-editor-schema.ts"],"sourcesContent":["import { DOMOutputSpec, Mark, MarkSpec } from 'prosemirror-model';\n\n// :: MarkSpec A link. Has `href` and `title` attributes. `title`\n// defaults to the empty string. Rendered and parsed as an `<a>`\n// element.\nconst link: MarkSpec = {\n  attrs: {\n    href: {},\n    title: { default: null },\n    target: { default: '_blank' }\n  },\n  inclusive: false,\n  parseDOM: [\n    {\n      tag: 'a[href]',\n      getAttrs(dom: HTMLElement): Record<string, any> {\n        return {\n          href: dom.getAttribute('href'),\n          title: dom.getAttribute('title'),\n          target: dom.getAttribute('target'),\n        };\n      }\n    }],\n  toDOM(node): DOMOutputSpec {\n    const { href, title, target } = node.attrs;\n    return ['a', { href, title, target }, 0];\n  }\n};\n\n// :: MarkSpec An emphasis mark. Rendered as an `<em>` element.\n// Has parse rules that also match `<i>` and `font-style: italic`.\nconst em: MarkSpec = {\n  parseDOM: [\n    { tag: 'i' },\n    { tag: 'em' },\n    { style: 'font-style=italic' }\n  ],\n  toDOM(): DOMOutputSpec {\n    return ['em', 0];\n  }\n};\n\n// :: MarkSpec A strong mark. Rendered as `<strong>`, parse rules\n// also match `<b>` and `font-weight: bold`.\nconst strong: MarkSpec = {\n  parseDOM: [\n    { tag: 'strong' },\n    // This works around a Google Docs misbehavior where\n    // pasted content will be inexplicably wrapped in `<b>`\n    // tags with a font-weight normal.\n    {\n      tag: 'b',\n      getAttrs: (dom: HTMLElement): Record<string, any> => {\n        return dom.style.fontWeight !== 'normal' && null;\n      },\n    },\n    {\n      style: 'font-weight',\n      getAttrs: (value: string): Record<string, any> => {\n        return /^(bold(er)?|[5-9]\\d{2,})$/.test(value) && null;\n      }\n    }\n  ],\n  toDOM(): DOMOutputSpec {\n    return ['strong', 0];\n  }\n};\n\n// :: MarkSpec Code font mark. Represented as a `<code>` element.\nconst code: MarkSpec = {\n  parseDOM: [\n    { tag: 'code' }\n  ],\n  toDOM(): DOMOutputSpec {\n    return ['code', 0];\n  }\n};\n\n// :: MarkSpec An underline mark. Rendered as an `<u>` element.\n// Has parse rules that also match `text-decoration: underline`.\nconst u: MarkSpec = {\n  parseDOM: [\n    { tag: 'u' },\n    { style: 'text-decoration=underline' }\n  ],\n  toDOM(): DOMOutputSpec {\n    return ['u', 0];\n  }\n};\n\n// :: MarkSpec An underline mark. Rendered as an `<s>` element.\n// Has parse rules that also match `strike`, `del` tag and css property `text-decoration: line-through`.\nconst s: MarkSpec = {\n  parseDOM: [\n    { tag: 's' },\n    { tag: 'strike' },\n    { style: 'text-decoration=line-through' }\n  ],\n  toDOM(): DOMOutputSpec {\n    return ['s', 0];\n  }\n};\n\nconst textColor: MarkSpec = {\n  attrs: {\n    color: {\n      default: null\n    },\n  },\n  parseDOM: [\n    {\n      style: 'color',\n      getAttrs: (value: string): Record<string, any> => {\n        return { color: value };\n      }\n    }\n  ],\n  toDOM(mark: Mark): DOMOutputSpec {\n    const { color } = mark.attrs;\n    return ['span', { style: `color:${color};` }, 0];\n  },\n};\n\nconst textBackgroundColor: MarkSpec = {\n  attrs: {\n    backgroundColor: {\n      default: null\n    },\n  },\n  parseDOM: [\n    {\n      style: 'background-color',\n      getAttrs: (value: string): Record<string, any> => {\n        return { backgroundColor: value };\n      }\n    }\n  ],\n  toDOM(mark: Mark): DOMOutputSpec {\n    const { backgroundColor } = mark.attrs;\n    return ['span', { style: `background-color:${backgroundColor};` }, 0];\n  },\n};\n\nconst marks = {\n  link,\n  em,\n  strong,\n  code,\n  u,\n  s,\n  text_color: textColor,\n  text_background_color: textBackgroundColor\n};\n\nexport default marks;\n","import { DOMOutputSpec, Node as ProseMirrorNode, NodeSpec } from 'prosemirror-model';\nimport * as sl from 'prosemirror-schema-list';\n\nimport { toStyleString } from 'ngx-editor/utils';\n\nconst doc: NodeSpec = {\n  content: 'block+'\n};\n\n// :: NodeSpec The text node.\nconst text: NodeSpec = {\n  group: 'inline'\n};\n\n// :: NodeSpec A plain paragraph textblock. Represented in the DOM\n// as a `<p>` element.\nconst paragraph: NodeSpec = {\n  content: 'inline*',\n  group: 'block',\n  attrs: {\n    align: {\n      default: null,\n    }\n  },\n  parseDOM: [\n    {\n      tag: 'p',\n      getAttrs(dom: HTMLElement): Record<string, any> {\n        const { textAlign } = dom.style;\n        const align = dom.getAttribute('align') || textAlign || null;\n\n        return {\n          align\n        };\n      }\n    }\n  ],\n  toDOM(node): DOMOutputSpec {\n    const { align } = node.attrs;\n\n    const styles: Partial<CSSStyleDeclaration> = {\n      textAlign: align !== 'left' ? align : null\n    };\n    const style = toStyleString(styles) || null;\n\n    return ['p', { style }, 0];\n  }\n};\n\n// :: NodeSpec A blockquote (`<blockquote>`) wrapping one or more blocks.\nconst blockquote: NodeSpec = {\n  content: 'block+',\n  group: 'block',\n  defining: true,\n  parseDOM: [{ tag: 'blockquote' }],\n  toDOM(): DOMOutputSpec {\n    return ['blockquote', 0];\n  }\n};\n\n// :: NodeSpec A horizontal rule (`<hr>`).\nconst horizontalRule: NodeSpec = {\n  group: 'block',\n  parseDOM: [{ tag: 'hr' }],\n  toDOM(): DOMOutputSpec {\n    return ['hr'];\n  }\n};\n\n// :: NodeSpec A heading textblock, with a `level` attribute that\n// should hold the number 1 to 6. Parsed and serialized as `<h1>` to\n// `<h6>` elements.\nconst heading: NodeSpec = {\n  attrs: {\n    level: {\n      default: 1\n    },\n    align: {\n      default: null,\n    }\n  },\n  content: 'inline*',\n  group: 'block',\n  defining: true,\n  parseDOM: [\n    {\n      tag: 'h1',\n      getAttrs(dom: HTMLElement): Record<string, any> {\n        const { textAlign } = dom.style;\n        const align = dom.getAttribute('align') || textAlign || null;\n\n        return {\n          level: 1,\n          align\n        };\n      }\n    },\n    {\n      tag: 'h2',\n      getAttrs(dom: HTMLElement): Record<string, any> {\n        const { textAlign } = dom.style;\n        const align = dom.getAttribute('align') || textAlign || null;\n\n        return {\n          level: 2,\n          align\n        };\n      }\n    },\n    {\n      tag: 'h3',\n      getAttrs(dom: HTMLElement): Record<string, any> {\n        const { textAlign } = dom.style;\n        const align = dom.getAttribute('align') || textAlign || null;\n\n        return {\n          level: 3,\n          align\n        };\n      }\n    },\n    {\n      tag: 'h4',\n      getAttrs(dom: HTMLElement): Record<string, any> {\n        const { textAlign } = dom.style;\n        const align = dom.getAttribute('align') || textAlign || null;\n\n        return {\n          level: 4,\n          align\n        };\n      }\n    },\n    {\n      tag: 'h5',\n      getAttrs(dom: HTMLElement): Record<string, any> {\n        const { textAlign } = dom.style;\n        const align = dom.getAttribute('align') || textAlign || null;\n\n        return {\n          level: 5,\n          align\n        };\n      }\n    },\n    {\n      tag: 'h6',\n      getAttrs(dom: HTMLElement): Record<string, any> {\n        const { textAlign } = dom.style;\n        const align = dom.getAttribute('align') || textAlign || null;\n\n        return {\n          level: 6,\n          align\n        };\n      }\n    },\n  ],\n  toDOM(node): DOMOutputSpec {\n    const { level, align } = node.attrs;\n\n    const styles: Partial<CSSStyleDeclaration> = {\n      textAlign: align !== 'left' ? align : null\n    };\n    const style = toStyleString(styles) || null;\n\n    return ['h' + level, { style }, 0];\n  }\n};\n\n// :: NodeSpec A code listing. Disallows marks or non-text inline\n// nodes by default. Represented as a `<pre>` element with a\n// `<code>` element inside of it.\nconst codeBlock: NodeSpec = {\n  content: 'text*',\n  marks: '',\n  group: 'block',\n  code: true,\n  defining: true,\n  parseDOM: [\n    {\n      tag: 'pre',\n      preserveWhitespace: 'full'\n    }\n  ],\n  toDOM(): DOMOutputSpec {\n    return ['pre', ['code', 0]];\n  }\n};\n\n// :: NodeSpec A hard line break, represented in the DOM as `<br>`.\nconst hardBreak: NodeSpec = {\n  inline: true,\n  group: 'inline',\n  selectable: false,\n  parseDOM: [{ tag: 'br' }],\n  toDOM(): DOMOutputSpec {\n    return ['br'];\n  }\n};\n\n// :: NodeSpec An inline image (`<img>`) node. Supports `src`,\n// `alt`, and `href` attributes. The latter two default to the empty\n// string.\nexport const image: NodeSpec = {\n  inline: true,\n  attrs: {\n    src: {},\n    alt: { default: null },\n    title: { default: null },\n    width: { default: null }\n  },\n  group: 'inline',\n  draggable: true,\n  parseDOM: [\n    {\n      tag: 'img[src]',\n      getAttrs(dom: HTMLElement): Record<string, any> {\n        return {\n          src: dom.getAttribute('src'),\n          title: dom.getAttribute('title'),\n          alt: dom.getAttribute('alt'),\n          width: dom.getAttribute('width')\n        };\n      }\n    }\n  ],\n  toDOM(node: ProseMirrorNode): DOMOutputSpec {\n    const { src, alt, title, width } = node.attrs;\n    return ['img', { src, alt, title, width }];\n  }\n};\n\nconst listItem = {\n  ...sl.listItem,\n  content: 'paragraph block*'\n};\n\nconst orderedList = {\n  ...sl.orderedList,\n  content: 'list_item+',\n  group: 'block'\n};\n\nconst bulletList = {\n  ...sl.bulletList,\n  content: 'list_item+',\n  group: 'block'\n};\n\nconst nodes = {\n  doc,\n  text,\n  paragraph,\n  blockquote,\n  horizontal_rule: horizontalRule,\n  heading,\n  hard_break: hardBreak,\n  code_block: codeBlock,\n  image,\n  list_item: listItem,\n  ordered_list: orderedList,\n  bullet_list: bulletList\n};\n\nexport default nodes;\n","import { Schema } from 'prosemirror-model';\n\nimport marks from './marks';\nimport nodes from './nodes';\n\nconst schema = new Schema({\n  marks,\n  nodes\n});\n\nexport default schema;\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["toStyleString","sl.listItem","sl.orderedList","sl.bulletList","Schema"],"mappings":"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"}