{"version":3,"sources":["../../../projects/ngx-editor/src/lib/plugins/editable.ts","../../../projects/ngx-editor/src/lib/plugins/placeholder.ts","../../../projects/ngx-editor/src/lib/plugins/attributes.ts","../../../projects/ngx-editor/src/lib/plugins/focus.ts","../../../projects/ngx-editor/src/lib/plugins/blur.ts","../../../projects/ngx-editor/src/lib/components/image-view/image-view.component.ts","../../../projects/ngx-editor/src/lib/plugins/image.ts","../../../projects/ngx-editor/src/lib/plugins/link.ts","../../../projects/ngx-editor/src/lib/parsers.ts","../../../projects/ngx-editor/src/lib/editor.component.ts","../../../projects/ngx-editor/src/lib/modules/menu/menu.service.ts","../../../projects/ngx-editor/src/lib/modules/menu/menu.component.ts","../../../projects/ngx-editor/src/lib/icons/bold.ts","../../../projects/ngx-editor/src/lib/icons/index.ts","../../../projects/ngx-editor/src/lib/icons/italic.ts","../../../projects/ngx-editor/src/lib/icons/code.ts","../../../projects/ngx-editor/src/lib/icons/underline.ts","../../../projects/ngx-editor/src/lib/icons/strike.ts","../../../projects/ngx-editor/src/lib/icons/ordered_list.ts","../../../projects/ngx-editor/src/lib/icons/bullet_list.ts","../../../projects/ngx-editor/src/lib/icons/quote.ts","../../../projects/ngx-editor/src/lib/icons/link.ts","../../../projects/ngx-editor/src/lib/icons/unlink.ts","../../../projects/ngx-editor/src/lib/icons/image.ts","../../../projects/ngx-editor/src/lib/icons/align_left.ts","../../../projects/ngx-editor/src/lib/icons/align_center.ts","../../../projects/ngx-editor/src/lib/icons/align_right.ts","../../../projects/ngx-editor/src/lib/icons/align_justify.ts","../../../projects/ngx-editor/src/lib/icons/text_color.ts","../../../projects/ngx-editor/src/lib/icons/color_fill.ts","../../../projects/ngx-editor/src/lib/pipes/sanitize/sanitize-html.pipe.ts","../../../projects/ngx-editor/src/lib/modules/menu/floating-menu/floating-menu.component.ts","../../../projects/ngx-editor/src/lib/Locals.ts","../../../projects/ngx-editor/src/lib/editor.service.ts","../../../projects/ngx-editor/src/lib/commands/Mark.ts","../../../projects/ngx-editor/src/lib/commands/Blockquote.ts","../../../projects/ngx-editor/src/lib/commands/ListItem.ts","../../../projects/ngx-editor/src/lib/commands/Heading.ts","../../../projects/ngx-editor/src/lib/commands/TextAlign.ts","../../../projects/ngx-editor/src/lib/commands/Link.ts","../../../projects/ngx-editor/src/lib/commands/Image.ts","../../../projects/ngx-editor/src/lib/commands/TextColor.ts","../../../projects/ngx-editor/src/lib/commands/index.ts","../../../projects/ngx-editor/src/lib/modules/menu/MenuCommands.ts","../../../projects/ngx-editor/src/lib/modules/menu/toggle-command/toggle-command.component.ts","../../../projects/ngx-editor/src/lib/modules/menu/link/link.component.ts","../../../projects/ngx-editor/src/lib/modules/menu/dropdown/dropdown.component.ts","../../../projects/ngx-editor/src/lib/modules/menu/image/image.component.ts","../../../projects/ngx-editor/src/lib/modules/menu/color-picker/color-picker.component.ts","../../../projects/ngx-editor/src/lib/modules/menu/bubble/bubble.component.ts","../../../projects/ngx-editor/src/lib/modules/menu/menu.module.ts","../../../projects/ngx-editor/src/lib/editor.module.ts","../../../projects/ngx-editor/src/lib/validators.ts","../../../node_modules/tslib/tslib.es6.js","../../../projects/ngx-editor/src/lib/EditorCommands.ts","../../../projects/ngx-editor/src/lib/defaultPlugins.ts","../../../projects/ngx-editor/src/lib/Editor.ts"],"names":["editablePlugin","editable","Plugin","key","PluginKey","state","init","apply","tr","previousVal","_a","getMeta","props","this","getState","attributes","class","placeholderPlugin","text","decorations","doc","textContent","childCount","placeholder","DecorationSet","empty","descendants","node","pos","type","isBlock","length","placeholderNode","Decoration","nodeSize","data-placeholder","data-align","attrs","align","push","create","attributesPlugin","focusPlugin","cb","handleDOMEvents","focus","blurPlugin","blur","ImageViewComponent","alt","title","outerWidth","selected","imageResize","EventEmitter","prototype","startResizing","e","direction","preventDefault","resizeImage","evt","_this","startX","pageX","startWidth","imgEl","nativeElement","clientWidth","isLeftResize","width","window","getComputedStyle","view","dom","editorWidth","parseInt","onMouseMove","diffInPx","computedWidth","onMouseUp","document","removeEventListener","emit","addEventListener","Component","args","selector","template","Input","Output","ViewChild","static","ImageRezieView","getPos","injector","updating","handleResize","dispatch","transaction","setNodeMarkup","undefined","src","imageComponentRef","instance","resolvedPos","resolve","newSelection","NodeSelection","setSelection","createElement","componentFactoryResolver","get","ComponentFactoryResolver","applicationRef","ApplicationRef","factory","resolveComponentFactory","attachView","hostView","setNodeAttributes","resizeSubscription","subscribe","computeChanges","prevAttrs","newAttrs","JSON","stringify","update","ignoreMutation","selectNode","deselectNode","destroy","unsubscribe","detachView","imagePlugin","nodeViews","image","HTTP_LINK_REGEX","linkify","fragment","linkified","forEach","child","isText","match","exec","start","index","end","link","schema","marks","cut","urlText","slice","mark","href","addToSet","copy","content","Fragment","fromArray","linkPlugin","transformPasted","Slice","openStart","openEnd","emptyDoc","toHTML","json","inputSchema","defaultSchema","contentNode","nodeFromJSON","html","DOMSerializer","fromSchema","serializeFragment","div","appendChild","innerHTML","toDoc","el","DOMParser","parse","toJSON","parseContent","value","docJson","NgxEditorComponent","_renderer","_injector","_elementRef","focusOut","focusIn","subscriptions","onChange","onTouched","writeValue","outputFormat","editor","setContent","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","setMeta","setProperty","handleChange","jsonDoc","setPlaceholder","registerPlugins","registerPlugin","plugins.editable","plugins.placeholder","plugins.attributes","plugins.focus","plugins.blur","plugins.image","plugins.link","ngOnInit","Error","ngxEditor","contentChangeSubscription","valueChanges","ngOnChanges","changes","isFirstChange","currentValue","ngOnDestroy","subscription","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","encapsulation","ViewEncapsulation","None","Renderer2","Injector","ElementRef","MenuService","customMenuRefChange","Subject","setCustomMenuRef","c","next","Injectable","providedIn","DEFAULT_TOOLBAR","heading","DEFAULT_COLOR_PRESETS","MenuComponent","menuService","toolbar","colorPresets","disabled","customMenuRef","dropdownPlacement","toggleCommands","iconContainerClass","dropdownContainerClass","seperatorClass","Object","defineProperty","colors","color","row","Math","floor","isDropDown","item","getDropdownItems","icons","bold","italic","code","underline","strike","ordered_list","bullet_list","blockquote","unlink","align_left","align_center","align_right","align_justify","text_color","color_fill","Icon","name","fill","getPath","SanitizeHtmlPipe","sanitizer","transform","bypassSecurityTrustHtml","Pipe","DomSanitizer","FloatingMenuComponent","sanitizeHTML","posLeft","posTop","showMenu","dragging","execulableItems","activeItems","visibility","opacity","top","left","onMouseDown","contains","target","onKeyDown","hide","useUpdate","onKeyUp","getIcon","icon","show","calculateBubblePosition","from","selection","bubbleEl","bubble","getBoundingClientRect","box","parentElement","coordsAtPos","right","bubbleHeight","height","marginBottom","hasFocus","updateSubscription","fromEvent","pipe","throttleTime","asyncScheduler","leading","trailing","HostBinding","HostListener","defaults","h1","h2","h3","h4","h5","h6","background_color","url","openInNewTab","insert","altText","remove","Locals","newLocals","locals","assign","NgxEditorService","config","NgxEditorServiceConfig","decorators","Optional","provideMyServiceOptions","Mark","applyMark","toggle","toggleMark","isActive","isMarkActive","canExecute","Blockqote","nodes","lift","wrapIn","isNodeActive","ListItem","isBulletList","getType","liftListItem","list_item","wrapInList","Heading","level","setBlockType","nodePos","$from","before","nodeAt","paragraph","nodesInSelection","getSelectionNodes","supportedNodes","acitveNode","filter","includes","find","Boolean","TextAlign","to","applicable","nodesBetween","nodeType","docChanged","active","defaultOptions","strict","Link","linkAttrs","_b","replaceSelectionWith","scrollIntoView","options","removeLink","Image","imageAttrs","createAndFill","anchor","$anchor","nodeBefore","TextColor","isAtom","isLeaf","getActiveColors","getSelectionMarks","map","removeMark","backgroundColor","STRONG","EM","CODE","UNDERLINE","STRIKE","BLOCKQUOTE","Blockquote","UL","OL","H1","H2","H3","H4","H5","H6","ALIGN_LEFT","ALIGN_CENTER","ALIGN_RIGHT","ALIGN_JUSTIFY","LINK","IMAGE","TEXT_COLOR","TEXT_BACKGROUND_COLOR","ToggleCommands","Commands.STRONG","Commands.EM","Commands.CODE","Commands.UNDERLINE","Commands.STRIKE","Commands.BLOCKQUOTE","Commands.UL","Commands.OL","Commands.H1","Commands.H2","Commands.H3","Commands.H4","Commands.H5","Commands.H6","Commands.ALIGN_LEFT","Commands.ALIGN_CENTER","Commands.ALIGN_RIGHT","Commands.ALIGN_JUSTIFY","Commands.LINK","Commands.IMAGE","Commands.TEXT_COLOR","TextBackgroundColor","Commands.TEXT_BACKGROUND_COLOR","ToggleCommandComponent","ngxeService","command","toolbarItem","button","editorView","getTitle","LinkComponent","showPopup","form","FormGroup","FormControl","Validators","required","pattern","setText","selectedText","textBetween","patchValue","disable","LinkCommand","onDocumentClick","hideForm","getLabel","reset","enable","insertLink","getRawValue","DropdownComponent","isDropdownOpen","disabledItems","items","activeItem","getName","toggleDropdown","onClick","ImageComponent","ImageCommand","fillForm","_c","setValue","ColorPickerComponent","activeColors","getContrastYIQ","hexcolor","replace","substr","hidePopup","togglePopup","onColorSelect","BubbleComponent","commandName","stopPropagation","NgModule","imports","CommonModule","ReactiveFormsModule","declarations","exports","NGX_EDITOR_CONFIG_TOKEN","InjectionToken","NgxEditorModule","forRoot","ngModule","useValue","useFactory","deps","forChild","MenuModule","isEmptyInputValue","hasValidLength","isDocEmpty","firstChild","isTextblock","size","userSchema","control","maxLength","maxlength","requiredLength","actualLength","minLength","minlength","__read","o","n","m","Symbol","iterator","r","i","call","ar","done","error","__spread","arguments","concat","execMark","MarkCommand","EditorCommands","applyTrx","forceEmit","eq","updateState","insertText","insertNewLine","newLineCommands","newlineInCode","createParagraphNear","liftEmptyBlock","splitBlock","chainCommands","toggleBold","italics","toggleItalics","toggleUnderline","toggleStrike","toggleCode","toggleOrderedList","ListCommand","toggleBulletList","toggleHeading","HeadingCommand","updateLink","insertImage","textColor","TextColorCommand","removeTextColor","removeBackgroundColor","p","TextAlignCommand","insertHTML","element","trim","parseSlice","replaceRange","isMacOs","test","navigator","platform","blockQuoteRule","wrappingInputRule","orderedListRule","order","bulletListRule","codeBlockRule","textblockTypeInputRule","headingRule","maxLevel","RegExp","buildInputRules","rules","smartQuotes","ellipsis","emDash","code_block","inputRules","getKeyboardShortcuts","historyKeyMap","undo","redo","plugins","keymap","Mod-b","strong","Mod-i","em","Mod-`","Enter","splitListItem","Shift-Enter","exitCode","br","hard_break","Mod-[","Mod-]","sinkListItem","Tab","baseKeymap","history","getDefaultPlugins","keyboardShortcuts","DEFAULT_OPTIONS","defautlSchema","Editor","valueChangesSubject","updateSubject","createEditor","asObservable","isNil","newDoc","replaceWith","handleTransactions","_d","_e","defaultPlugins","EditorView","EditorState","dispatchTransaction","bind","plugin","newState","reconfigure"],"mappings":"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","sourcesContent":["import { EditorState, Plugin, PluginKey, Transaction } from 'prosemirror-state';\n\nconst editablePlugin = (editable = true): Plugin => {\n  return new Plugin({\n    key: new PluginKey('editable'),\n    state: {\n      init(): boolean {\n        return editable;\n      },\n      apply(tr: Transaction, previousVal: boolean): string {\n        return tr.getMeta('UPDATE_EDITABLE') ?? previousVal;\n      }\n    },\n    props: {\n      editable(state: EditorState): boolean {\n        return this.getState(state);\n      },\n      attributes(state: EditorState): Record<string, string> | null {\n        const isEnabled = this.getState(state);\n\n        if (isEnabled) {\n          return null;\n        }\n\n        return {\n          class: 'NgxEditor__Content--Disabled'\n        };\n      }\n    }\n  });\n};\n\nexport default editablePlugin;\n","import { Plugin, EditorState, PluginKey, Transaction } from 'prosemirror-state';\nimport { DecorationSet, Decoration } from 'prosemirror-view';\nimport { Node as ProseMirrorNode } from 'prosemirror-model';\n\nconst PLACEHOLDER_CLASSNAME = 'NgxEditor__Placeholder';\n\nconst placeholderPlugin = (text?: string): Plugin => {\n  return new Plugin({\n    key: new PluginKey('placeholder'),\n    state: {\n      init(): string {\n        return text ?? '';\n      },\n      apply(tr: Transaction, previousVal: string): string {\n        const placeholder = tr.getMeta('UPDATE_PLACEHOLDER') ?? previousVal;\n        return placeholder;\n      }\n    },\n    props: {\n      decorations(state: EditorState): DecorationSet {\n        const { doc } = state;\n        const { textContent, childCount } = doc;\n\n        const placeholder = this.getState(state);\n\n        if (!placeholder || childCount > 1) {\n          return DecorationSet.empty;\n        }\n\n        const decorations: Decoration[] = [];\n\n        const decorate = (node: ProseMirrorNode, pos: number) => {\n          if (node.type.isBlock && node.childCount === 0 && textContent.length === 0) {\n            const placeholderNode = Decoration.node(pos, (pos + node.nodeSize), {\n              class: PLACEHOLDER_CLASSNAME,\n              'data-placeholder': placeholder,\n              'data-align': node.attrs.align ?? null\n            });\n\n            decorations.push(placeholderNode);\n          }\n\n          return false;\n        };\n\n        doc.descendants(decorate);\n        return DecorationSet.create(doc, decorations);\n      }\n    }\n  });\n};\n\nexport default placeholderPlugin;\n","import { Plugin, PluginKey } from 'prosemirror-state';\n\nconst attributesPlugin = (attributes = {}): Plugin => {\n  return new Plugin({\n    key: new PluginKey('attributes'),\n    props: {\n      attributes\n    }\n  });\n};\n\nexport default attributesPlugin;\n","import { Plugin, PluginKey } from 'prosemirror-state';\n\nconst focusPlugin = (cb: () => void): Plugin => {\n  return new Plugin({\n    key: new PluginKey('focus'),\n    props: {\n      handleDOMEvents: {\n        focus: () => {\n          cb();\n          return false;\n        }\n      }\n    }\n  });\n};\n\nexport default focusPlugin;\n","import { Plugin, PluginKey } from 'prosemirror-state';\n\nconst blurPlugin = (cb: () => void):Plugin => {\n  return new Plugin({\n    key: new PluginKey('blur'),\n    props: {\n      handleDOMEvents: {\n        blur: () => {\n          cb();\n          return false;\n        }\n      }\n    }\n  });\n};\n\nexport default blurPlugin;\n","import {\n  Component, ElementRef, EventEmitter,\n  Input, Output, ViewChild\n} from '@angular/core';\nimport { EditorView } from 'prosemirror-view';\n\n@Component({\n  selector: 'ngx-image-view',\n  templateUrl: './image-view.component.html',\n  styleUrls: ['./image-view.component.scss']\n})\n\nexport class ImageViewComponent {\n  @Input() src: string;\n  @Input() alt = '';\n  @Input() title = '';\n  @Input() outerWidth = '';\n  @Input() selected = false;\n  @Input() view: EditorView;\n\n  @Output() imageResize = new EventEmitter();\n\n  @ViewChild('imgEl', { static: true }) imgEl: ElementRef;\n\n  startResizing(e: MouseEvent, direction: string): void {\n    e.preventDefault();\n    this.resizeImage(e, direction);\n  }\n\n  resizeImage(evt: MouseEvent, direction: string): void {\n    const startX = evt.pageX;\n    const startWidth = this.imgEl.nativeElement.clientWidth;\n\n    const isLeftResize = direction === 'left';\n\n    const { width } = window.getComputedStyle(this.view.dom);\n    const editorWidth = parseInt(width, 10);\n\n    const onMouseMove = (e: MouseEvent) => {\n      const currentX = e.pageX;\n      const diffInPx = currentX - startX;\n      const computedWidth = isLeftResize ? startWidth - diffInPx : startWidth + diffInPx;\n\n      // prevent image overflow the editor\n      // prevent resizng below 20px\n      if (computedWidth > editorWidth || computedWidth < 20) {\n        return;\n      }\n\n      this.outerWidth = `${computedWidth}px`;\n    };\n\n    const onMouseUp = (e: MouseEvent) => {\n      e.preventDefault();\n\n      document.removeEventListener('mousemove', onMouseMove);\n      document.removeEventListener('mouseup', onMouseUp);\n\n      this.imageResize.emit();\n    };\n\n    document.addEventListener('mousemove', onMouseMove);\n    document.addEventListener('mouseup', onMouseUp);\n  }\n}\n","import { ApplicationRef, ComponentFactoryResolver, ComponentRef, Injector } from '@angular/core';\nimport { Node as ProseMirrorNode } from 'prosemirror-model';\nimport { NodeSelection, Plugin, PluginKey } from 'prosemirror-state';\nimport { EditorView, NodeView } from 'prosemirror-view';\nimport { Subscription } from 'rxjs';\n\nimport { ImageViewComponent } from '../components/image-view/image-view.component';\n\nclass ImageRezieView implements NodeView {\n  dom: HTMLElement;\n  view: EditorView;\n  getPos: () => number;\n\n  applicationRef: ApplicationRef;\n  imageComponentRef: ComponentRef<ImageViewComponent>;\n  resizeSubscription: Subscription;\n\n  node: ProseMirrorNode;\n  updating = false;\n\n  constructor(node: ProseMirrorNode, view: EditorView, getPos: () => number, injector: Injector) {\n    const dom = document.createElement('image-view');\n\n    const componentFactoryResolver = injector.get(ComponentFactoryResolver);\n    this.applicationRef = injector.get(ApplicationRef);\n\n    // Create the component and wire it up with the element\n    const factory = componentFactoryResolver.resolveComponentFactory(ImageViewComponent);\n\n    this.imageComponentRef = factory.create(injector, [], dom);\n    // Attach to the view so that the change detector knows to run\n    this.applicationRef.attachView(this.imageComponentRef.hostView);\n\n    this.setNodeAttributes(node.attrs);\n    this.imageComponentRef.instance.view = view;\n\n    this.dom = dom;\n    this.view = view;\n    this.node = node;\n    this.getPos = getPos;\n\n    this.resizeSubscription = this.imageComponentRef.instance.imageResize.subscribe(() => {\n      this.handleResize();\n    });\n  }\n\n  private computeChanges(prevAttrs: Record<string, any>, newAttrs: Record<string, any>): boolean {\n    return JSON.stringify(prevAttrs) === JSON.stringify(newAttrs);\n  }\n\n  private setNodeAttributes(attrs: Record<string, any>): void {\n    this.imageComponentRef.instance.src = attrs.src;\n    this.imageComponentRef.instance.alt = attrs.alt;\n    this.imageComponentRef.instance.title = attrs.title;\n    this.imageComponentRef.instance.outerWidth = attrs.width;\n  }\n\n  handleResize = (): void => {\n    if (this.updating) {\n      return;\n    }\n\n    const { state, dispatch } = this.view;\n    const { tr } = state;\n\n    const transaction = tr.setNodeMarkup(this.getPos(), undefined, {\n      src: this.imageComponentRef.instance.src,\n      width: this.imageComponentRef.instance.outerWidth\n    });\n\n    const resolvedPos = transaction.doc.resolve(this.getPos());\n    const newSelection = new NodeSelection(resolvedPos);\n\n    transaction.setSelection(newSelection);\n    dispatch(transaction);\n  }\n\n  update(node: ProseMirrorNode): boolean {\n    if (node.type !== this.node.type) {\n      return false;\n    }\n\n    this.node = node;\n\n    const changed = this.computeChanges(this.node.attrs, node.attrs);\n    if (changed) {\n      this.updating = true;\n      this.setNodeAttributes(node.attrs);\n      this.updating = false;\n    }\n    return true;\n  }\n\n  ignoreMutation(): boolean {\n    return true;\n  }\n\n  selectNode(): void {\n    this.imageComponentRef.instance.selected = true;\n  }\n\n  deselectNode(): void {\n    this.imageComponentRef.instance.selected = false;\n  }\n\n  destroy(): void {\n    this.resizeSubscription.unsubscribe();\n    this.applicationRef.detachView(this.imageComponentRef.hostView);\n  }\n}\n\nconst imagePlugin = (injector: Injector): Plugin => {\n  return new Plugin({\n    key: new PluginKey('link'),\n    props: {\n      nodeViews: {\n        image: (node: ProseMirrorNode, view: EditorView, getPos: () => number) => {\n          return new ImageRezieView(node, view, getPos, injector);\n        },\n      }\n    }\n  });\n};\n\nexport default imagePlugin;\n","import { Fragment, Slice, Node as ProseMirrorNode } from 'prosemirror-model';\nimport { Plugin, PluginKey } from 'prosemirror-state';\n\nconst HTTP_LINK_REGEX = /((https?:\\/\\/)?[\\w-]+(\\.[\\w-]+)+\\.?(:\\d+)?(\\/\\S*)?)$/;\n\nconst linkify = (fragment: Fragment): Fragment => {\n  const linkified: ProseMirrorNode[] = [];\n\n  fragment.forEach((child: ProseMirrorNode) => {\n    if (child.isText) {\n      const text = child.text as string;\n      let pos = 0;\n\n      const match: RegExpMatchArray | null = HTTP_LINK_REGEX.exec(text);\n\n      if (match) {\n        const start = match.index;\n        const end = start + match[0].length;\n        const link = child.type.schema.marks.link;\n\n        if (start > 0) {\n          linkified.push(child.cut(pos, start));\n        }\n\n        const urlText = text.slice(start, end);\n        linkified.push(\n          child.cut(start, end).mark(link.create({ href: urlText }).addToSet(child.marks))\n        );\n        pos = end;\n      }\n\n      if (pos < text.length) {\n        linkified.push(child.cut(pos));\n      }\n    } else {\n      linkified.push(child.copy(linkify(child.content)));\n    }\n  });\n\n  return Fragment.fromArray(linkified);\n};\n\nconst linkPlugin = ():Plugin => {\n  return new Plugin({\n    key: new PluginKey('link'),\n    props: {\n      transformPasted: (slice: Slice) => {\n        return new Slice(linkify(slice.content), slice.openStart, slice.openEnd);\n      }\n    }\n  });\n};\n\nexport default linkPlugin;\n","import { DOMSerializer, Schema, DOMParser, Node as ProseMirrorNode } from 'prosemirror-model';\n\nimport defaultSchema from './schema';\n\nexport const emptyDoc = {\n  type: 'doc',\n  content: [\n    {\n      type: 'paragraph',\n    }\n  ],\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment\nexport const toHTML = (json: Record<string, any>, inputSchema?: Schema): string => {\n  const schema = inputSchema ?? defaultSchema;\n\n  const contentNode = schema.nodeFromJSON(json);\n  const html = DOMSerializer.fromSchema(schema).serializeFragment(contentNode.content);\n\n  const div = document.createElement('div');\n  div.appendChild(html);\n  return div.innerHTML;\n};\n\nexport const toDoc = (html: string, inputSchema?: Schema): Record<string, any> => {\n  const schema = inputSchema ?? defaultSchema;\n\n  const el = document.createElement('div');\n  el.innerHTML = html;\n\n  return DOMParser.fromSchema(schema).parse(el).toJSON();\n};\n\nexport const parseContent = (value: string | Record<string, any> | null, schema: Schema): ProseMirrorNode => {\n  if (!value) {\n    return schema.nodeFromJSON(emptyDoc);\n  }\n\n  if (typeof value !== 'string') {\n    return schema.nodeFromJSON(value);\n  }\n\n  const docJson = toDoc(value, schema);\n  return schema.nodeFromJSON(docJson);\n};\n","import {\n  Component, ViewChild, ElementRef,\n  forwardRef, OnDestroy, ViewEncapsulation,\n  OnInit, Output, EventEmitter,\n  Input, Renderer2, SimpleChanges,\n  OnChanges, Injector,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\nimport * as plugins from './plugins';\nimport { toHTML } from './parsers';\nimport Editor from './Editor';\n\n@Component({\n  selector: 'ngx-editor',\n  templateUrl: './editor.component.html',\n  styleUrls: ['./editor.component.scss'],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NgxEditorComponent),\n    multi: true\n  }],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class NgxEditorComponent implements ControlValueAccessor, OnInit, OnChanges, OnDestroy {\n  constructor(\n    private _renderer: Renderer2,\n    private _injector: Injector,\n    private _elementRef: ElementRef<HTMLElement>\n  ) { }\n\n  @ViewChild('ngxEditor', { static: true }) private ngxEditor: ElementRef;\n\n  @Input() editor: Editor;\n  @Input() outputFormat: 'doc' | 'html';\n  @Input() placeholder = 'Type Here...';\n\n  @Output() focusOut = new EventEmitter<void>();\n  @Output() focusIn = new EventEmitter<void>();\n\n  private subscriptions: Subscription[] = [];\n  private onChange: (value: Record<string, any> | string) => void = () => { /** */ };\n  private onTouched: () => void = () => { /** */ };\n\n  writeValue(value: Record<string, any> | string | null): void {\n    if (!this.outputFormat && typeof value === 'string') {\n      this.outputFormat = 'html';\n    }\n\n    this.editor.setContent(value);\n  }\n\n  registerOnChange(fn: () => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.setMeta('UPDATE_EDITABLE', !isDisabled);\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\n\n  private handleChange(jsonDoc: Record<string, any>): void {\n    if (this.outputFormat === 'html') {\n      const html = toHTML(jsonDoc, this.editor.schema);\n      this.onChange(html);\n      return;\n    }\n\n    this.onChange(jsonDoc);\n  }\n\n  private setMeta(key: string, value: any): void {\n    const { dispatch, state: { tr } } = this.editor.view;\n    dispatch(tr.setMeta(key, value));\n  }\n\n  private setPlaceholder(placeholder: string): void {\n    this.setMeta('UPDATE_PLACEHOLDER', placeholder);\n  }\n\n  private registerPlugins(): void {\n    this.editor.registerPlugin(plugins.editable());\n    this.editor.registerPlugin(plugins.placeholder(this.placeholder));\n\n    this.editor.registerPlugin(plugins.attributes({\n      class: 'NgxEditor__Content'\n    }));\n\n    this.editor.registerPlugin(plugins.focus(() => {\n      this.focusIn.emit();\n    }));\n\n    this.editor.registerPlugin(plugins.focus(() => {\n      this.focusIn.emit();\n    }));\n\n    this.editor.registerPlugin(plugins.blur(() => {\n      this.focusOut.emit();\n      this.onTouched();\n    }));\n\n    this.editor.registerPlugin(plugins.image(this._injector));\n    this.editor.registerPlugin(plugins.link());\n  }\n\n  ngOnInit(): void {\n    if (!this.editor) {\n      throw new Error('NgxEditor: Required editor instance');\n    }\n\n    this.registerPlugins();\n\n    this._renderer.appendChild(this.ngxEditor.nativeElement, this.editor.view.dom);\n\n    const contentChangeSubscription = this.editor.valueChanges.subscribe(jsonDoc => {\n      this.handleChange(jsonDoc);\n    });\n\n    this.subscriptions.push(contentChangeSubscription);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes?.placeholder && !changes.placeholder.isFirstChange()) {\n      this.setPlaceholder(changes.placeholder.currentValue);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(subscription => {\n      subscription.unsubscribe();\n    });\n  }\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport Editor from '../../Editor';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MenuService {\n  editor: Editor;\n  customMenuRefChange: Subject<TemplateRef<any>> = new Subject<TemplateRef<any>>();\n\n  setCustomMenuRef(c: TemplateRef<any>): void {\n    this.customMenuRefChange.next(c);\n  }\n}\n","import {\n  Component, Input,\n  OnInit, TemplateRef\n} from '@angular/core';\n\nimport { Toolbar, ToolbarItem, ToolbarDropdown } from '../../types';\n\nimport { MenuService } from './menu.service';\nimport Editor from '../../Editor';\n\nconst DEFAULT_TOOLBAR: Toolbar = [\n  ['bold', 'italic'],\n  ['code', 'blockquote'],\n  ['underline', 'strike'],\n  ['ordered_list', 'bullet_list'],\n  [{ heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] }],\n  ['link', 'image'],\n  ['text_color', 'background_color'],\n  ['align_left', 'align_center', 'align_right', 'align_justify'],\n];\n\nconst DEFAULT_COLOR_PRESETS = [\n  '#b60205',\n  '#d93f0b',\n  '#fbca04',\n  '#0e8a16',\n  '#006b75',\n  '#1d76db',\n  '#0052cc',\n  '#5319e7',\n  '#e99695',\n  '#f9d0c4',\n  '#fef2c0',\n  '#c2e0c6',\n  '#bfdadc',\n  '#c5def5',\n  '#bfd4f2',\n  '#d4c5f9'\n];\n\n@Component({\n  selector: 'ngx-editor-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss'],\n  providers: [MenuService]\n})\n\nexport class MenuComponent implements OnInit {\n  @Input() toolbar: Toolbar = DEFAULT_TOOLBAR;\n  @Input() colorPresets: string[] = DEFAULT_COLOR_PRESETS;\n  @Input() disabled = false;\n  @Input() editor: Editor;\n  @Input() customMenuRef: TemplateRef<any> | null = null;\n  @Input() dropdownPlacement: 'top' | 'bottom' = 'bottom';\n\n  toggleCommands: any[] = [\n    'bold', 'italic',\n    'underline', 'strike',\n    'code', 'blockquote',\n    'ordered_list', 'bullet_list',\n    'align_left', 'align_center', 'align_right', 'align_justify'\n  ];\n\n  iconContainerClass = ['NgxEditor__MenuItem', 'NgxEditor__MenuItem--Icon'];\n  dropdownContainerClass = ['NgxEditor__Dropdown'];\n  seperatorClass = ['NgxEditor__Seperator'];\n\n  constructor(private menuService: MenuService) { }\n\n  get presets(): string[][] {\n    const col = 8;\n    const colors: string[][] = [];\n\n    this.colorPresets.forEach((color, index) => {\n      const row = Math.floor(index / col);\n\n      if (!colors[row]) {\n        colors.push([]);\n      }\n\n      colors[row].push(color);\n    });\n\n    return colors;\n  }\n\n  isDropDown(item: ToolbarItem): boolean {\n    if ((item as ToolbarDropdown)?.heading) {\n      return true;\n    }\n\n    return false;\n  }\n\n  getDropdownItems(item: ToolbarItem): ToolbarDropdown {\n    return item as ToolbarDropdown;\n  }\n\n  ngOnInit(): void {\n    if (!this.editor) {\n      throw new Error('NgxEditor: Required editor instance');\n    }\n\n    this.menuService.editor = this.editor;\n  }\n}\n","export default `\n  <path d=\"M15.6 10.79c.97-.67 1.65-1.77 1.65-2.79 0-2.26-1.75-4-4-4H7v14h7.04c2.09 0 3.71-1.7 3.71-3.79 0-1.52-.86-2.82-2.15-3.42zM10 6.5h3c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-3v-3zm3.5 9H10v-3h3.5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5z\" />\n`;\n","// Icons source: https://material.io/\n\nimport bold from './bold';\nimport italic from './italic';\nimport code from './code';\nimport underline from './underline';\nimport strike from './strike';\nimport orderedList from './ordered_list';\nimport bulletList from './bullet_list';\nimport quote from './quote';\nimport link from './link';\nimport unlink from './unlink';\nimport image from './image';\nimport alignLeft from './align_left';\nimport alignCenter from './align_center';\nimport alignRight from './align_right';\nimport alignJustify from './align_justify';\nimport textColor from './text_color';\nimport colorFill from './color_fill';\n\nconst DEFAULT_ICON_HEIGHT = 20;\nconst DEFAULT_ICON_WIDTH = 20;\n\nconst icons: Record<string, any> = {\n  bold,\n  italic,\n  code,\n  underline,\n  strike,\n  ordered_list: orderedList,\n  bullet_list: bulletList,\n  blockquote: quote,\n  link,\n  unlink,\n  image,\n  align_left: alignLeft,\n  align_center: alignCenter,\n  align_right: alignRight,\n  align_justify: alignJustify,\n  text_color: textColor,\n  color_fill: colorFill\n};\n\nclass Icon {\n  static get(name: keyof typeof icons, fill = '#000'): string {\n    const path = icons[name] || '<path></path>';\n    return `\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill=${fill}\n        height=${DEFAULT_ICON_HEIGHT}\n        width=${DEFAULT_ICON_WIDTH}\n      >\n        ${path}\n      </svg>\n    `;\n  }\n\n  static getPath(name: keyof typeof icons): string {\n    const path = icons[name] || '<path></path>';\n    return path;\n  }\n\n}\n\nexport default Icon;\n","export default `\n  <path d=\"M10 4v3h2.21l-3.42 8H6v3h8v-3h-2.21l3.42-8H18V4z\" />\n`;\n","export default `\n<path d=\"M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z\"/>\n`;\n","export default `\n<path d=\"M12 17c3.31 0 6-2.69 6-6V3h-2.5v8c0 1.93-1.57 3.5-3.5 3.5S8.5 12.93 8.5 11V3H6v8c0 3.31 2.69 6 6 6zm-7 2v2h14v-2H5z\"/>\n`;\n","export default `\n<path d=\"M6.85,7.08C6.85,4.37,9.45,3,12.24,3c1.64,0,3,0.49,3.9,1.28c0.77,0.65,1.46,1.73,1.46,3.24h-3.01 c0-0.31-0.05-0.59-0.15-0.85c-0.29-0.86-1.2-1.28-2.25-1.28c-1.86,0-2.34,1.02-2.34,1.7c0,0.48,0.25,0.88,0.74,1.21 C10.97,8.55,11.36,8.78,12,9H7.39C7.18,8.66,6.85,8.11,6.85,7.08z M21,12v-2H3v2h9.62c1.15,0.45,1.96,0.75,1.96,1.97 c0,1-0.81,1.67-2.28,1.67c-1.54,0-2.93-0.54-2.93-2.51H6.4c0,0.55,0.08,1.13,0.24,1.58c0.81,2.29,3.29,3.3,5.67,3.3 c2.27,0,5.3-0.89,5.3-4.05c0-0.3-0.01-1.16-0.48-1.94H21V12z\"/>\n`;\n","export default `\n<path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\"/>\n`;\n","export default `\n<path d=\"M4 10.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0-6c-.83 0-1.5.67-1.5 1.5S3.17 7.5 4 7.5 5.5 6.83 5.5 6 4.83 4.5 4 4.5zm0 12c-.83 0-1.5.68-1.5 1.5s.68 1.5 1.5 1.5 1.5-.68 1.5-1.5-.67-1.5-1.5-1.5zM7 19h14v-2H7v2zm0-6h14v-2H7v2zm0-8v2h14V5H7z\"/>\n`;\n","export default `\n<path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M6 17h3l2-4V7H5v6h3zm8 0h3l2-4V7h-6v6h3z\"/>\n`;\n","export default `\n<path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"/>\n`;\n","export default `\n<path d=\"M17 7h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1 0 1.43-.98 2.63-2.31 2.98l1.46 1.46C20.88 15.61 22 13.95 22 12c0-2.76-2.24-5-5-5zm-1 4h-2.19l2 2H16zM2 4.27l3.11 3.11C3.29 8.12 2 9.91 2 12c0 2.76 2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1 0-1.59 1.21-2.9 2.76-3.07L8.73 11H8v2h2.73L13 15.27V17h1.73l4.01 4L20 19.74 3.27 3 2 4.27z\"/>\n`;\n","export default `\n<path d=\"M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.5 13.5l2.5 3.01L14.5 12l4.5 6H5l3.5-4.5z\"/>\n`;\n","export default `\n<path d=\"M15 15H3v2h12v-2zm0-8H3v2h12V7zM3 13h18v-2H3v2zm0 8h18v-2H3v2zM3 3v2h18V3H3z\"/>\n`;\n","export default `\n<path d=\"M7 15v2h10v-2H7zm-4 6h18v-2H3v2zm0-8h18v-2H3v2zm4-6v2h10V7H7zM3 3v2h18V3H3z\"/>\n`;\n","export default `\n<path d=\"M3 21h18v-2H3v2zm6-4h12v-2H9v2zm-6-4h18v-2H3v2zm6-4h12V7H9v2zM3 3v2h18V3H3z\"/>\n`;\n","export default `\n<path d=\"M3 21h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18V7H3v2zm0-6v2h18V3H3z\"/>\n`;\n","export default `\n<path d=\"M2,20h20v4H2V20z M5.49,17h2.42l1.27-3.58h5.65L16.09,17h2.42L13.25,3h-2.5L5.49,17z M9.91,11.39l2.03-5.79h0.12l2.03,5.79 H9.91z\"/>\n`;\n","export default `\n<path d=\"M16.56,8.94L7.62,0L6.21,1.41l2.38,2.38L3.44,8.94c-0.59,0.59-0.59,1.54,0,2.12l5.5,5.5C9.23,16.85,9.62,17,10,17 s0.77-0.15,1.06-0.44l5.5-5.5C17.15,10.48,17.15,9.53,16.56,8.94z M5.21,10L10,5.21L14.79,10H5.21z M19,11.5c0,0-2,2.17-2,3.5 c0,1.1,0.9,2,2,2s2-0.9,2-2C21,13.67,19,11.5,19,11.5z M2,20h20v4H2V20z\"/>\n`;\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'sanitizeHtml'\n})\n\nexport class SanitizeHtmlPipe implements PipeTransform {\n\n  constructor(private sanitizer: DomSanitizer) { }\n\n  transform(value: string): SafeHtml {\n    return this.sanitizer.bypassSecurityTrustHtml(value);\n  }\n}\n","import {\n  Component, ElementRef, HostBinding,\n  HostListener, Input, OnDestroy, OnInit\n} from '@angular/core';\nimport { SafeHtml } from '@angular/platform-browser';\nimport { NodeSelection } from 'prosemirror-state';\nimport { EditorView } from 'prosemirror-view';\nimport { asyncScheduler, fromEvent, Subscription } from 'rxjs';\nimport { throttleTime } from 'rxjs/operators';\n\nimport Editor from '../../../Editor';\nimport Icon from '../../../icons';\nimport { TBItems } from '../../../types';\nimport { SanitizeHtmlPipe } from '../../../pipes/sanitize/sanitize-html.pipe';\n\ninterface BubblePosition {\n  top: number;\n  left: number;\n}\n\n@Component({\n  selector: 'ngx-editor-floating-menu',\n  templateUrl: './floating-menu.component.html',\n  styleUrls: ['./floating-menu.component.scss']\n})\nexport class FloatingMenuComponent implements OnInit, OnDestroy {\n\n  constructor(public el: ElementRef<HTMLElement>, private sanitizeHTML: SanitizeHtmlPipe) { }\n\n  @HostBinding('style') get display(): Partial<CSSStyleDeclaration> {\n    return {\n      visibility: this.showMenu ? 'visible' : 'hidden',\n      opacity: this.showMenu ? '1' : '0',\n      top: this.posTop + 'px',\n      left: this.posLeft + 'px',\n    };\n  }\n\n  private get view(): EditorView {\n    return this.editor.view;\n  }\n\n  @Input() editor: Editor;\n\n  private posLeft = 0;\n  private posTop = 0;\n  private showMenu = false;\n  private updateSubscription: Subscription;\n  private dragging = false;\n  private resizeSubscription: Subscription;\n  execulableItems: TBItems[] = [];\n  activeItems: TBItems[] = [];\n\n  @HostListener('document:mousedown', ['$event']) onMouseDown(e: MouseEvent): void {\n    if (this.el.nativeElement.contains(e.target as Node)) {\n      e.preventDefault();\n      return;\n    }\n    this.dragging = true;\n  }\n\n  @HostListener('document:keydown') onKeyDown(): void {\n    this.dragging = true;\n    this.hide();\n  }\n\n  @HostListener('document:mouseup') onMouseUp(): void {\n    this.dragging = false;\n    this.useUpdate();\n  }\n\n  @HostListener('document:keyup') onKeyUp(): void {\n    this.dragging = false;\n    this.useUpdate();\n  }\n\n  private useUpdate(): void {\n    if (!this.view) {\n      return;\n    }\n\n    this.update(this.view);\n  }\n\n  getIcon(name: TBItems): SafeHtml {\n    const icon = Icon.getPath(name);\n    return this.sanitizeHTML.transform(icon);\n  }\n\n  private hide(): void {\n    this.showMenu = false;\n  }\n\n  private show(): void {\n    this.showMenu = true;\n  }\n\n  private calculateBubblePosition(view: EditorView): BubblePosition {\n    const { state: { selection } } = view;\n    const { from } = selection;\n\n    // the floating bubble itself\n    const bubbleEl = this.el.nativeElement;\n    const bubble = bubbleEl.getBoundingClientRect();\n\n    // The box in which the tooltip is positioned, to use as base\n    const box = bubbleEl.parentElement.getBoundingClientRect();\n\n    const start = view.coordsAtPos(from);\n\n    let left = start.left - box.left;\n\n    const overflowsRight = (\n      box.right < (start.left + bubble.width) ||\n      bubble.right > box.right\n    );\n\n    if (overflowsRight) {\n      left = box.width - bubble.width;\n    }\n\n    if (left < 0) {\n      left = 0;\n    }\n\n    const bubbleHeight = bubble.height + parseInt(getComputedStyle(bubbleEl).marginBottom, 10);\n    const top = (start.top - box.top) - bubbleHeight;\n\n    return {\n      left,\n      top\n    };\n  }\n\n  private update(view: EditorView): void {\n    const { state } = view;\n    const { selection } = state;\n    const { empty } = selection;\n\n    if (selection instanceof NodeSelection) {\n      if (selection.node.type.name === 'image') {\n        this.hide();\n        return;\n      }\n    }\n\n    const hasFocus = this.view.hasFocus();\n\n    if (!hasFocus || empty || this.dragging) {\n      this.hide();\n      return;\n    }\n\n    const { top, left } = this.calculateBubblePosition(this.view);\n\n    this.posLeft = left;\n    this.posTop = top;\n\n    this.show();\n  }\n\n  ngOnInit(): void {\n    if (!this.editor) {\n      throw new Error('NgxEditor: Required editor instance');\n    }\n\n    this.updateSubscription = this.editor.update\n      .subscribe((view) => {\n        this.update(view);\n      });\n\n    this.resizeSubscription = fromEvent(window, 'resize').pipe(\n      throttleTime(500, asyncScheduler, { leading: true, trailing: true })\n    ).subscribe(() => {\n      this.useUpdate();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.updateSubscription.unsubscribe();\n    this.resizeSubscription.unsubscribe();\n  }\n}\n","const defaults: Record<string, string> = {\n  // menu\n  bold: 'Bold',\n  italic: 'Italic',\n  code: 'Code',\n  underline: 'Underline',\n  strike: 'Strike',\n  blockquote: 'Blockquote',\n  bullet_list: 'Bullet List',\n  ordered_list: 'Ordered List',\n  heading: 'Heading',\n  h1: 'Header 1',\n  h2: 'Header 2',\n  h3: 'Header 3',\n  h4: 'Header 4',\n  h5: 'Header 5',\n  h6: 'Header 6',\n  align_left: 'Left Align',\n  align_center: 'Center Align',\n  align_right: 'Right Align',\n  align_justify: 'Justify',\n  text_color: 'Text Color',\n  background_color: 'Background Color',\n\n  // pupups, forms, others...\n  url: 'URL',\n  text: 'Text',\n  openInNewTab: 'Open in new tab',\n  insert: 'Insert',\n  altText: 'Alt Text',\n  title: 'Title',\n  remove: 'Remove',\n};\n\nexport type LocalsKeys = keyof typeof defaults;\n\nclass Locals {\n  locals = defaults;\n\n  constructor(newLocals: Partial<Record<LocalsKeys, string>> = {}) {\n    this.locals = Object.assign({}, defaults, newLocals);\n  }\n\n  get = (key: string):string => {\n    return this.locals[key] ?? '';\n  }\n}\n\nexport default Locals;\n","import { Injectable, Optional } from '@angular/core';\n\nimport { NgxEditorConfig} from './types';\nimport Locals from './Locals';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorServiceConfig {\n  public locals = {};\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxEditorService {\n  config: NgxEditorServiceConfig;\n\n  constructor(@Optional() config?: NgxEditorServiceConfig) {\n    this.config = config;\n  }\n\n  get locals(): Locals {\n    return new Locals(this.config.locals);\n  }\n}\n\nexport const provideMyServiceOptions = (config?: NgxEditorConfig): NgxEditorServiceConfig => {\n  return {\n    locals: config.locals ?? {}\n  };\n};\n","import { MarkType } from 'prosemirror-model';\nimport { EditorState, Transaction } from 'prosemirror-state';\nimport { Command, toggleMark } from 'prosemirror-commands';\n\nimport { applyMark } from 'ngx-editor/commands';\nimport { isMarkActive } from 'ngx-editor/helpers';\n\nclass Mark {\n  name: string;\n\n  constructor(name: string) {\n    this.name = name;\n  }\n\n  apply(): Command {\n    return (state: EditorState, dispatch?: (tr: Transaction) => void): boolean => {\n\n      const { schema } = state;\n\n      const type: MarkType = schema.marks[this.name];\n      if (!type) {\n        return false;\n      }\n\n      return applyMark(type)(state, dispatch);\n    };\n  }\n\n  toggle(): Command {\n    return (state: EditorState, dispatch?: (tr: Transaction) => void): boolean => {\n\n      const { schema } = state;\n\n      const type: MarkType = schema.marks[this.name];\n      if (!type) {\n        return false;\n      }\n\n      return toggleMark(type)(state, dispatch);\n    };\n  }\n\n  isActive(state: EditorState): boolean {\n    const { schema } = state;\n\n    const type: MarkType = schema.marks[this.name];\n\n    if (!type) {\n      return false;\n    }\n\n    return isMarkActive(state, type);\n  }\n\n  canExecute(state: EditorState): boolean {\n    return this.toggle()(state);\n  }\n}\n\nexport default Mark;\n","import { NodeType } from 'prosemirror-model';\nimport { EditorState, Transaction } from 'prosemirror-state';\nimport { Command, lift, wrapIn } from 'prosemirror-commands';\n\nimport { isNodeActive } from 'ngx-editor/helpers';\n\nclass Blockqote {\n  toggle(): Command {\n    return (state: EditorState, dispatch?: (tr: Transaction) => void): boolean => {\n      const { schema } = state;\n\n      const type: NodeType = schema.nodes.blockquote;\n      if (!type) {\n        return false;\n      }\n\n      if (this.isActive(state)) {\n        return lift(state, dispatch);\n      }\n\n      return wrapIn(type)(state, dispatch);\n    };\n  }\n\n  isActive(state: EditorState): boolean {\n    const { schema } = state;\n\n    const type: NodeType = schema.nodes.blockquote;\n    if (!type) {\n      return false;\n    }\n\n    return isNodeActive(state, type);\n  }\n\n  canExecute(state: EditorState): boolean {\n    return this.toggle()(state);\n  }\n}\n\nexport default Blockqote;\n","import { NodeType, Schema } from 'prosemirror-model';\nimport { EditorState, Transaction } from 'prosemirror-state';\nimport { liftListItem, wrapInList } from 'prosemirror-schema-list';\nimport { Command } from 'prosemirror-commands';\n\nimport { isNodeActive } from 'ngx-editor/helpers';\n\nclass ListItem {\n  isBulletList = false;\n\n  constructor(isBulletList = false) {\n    this.isBulletList = isBulletList;\n  }\n\n  getType(schema: Schema): NodeType {\n    return this.isBulletList ? schema.nodes.bullet_list : schema.nodes.ordered_list;\n  }\n\n  toggle(): Command {\n    return (state: EditorState, dispatch?: (tr: Transaction) => void): boolean => {\n\n      const { schema } = state;\n\n      const type = this.getType(schema);\n      if (!type) {\n        return false;\n      }\n\n      if (this.isActive(state)) {\n        return liftListItem(schema.nodes.list_item)(state, dispatch);\n      }\n\n      return wrapInList(type)(state, dispatch);\n    };\n  }\n\n  isActive(state: EditorState): boolean {\n    const { schema } = state;\n\n    const type = this.getType(schema);\n    if (!type) {\n      return false;\n    }\n\n    return isNodeActive(state, type);\n  }\n\n  canExecute(state: EditorState): boolean {\n    return this.toggle()(state);\n  }\n}\n\nexport default ListItem;\n","import { NodeType, Node as ProseMirrorNode } from 'prosemirror-model';\nimport { EditorState, Transaction } from 'prosemirror-state';\nimport { Command, setBlockType } from 'prosemirror-commands';\n\nimport { getSelectionNodes } from 'ngx-editor/helpers';\n\nexport type HeadingLevels = 1 | 2 | 3 | 4 | 5 | 6;\n\nclass Heading {\n  level: number;\n\n  constructor(level: HeadingLevels) {\n    this.level = level;\n  }\n\n  apply(): Command {\n    return (state: EditorState, dispatch?: (tr: Transaction) => void): boolean => {\n\n      const { schema } = state;\n\n      const type: NodeType = schema.nodes.heading;\n      if (!type) {\n        return false;\n      }\n\n      return setBlockType(type)(state, dispatch);\n    };\n  }\n\n  toggle(): Command {\n    return (state: EditorState, dispatch?: (tr: Transaction) => void): boolean => {\n\n      const { schema, selection, doc } = state;\n\n      const type: NodeType = schema.nodes.heading;\n      if (!type) {\n        return false;\n      }\n\n      const nodePos = selection.$from.before(1);\n      const node = doc.nodeAt(nodePos);\n\n      const attrs = node?.attrs ?? {};\n\n      if (this.isActive(state)) {\n        return setBlockType(schema.nodes.paragraph, attrs)(state, dispatch);\n      }\n\n      return setBlockType(type, { ...attrs, level: this.level })(state, dispatch);\n    };\n  }\n\n  isActive(state: EditorState): boolean {\n    const { schema } = state;\n    const nodesInSelection = getSelectionNodes(state);\n\n    const type: NodeType = schema.nodes.heading;\n    if (!type) {\n      return false;\n    }\n\n    const supportedNodes = [\n      type,\n      schema.nodes.text,\n      schema.nodes.blockquote\n    ];\n\n    // heading is a text node\n    // don't mark as active when it has more nodes\n    const nodes = nodesInSelection.filter(node => {\n      return supportedNodes.includes(node.type);\n    });\n\n    const acitveNode = nodes.find((node: ProseMirrorNode) => {\n      return node.attrs.level === this.level;\n    });\n\n    return Boolean(acitveNode);\n  }\n\n  canExecute(state: EditorState): boolean {\n    return this.toggle()(state);\n  }\n}\n\nexport default Heading;\n","import { EditorState, Transaction } from 'prosemirror-state';\nimport { Node } from 'prosemirror-model';\nimport { Command } from 'prosemirror-commands';\n\nimport { getSelectionNodes } from 'ngx-editor/helpers';\n\nexport type Align = 'left' | 'center' | 'right' | 'justify';\n\nclass TextAlign {\n  align: string;\n\n  constructor(align: Align) {\n    this.align = align;\n  }\n\n  toggle(): Command {\n    return (state: EditorState, dispatch?: (tr: Transaction) => void): boolean => {\n\n      const { doc, selection, tr, schema } = state;\n      const { from, to } = selection;\n\n      let applicable = false;\n\n      doc.nodesBetween(from, to, (node, pos) => {\n        const nodeType = node.type;\n        if ([schema.nodes.paragraph, schema.nodes.heading].includes(nodeType)) {\n          applicable = true;\n          tr.setNodeMarkup(pos, nodeType, { ...node.attrs, align: this.align });\n        }\n        return true;\n      });\n\n      if (!applicable) {\n        return false;\n      }\n\n      if (tr.docChanged) {\n        dispatch?.(tr);\n      }\n\n      return true;\n    };\n  }\n\n  isActive(state: EditorState): boolean {\n    const nodes = getSelectionNodes(state);\n\n    const active = nodes.find((node: Node) => {\n      return node.attrs.align === this.align;\n    });\n\n    return Boolean(active);\n  }\n\n  canExecute(state: EditorState): boolean {\n    return this.toggle()(state);\n  }\n}\n\nexport default TextAlign;\n","import { MarkType } from 'prosemirror-model';\nimport { EditorState } from 'prosemirror-state';\nimport { Command, toggleMark } from 'prosemirror-commands';\n\nimport { isMarkActive } from 'ngx-editor/helpers';\nimport { removeLink } from 'ngx-editor/commands';\nimport { Dispatch } from './types';\n\nconst defaultOptions = {\n  strict: true\n};\n\nexport interface LinkAttrs {\n  href: string;\n  title?: string;\n  target?: string;\n}\n\nclass Link {\n  update(attrs = {}): Command {\n    return (state: EditorState, dispatch?: Dispatch): boolean => {\n      const { schema, selection } = state;\n\n      const type: MarkType = schema.marks.link;\n      if (!type) {\n        return false;\n      }\n\n      if (selection.empty) {\n        return false;\n      }\n\n      return toggleMark(type, attrs)(state, dispatch);\n    };\n  }\n\n  insert(text: string, attrs: LinkAttrs): Command {\n    return (state: EditorState, dispatch?: Dispatch): boolean => {\n      const { schema, tr } = state;\n\n      const type: MarkType = schema.marks.link;\n      if (!type) {\n        return false;\n      }\n\n      const linkAttrs: LinkAttrs = {\n        href: attrs.href,\n        title: attrs.title ?? text,\n        target: attrs.target ?? '_blank'\n      };\n\n      const node = schema.text(text, [schema.marks.link.create(linkAttrs)]);\n\n      tr.replaceSelectionWith(node, false)\n        .scrollIntoView();\n\n      if (tr.docChanged) {\n        dispatch?.(tr);\n        return true;\n      }\n\n      return false;\n    };\n  }\n\n  isActive(state: EditorState, options = defaultOptions): boolean {\n    if (options.strict) {\n      return true;\n    }\n\n    const { schema } = state;\n    const type = schema.marks.link;\n\n    if (!type) {\n      return false;\n    }\n\n    return isMarkActive(state, type);\n  }\n\n  remove(state: EditorState, dispatch?: Dispatch): boolean {\n    return removeLink()(state, dispatch);\n  }\n\n  canExecute(state: EditorState): boolean {\n    return this.update({})(state);\n  }\n}\n\nexport default Link;\n","import { EditorState, NodeSelection } from 'prosemirror-state';\nimport { Command } from 'prosemirror-commands';\n\nimport { Dispatch } from './types';\n\nexport interface ImageAttrs {\n  alt?: string;\n  title?: string;\n  width?: string;\n}\n\nclass Image {\n  insert(src: string, attrs: ImageAttrs): Command {\n    return (state: EditorState, dispatch?: Dispatch): boolean => {\n      const { schema, tr, selection } = state;\n\n      const type = schema.nodes.image;\n      if (!type) {\n        return false;\n      }\n\n      const imageAttrs = {\n        width: null,\n        src,\n        ...attrs\n      };\n\n      if (!imageAttrs.width && selection instanceof NodeSelection && selection.node.type === type) {\n        imageAttrs.width = selection.node.attrs.width;\n      }\n\n      tr.replaceSelectionWith(type.createAndFill(imageAttrs));\n\n      const resolvedPos = tr.doc.resolve(\n        tr.selection.anchor - tr.selection.$anchor.nodeBefore.nodeSize\n      );\n\n      tr\n        .setSelection(new NodeSelection(resolvedPos))\n        .scrollIntoView();\n\n      if (tr.docChanged) {\n        dispatch?.(tr);\n        return true;\n      }\n\n      return false;\n    };\n  }\n\n  isActive(state: EditorState): boolean {\n    const { selection } = state;\n    if (selection instanceof NodeSelection) {\n      return selection.node.type.name === 'image';\n    }\n\n    return false;\n  }\n}\n\nexport default Image;\n","import { MarkType } from 'prosemirror-model';\nimport { EditorState } from 'prosemirror-state';\nimport { Command } from 'prosemirror-commands';\n\nimport { getSelectionMarks, isMarkActive } from 'ngx-editor/helpers';\nimport { applyMark, removeMark } from 'ngx-editor/commands';\n\nimport { Dispatch } from './types';\n\ntype Name = 'text_color' | 'text_background_color';\n\ninterface ColorAttrs {\n  color: string;\n}\n\ninterface BackgroundColorAttrs {\n  backgroundColor: string;\n}\n\nclass TextColor {\n  name: Name;\n\n  constructor(name: Name) {\n    this.name = name;\n  }\n\n  apply(attrs: ColorAttrs | BackgroundColorAttrs): Command {\n    return (state: EditorState, dispatch?: Dispatch): boolean => {\n      const { schema, selection, doc } = state;\n\n      const type: MarkType = schema.marks[this.name];\n      if (!type) {\n        return false;\n      }\n\n      const { from, to, empty } = selection;\n\n      if (!empty && (from + 1 === to)) {\n        const node = doc.nodeAt(from);\n        if (node?.isAtom && !node.isText && node.isLeaf) {\n          // An atomic node (e.g. Image) is selected.\n          return false;\n        }\n      }\n\n      return applyMark(type, attrs)(state, dispatch);\n    };\n  }\n\n  isActive(state: EditorState): boolean {\n    const { schema } = state;\n    const type: MarkType = schema.marks[this.name];\n\n    if (!type) {\n      return false;\n    }\n\n    return isMarkActive(state, type);\n  }\n\n  getActiveColors(state: EditorState): string[] {\n    if (!this.isActive(state)) {\n      return [];\n    }\n\n    const { schema } = state;\n    const marks = getSelectionMarks(state);\n\n    const colors = marks\n      .filter(mark => mark.type === schema.marks[this.name])\n      .map(mark => mark.attrs.color)\n      .filter(Boolean);\n\n    return colors;\n  }\n\n  remove(): Command {\n    return (state: EditorState, dispatch?: Dispatch): boolean => {\n      const { schema } = state;\n\n      const type = schema.marks[this.name];\n      if (!type) {\n        return false;\n      }\n\n      return removeMark(type)(state, dispatch);\n    };\n  }\n\n  canExecute(state: EditorState): boolean {\n    const attrs = this.name === 'text_color' ? { color: '' } : { backgroundColor: '' };\n    return this.apply(attrs)(state);\n  }\n}\n\nexport default TextColor;\n","import Mark from './Mark';\nimport Blockquote from './Blockquote';\nimport ListItem from './ListItem';\nimport Heading from './Heading';\nimport TextAlign from './TextAlign';\nimport Link from './Link';\nimport Image from './Image';\nimport TextColor from './TextColor';\n\nexport const STRONG = new Mark('strong');\nexport const EM = new Mark('em');\nexport const CODE = new Mark('code');\nexport const UNDERLINE = new Mark('u');\nexport const STRIKE = new Mark('s');\nexport const BLOCKQUOTE = new Blockquote();\nexport const UL = new ListItem(true);\nexport const OL = new ListItem(false);\nexport const H1 = new Heading(1);\nexport const H2 = new Heading(2);\nexport const H3 = new Heading(3);\nexport const H4 = new Heading(4);\nexport const H5 = new Heading(5);\nexport const H6 = new Heading(6);\nexport const ALIGN_LEFT = new TextAlign('left');\nexport const ALIGN_CENTER = new TextAlign('center');\nexport const ALIGN_RIGHT = new TextAlign('right');\nexport const ALIGN_JUSTIFY = new TextAlign('justify');\nexport const LINK = new Link();\nexport const IMAGE = new Image();\nexport const TEXT_COLOR = new TextColor('text_color');\nexport const TEXT_BACKGROUND_COLOR = new TextColor('text_background_color');\n","import * as Commands from '../../commands';\n\nimport { ToggleCommand } from '../../commands/types';\n\nexport const ToggleCommands: Record<string, ToggleCommand> = {\n  bold: Commands.STRONG,\n  italic: Commands.EM,\n  code: Commands.CODE,\n  underline: Commands.UNDERLINE,\n  strike: Commands.STRIKE,\n  blockquote: Commands.BLOCKQUOTE,\n  bullet_list: Commands.UL,\n  ordered_list: Commands.OL,\n  h1: Commands.H1,\n  h2: Commands.H2,\n  h3: Commands.H3,\n  h4: Commands.H4,\n  h5: Commands.H5,\n  h6: Commands.H6,\n  align_left: Commands.ALIGN_LEFT,\n  align_center: Commands.ALIGN_CENTER,\n  align_right: Commands.ALIGN_RIGHT,\n  align_justify: Commands.ALIGN_JUSTIFY\n};\n\nexport const Link = Commands.LINK;\nexport const Image = Commands.IMAGE;\nexport const TextColor = Commands.TEXT_COLOR;\nexport const TextBackgroundColor = Commands.TEXT_BACKGROUND_COLOR;\n","import { Component, HostBinding, Input, OnDestroy, OnInit } from '@angular/core';\nimport { EditorView } from 'prosemirror-view';\nimport { Subscription } from 'rxjs';\n\nimport Icon from '../../../icons';\nimport { ToggleCommands } from '../MenuCommands';\nimport { NgxEditorService } from '../../../editor.service';\nimport { MenuService } from '../menu.service';\nimport { TBItems, ToolbarItem } from '../../../types';\n\n@Component({\n  selector: 'ngx-toggle-command',\n  templateUrl: './toggle-command.component.html',\n  styleUrls: ['./toggle-command.component.scss']\n})\n\nexport class ToggleCommandComponent implements OnInit, OnDestroy {\n  @Input() toolbarItem: ToolbarItem;\n\n  get name(): TBItems {\n    return this.toolbarItem as TBItems;\n  }\n\n  html: string;\n  editorView: EditorView;\n  private updateSubscription: Subscription;\n\n  constructor(\n    private ngxeService: NgxEditorService,\n    private menuService: MenuService\n  ) { }\n\n  @HostBinding('class.NgxEditor__MenuItem--Active') isActive = false;\n  @HostBinding('class.NgxEditor--Disabled') disabled = false;\n\n  toggle(e: MouseEvent): void {\n    e.preventDefault();\n\n    if (e.button !== 0) {\n      return;\n    }\n\n    const { state, dispatch } = this.editorView;\n    const command = ToggleCommands[this.name];\n    command.toggle()(state, dispatch);\n  }\n\n  update = (view: EditorView): void => {\n    const { state } = view;\n    const command = ToggleCommands[this.name];\n    this.isActive = command.isActive(state);\n    this.disabled = !command.canExecute(state);\n  }\n\n  getTitle(name: string): string {\n    return this.ngxeService.locals.get(name);\n  }\n\n  ngOnInit(): void {\n    this.html = Icon.get(this.name);\n\n    this.editorView = this.menuService.editor.view;\n\n    this.updateSubscription = this.menuService.editor.update.subscribe((view: EditorView) => {\n      this.update(view);\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.updateSubscription.unsubscribe();\n  }\n}\n","import {\n  Component, ElementRef, HostBinding,\n  HostListener, OnDestroy, OnInit\n} from '@angular/core';\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { EditorView } from 'prosemirror-view';\nimport { Subscription } from 'rxjs';\n\nimport { NgxEditorService } from '../../../editor.service';\nimport { MenuService } from '../menu.service';\nimport Icon from '../../../icons';\nimport { Link as LinkCommand } from '../MenuCommands';\n\n@Component({\n  selector: 'ngx-link',\n  templateUrl: './link.component.html',\n  styleUrls: ['./link.component.scss']\n})\n\nexport class LinkComponent implements OnInit, OnDestroy {\n  showPopup = false;\n  isActive = false;\n  private canExecute = true;\n  private editorView: EditorView;\n  private updateSubscription: Subscription;\n\n  form = new FormGroup({\n    href: new FormControl('', [\n      Validators.required,\n      Validators.pattern('(https?://)?([\\\\da-z.-]+)\\\\.([a-z.]{2,6})[/\\\\w .-]*/?')\n    ]),\n    text: new FormControl('', [Validators.required]),\n    openInNewTab: new FormControl(true)\n  });\n\n  constructor(\n    private el: ElementRef,\n    private ngxeService: NgxEditorService,\n    private menuService: MenuService\n  ) {  }\n\n  @HostBinding('class.NgxEditor__MenuItem--Active') get valid(): boolean {\n    return this.isActive || this.showPopup;\n  }\n\n  @HostBinding('class.NgxEditor--Disabled') get disabled(): boolean {\n    return !this.canExecute;\n  }\n\n  get icon(): string {\n    return Icon.get(this.isActive ? 'unlink' : 'link');\n  }\n\n  get href(): AbstractControl {\n    return this.form.get('href');\n  }\n\n  get text(): AbstractControl {\n    return this.form.get('text');\n  }\n\n  @HostListener('document:mousedown', ['$event']) onDocumentClick(e: MouseEvent): void {\n    if (!this.el.nativeElement.contains(e.target) && this.showPopup) {\n      this.hideForm();\n    }\n  }\n\n  getLabel(key: string): string {\n    return this.ngxeService.locals.get(key);\n  }\n\n  private hideForm(): void {\n    this.showPopup = false;\n    this.form.reset({\n      href: '',\n      text: '',\n      openInNewTab: true\n    });\n    this.text.enable();\n  }\n\n  onMouseDown(e: MouseEvent): void {\n    e.preventDefault();\n\n    if (e.button !== 0) {\n      return;\n    }\n\n    const { state, dispatch } = this.editorView;\n\n    if (this.isActive) {\n      LinkCommand.remove(state, dispatch);\n      return;\n    }\n\n    this.showPopup = !this.showPopup;\n    if (this.showPopup) {\n      this.setText();\n    }\n  }\n\n  private setText = () => {\n    const { state: { selection, doc } } = this.editorView;\n    const { empty, from, to } = selection;\n    const selectedText = !empty ? doc.textBetween(from, to) : '';\n\n    if (selectedText) {\n      this.text.patchValue(selectedText);\n      this.text.disable();\n    }\n  }\n\n  private update = (view: EditorView) => {\n    const { state } = view;\n    this.isActive = LinkCommand.isActive(state, { strict: false });\n    this.canExecute = LinkCommand.canExecute(state);\n  }\n\n  insertLink(e: MouseEvent): void {\n    e.preventDefault();\n    const { text, href, openInNewTab } = this.form.getRawValue();\n    const { dispatch, state } = this.editorView;\n    const { selection } = state;\n\n    const attrs = {\n      title: href,\n      href,\n      target: openInNewTab ? '_blank' : '_self'\n    };\n\n    if (selection.empty) {\n      LinkCommand.insert(text, attrs)(state, dispatch);\n      this.editorView.focus();\n    } else {\n      LinkCommand.update(attrs)(state, dispatch);\n    }\n    this.hideForm();\n  }\n\n  ngOnInit(): void {\n    this.editorView = this.menuService.editor.view;\n\n    this.updateSubscription = this.menuService.editor.update.subscribe((view: EditorView) => {\n      this.update(view);\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.updateSubscription.unsubscribe();\n  }\n}\n","import {\n  Component, ElementRef, HostBinding,\n  HostListener, Input, OnDestroy, OnInit\n} from '@angular/core';\nimport { EditorView } from 'prosemirror-view';\nimport { Subscription } from 'rxjs';\n\nimport { NgxEditorService } from '../../../editor.service';\nimport { MenuService } from '../menu.service';\nimport { ToggleCommands } from '../MenuCommands';\nimport { TBHeadingItems } from '../../../types';\n\n@Component({\n  selector: 'ngx-dropdown',\n  templateUrl: './dropdown.component.html',\n  styleUrls: ['./dropdown.component.scss']\n})\nexport class DropdownComponent implements OnInit, OnDestroy {\n  private editorView: EditorView;\n  private updateSubscription: Subscription;\n\n  @Input() group: string;\n  @Input() items: TBHeadingItems[];\n\n  isDropdownOpen = false;\n\n  private activeItems: TBHeadingItems[] = [];\n  disabledItems: string[] = [];\n  activeItem: string | null;\n\n  constructor(\n    private ngxeService: NgxEditorService,\n    private menuService: MenuService,\n    private el: ElementRef\n  ) { }\n\n  @HostBinding('class.NgxEditor__Dropdown--Selected') get isSelected(): boolean {\n    return Boolean(this.activeItem || this.isDropdownOpen);\n  }\n\n  @HostBinding('class.NgxEditor--Disabled') get isDropdownDisabled(): boolean {\n    return this.disabledItems.length === this.items.length;\n  }\n\n  @HostListener('document:mousedown', ['$event.target']) onDocumentClick(target: Node): void {\n    if (!this.el.nativeElement.contains(target) && this.isDropdownOpen) {\n      this.isDropdownOpen = false;\n    }\n  }\n\n  getName(key: string): string {\n    return this.ngxeService.locals.get(key);\n  }\n\n  toggleDropdown(e: MouseEvent): void {\n    e.preventDefault();\n    this.isDropdownOpen = !this.isDropdownOpen;\n  }\n\n  onClick(e: MouseEvent, item: TBHeadingItems): void {\n    e.preventDefault();\n\n    // consider only left click\n    if (e.button !== 0) {\n      return;\n    }\n\n    const command = ToggleCommands[item];\n    const { state, dispatch } = this.editorView;\n    command.toggle()(state, dispatch);\n    this.isDropdownOpen = false;\n  }\n\n  private update = (view: EditorView) => {\n    const { state } = view;\n    this.activeItems = [];\n    this.disabledItems = [];\n\n    this.items.forEach((item: TBHeadingItems) => {\n      const command = ToggleCommands[item];\n      const isActive = command.isActive(state);\n\n      if (isActive) {\n        this.activeItems.push(item);\n      }\n\n      if (!command.canExecute(state)) {\n        this.disabledItems.push(item);\n      }\n    });\n\n    if (this.activeItems.length === 1) {\n      this.activeItem = this.activeItems[0];\n    } else {\n      this.activeItem = null;\n    }\n  }\n\n  ngOnInit(): void {\n    this.editorView = this.menuService.editor.view;\n\n    this.updateSubscription = this.menuService.editor.update.subscribe((view: EditorView) => {\n      this.update(view);\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.updateSubscription.unsubscribe();\n  }\n}\n","import {\n  Component, ElementRef, HostBinding,\n  HostListener, OnDestroy, OnInit\n} from '@angular/core';\nimport { AbstractControl, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NodeSelection } from 'prosemirror-state';\nimport { EditorView } from 'prosemirror-view';\nimport { Subscription } from 'rxjs';\n\nimport { NgxEditorService } from '../../../editor.service';\nimport { MenuService } from '../menu.service';\nimport Icon from '../../../icons';\nimport { Image as ImageCommand } from '../MenuCommands';\n\n@Component({\n  selector: 'ngx-image',\n  templateUrl: './image.component.html',\n  styleUrls: ['./image.component.scss']\n})\nexport class ImageComponent implements OnInit, OnDestroy {\n  showPopup = false;\n  isActive = false;\n  private updateSubscription: Subscription;\n\n  form = new FormGroup({\n    src: new FormControl('', [\n      Validators.required,\n      Validators.pattern('(https?://)?([\\\\da-z.-]+)\\\\.([a-z.]{2,6})[/\\\\w .-]*/?')\n    ]),\n    alt: new FormControl(''),\n    title: new FormControl('')\n  });\n\n  private editorView: EditorView;\n\n  constructor(\n    private el: ElementRef,\n    private ngxeService: NgxEditorService,\n    private menuService: MenuService\n  ) {\n\n  }\n\n  @HostBinding('class.NgxEditor__MenuItem--Active') get valid(): boolean {\n    return this.isActive || this.showPopup;\n  }\n\n  get icon(): string {\n    return Icon.get('image');\n  }\n\n  get src(): AbstractControl {\n    return this.form.get('src');\n  }\n\n  @HostListener('document:mousedown', ['$event']) onDocumentClick(e: MouseEvent): void {\n    if (!this.el.nativeElement.contains(e.target) && this.showPopup) {\n      this.hideForm();\n    }\n  }\n\n  getLabel(key: string): string {\n    return this.ngxeService.locals.get(key);\n  }\n\n  private hideForm(): void {\n    this.showPopup = false;\n    this.form.reset({\n      src: '',\n      alt: '',\n      title: ''\n    });\n  }\n\n  onMouseDown(e: MouseEvent): void {\n    e.preventDefault();\n\n    if (e.button !== 0) {\n      return;\n    }\n\n    this.showPopup = !this.showPopup;\n\n    if (this.showPopup) {\n      this.fillForm();\n    }\n  }\n\n  private fillForm(): void {\n    const { state } = this.editorView;\n    const { selection } = state;\n    if (selection instanceof NodeSelection && this.isActive) {\n      const { src, alt = '', title = '' } = selection.node.attrs;\n\n      this.form.setValue({\n        src,\n        alt,\n        title\n      });\n    }\n  }\n\n  private update = (view: EditorView) => {\n    const { state } = view;\n    this.isActive = ImageCommand.isActive(state);\n  }\n\n  insertLink(e: MouseEvent): void {\n    e.preventDefault();\n    const { src, alt, title } = this.form.getRawValue();\n    const { dispatch, state } = this.editorView;\n\n    const attrs = {\n      alt,\n      title\n    };\n\n    ImageCommand.insert(src, attrs)(state, dispatch);\n    this.editorView.focus();\n    this.hideForm();\n  }\n\n  ngOnInit(): void {\n    this.editorView = this.menuService.editor.view;\n\n    this.updateSubscription = this.menuService.editor.update.subscribe((view: EditorView) => {\n      this.update(view);\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.updateSubscription.unsubscribe();\n  }\n}\n","import {\n  Component, ElementRef, HostBinding,\n  HostListener, OnDestroy, Input, OnInit\n} from '@angular/core';\nimport { EditorView } from 'prosemirror-view';\nimport { Subscription } from 'rxjs';\n\nimport Icon from '../../../icons';\nimport { NgxEditorService } from '../../../editor.service';\nimport { MenuService } from '../menu.service';\nimport { TextColor, TextBackgroundColor } from '../MenuCommands';\n\ntype Command = typeof TextColor | typeof TextBackgroundColor;\n\n@Component({\n  selector: 'ngx-color-picker',\n  templateUrl: './color-picker.component.html',\n  styleUrls: ['./color-picker.component.scss']\n})\nexport class ColorPickerComponent implements OnInit, OnDestroy {\n  @Input() presets: string[][];\n  @Input() type: string;\n\n  constructor(\n    private el: ElementRef,\n    private menuService: MenuService,\n    private ngxeService: NgxEditorService\n  ) { }\n\n  @HostBinding('class.NgxEditor__MenuItem--Active') get valid(): boolean {\n    return this.isActive || this.showPopup;\n  }\n\n  @HostBinding('class.NgxEditor--Disabled') get disabled(): boolean {\n    return !this.canExecute;\n  }\n\n  get title(): string {\n    return this.getLabel(this.type === 'text_color' ? 'text_color' : 'background_color');\n  }\n\n  get icon(): string {\n    return Icon.get(this.type === 'text_color' ? 'text_color' : 'color_fill');\n  }\n\n  private get command(): Command {\n    return this.type === 'text_color' ? TextColor : TextBackgroundColor;\n  }\n\n  private updateSubscription: Subscription;\n  private editorView: EditorView;\n  showPopup = false;\n  isActive = false;\n  activeColors: string[] = [];\n  private canExecute = true;\n\n  getContrastYIQ(hexcolor: string): string {\n    hexcolor = hexcolor.replace('#', '');\n    const r = parseInt(hexcolor.substr(0, 2), 16);\n    const g = parseInt(hexcolor.substr(2, 2), 16);\n    const b = parseInt(hexcolor.substr(4, 2), 16);\n    const yiq = ((r * 299) + (g * 587) + (b * 114)) / 1000;\n    return (yiq >= 128) ? 'black' : 'white';\n  }\n\n  @HostListener('document:mousedown', ['$event']) onDocumentClick(e: MouseEvent): void {\n    if (!this.el.nativeElement.contains(e.target) && this.showPopup) {\n      this.hidePopup();\n    }\n  }\n\n  private hidePopup(): void {\n    this.showPopup = false;\n  }\n\n  togglePopup(e: MouseEvent): void {\n    e.preventDefault();\n\n    if (e.button !== 0) {\n      return;\n    }\n\n    this.showPopup = !this.showPopup;\n  }\n\n  remove(e: MouseEvent): void {\n    e.preventDefault();\n    const { state, dispatch } = this.editorView;\n\n    this.command.remove()(state, dispatch);\n    this.hidePopup();\n  }\n\n  onColorSelect(e: MouseEvent, color: string): void {\n    e.preventDefault();\n\n    if (e.button !== 0) {\n      return;\n    }\n\n    const { state, dispatch } = this.editorView;\n\n    if (this.type === 'text_color') {\n      const attrs = { color };\n      this.command.apply(attrs)(state, dispatch);\n    } else {\n      const attrs = { backgroundColor: color };\n      this.command.apply(attrs)(state, dispatch);\n    }\n\n    if (!this.editorView.hasFocus()) {\n      this.editorView.focus();\n    }\n\n    this.hidePopup();\n  }\n\n  private update = (view: EditorView) => {\n    const { state } = view;\n    this.canExecute = this.command.canExecute(state);\n    this.isActive = this.command.isActive(state);\n    this.activeColors = [];\n\n    if (this.isActive) {\n      this.activeColors = this.command.getActiveColors(state);\n    }\n  }\n\n  getLabel(key: string): string {\n    return this.ngxeService.locals.get(key);\n  }\n\n  ngOnInit(): void {\n    this.editorView = this.menuService.editor.view;\n\n    this.updateSubscription = this.menuService.editor.update.subscribe((view: EditorView) => {\n      this.update(view);\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.updateSubscription.unsubscribe();\n  }\n}\n","import {\n  Component, Input, OnDestroy,\n  OnInit\n} from '@angular/core';\nimport { SafeHtml } from '@angular/platform-browser';\nimport { EditorView } from 'prosemirror-view';\nimport { Subscription } from 'rxjs';\n\nimport Editor from '../../../Editor';\nimport Icon from '../../../icons';\nimport { TBItems } from '../../../types';\nimport { SanitizeHtmlPipe } from '../../../pipes/sanitize/sanitize-html.pipe';\nimport { ToggleCommands } from '../MenuCommands';\nimport { NgxEditorService } from '../../../editor.service';\n\n@Component({\n  selector: 'ngx-bubble',\n  templateUrl: './bubble.component.html',\n  styleUrls: ['./bubble.component.scss']\n})\nexport class BubbleComponent implements OnInit, OnDestroy {\n  constructor(private sanitizeHTML: SanitizeHtmlPipe, private ngxeService: NgxEditorService) { }\n\n  private get view(): EditorView {\n    return this.editor.view;\n  }\n\n  @Input() editor: Editor;\n\n  private updateSubscription: Subscription;\n  execulableItems: TBItems[] = [];\n  activeItems: TBItems[] = [];\n\n  toolbar: TBItems[][] = [\n    ['bold', 'italic', 'underline', 'strike'],\n    ['ordered_list', 'bullet_list', 'blockquote', 'code'],\n    ['align_left', 'align_center', 'align_right', 'align_justify']\n  ];\n\n  toggleCommands: TBItems[] = [\n    'bold', 'italic', 'underline', 'strike',\n    'ordered_list', 'bullet_list', 'blockquote', 'code',\n    'align_left', 'align_center', 'align_right', 'align_justify'\n  ];\n\n  getIcon(name: TBItems): SafeHtml {\n    const icon = Icon.getPath(name);\n    return this.sanitizeHTML.transform(icon);\n  }\n\n  getTitle(name: string): string {\n    return this.ngxeService.locals.get(name);\n  }\n\n  onClick(e: MouseEvent, commandName: TBItems): void {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (e.button !== 0) {\n      return;\n    }\n\n    const { state, dispatch } = this.view;\n\n    const command = ToggleCommands[commandName];\n    command.toggle()(state, dispatch);\n  }\n\n  private update(view: EditorView): void {\n    this.activeItems = [];\n    this.execulableItems = [];\n    const { state } = view;\n\n    this.toggleCommands.forEach(toolbarItem => {\n      const command = ToggleCommands[toolbarItem];\n\n      const isActive = command.isActive(state);\n      if (isActive) {\n        this.activeItems.push(toolbarItem);\n      }\n\n      const canExecute = command.canExecute(state);\n\n      if (canExecute) {\n        this.execulableItems.push(toolbarItem);\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.updateSubscription = this.editor.update\n      .subscribe((view) => {\n        this.update(view);\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.updateSubscription.unsubscribe();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MenuComponent } from './menu.component';\nimport { ToggleCommandComponent } from './toggle-command/toggle-command.component';\nimport { LinkComponent } from './link/link.component';\nimport { DropdownComponent } from './dropdown/dropdown.component';\nimport { ImageComponent } from './image/image.component';\nimport { ColorPickerComponent } from './color-picker/color-picker.component';\nimport { FloatingMenuComponent } from './floating-menu/floating-menu.component';\nimport { BubbleComponent } from './bubble/bubble.component';\n\nimport { SanitizeHtmlPipe } from '../../pipes/sanitize/sanitize-html.pipe';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule\n  ],\n  declarations: [\n    // pipes\n    SanitizeHtmlPipe,\n\n    // components\n    MenuComponent,\n    ToggleCommandComponent,\n    LinkComponent,\n    DropdownComponent,\n    ImageComponent,\n    ColorPickerComponent,\n\n    FloatingMenuComponent,\n    BubbleComponent\n  ],\n  providers: [\n    SanitizeHtmlPipe,\n  ],\n  exports: [\n    MenuComponent,\n    FloatingMenuComponent\n  ],\n})\n\nexport class MenuModule { }\n","import { NgModule, ModuleWithProviders, InjectionToken } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NgxEditorConfig } from './types';\n\nimport { NgxEditorComponent } from './editor.component';\nimport { NgxEditorService, NgxEditorServiceConfig, provideMyServiceOptions } from './editor.service';\nimport { MenuModule } from './modules/menu/menu.module';\n\nimport { MenuComponent } from './modules/menu/menu.component';\nimport { ImageViewComponent } from './components/image-view/image-view.component';\nimport { FloatingMenuComponent } from './modules/menu/floating-menu/floating-menu.component';\n\nconst NGX_EDITOR_CONFIG_TOKEN = new InjectionToken<NgxEditorConfig>('NgxEditorConfig');\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MenuModule,\n  ],\n  providers: [],\n  declarations: [\n    NgxEditorComponent,\n    ImageViewComponent\n  ],\n  exports: [\n    NgxEditorComponent,\n    MenuComponent,\n    FloatingMenuComponent\n  ]\n})\n\nexport class NgxEditorModule {\n  static forRoot(config: NgxEditorConfig): ModuleWithProviders<NgxEditorModule> {\n\n    return {\n      ngModule: NgxEditorModule,\n      providers: [\n        {\n          provide: NGX_EDITOR_CONFIG_TOKEN,\n          useValue: config\n        },\n        {\n          provide: NgxEditorServiceConfig,\n          useFactory: provideMyServiceOptions,\n          deps: [NGX_EDITOR_CONFIG_TOKEN]\n        }\n      ]\n    };\n  }\n\n  static forChild(config: NgxEditorConfig): ModuleWithProviders<NgxEditorModule> {\n    return {\n      ngModule: NgxEditorModule,\n      providers: [\n        {\n          provide: NGX_EDITOR_CONFIG_TOKEN,\n          useValue: config\n        },\n        {\n          provide: NgxEditorServiceConfig,\n          useFactory: provideMyServiceOptions,\n          deps: [NGX_EDITOR_CONFIG_TOKEN]\n        },\n        NgxEditorService,\n      ]\n    };\n  }\n}\n","import { AbstractControl, ValidatorFn } from '@angular/forms';\nimport { Schema, Node as ProseMirrorNode } from 'prosemirror-model';\n\nimport { parseContent } from './parsers';\nimport defaultSchema from './schema';\n\ntype ValidationErrors = Record<string, any>;\n\nconst isEmptyInputValue = (value: any): boolean => {\n  // we don't check for string here so it also works with arrays\n  return value === null || value.length === 0;\n};\n\nconst hasValidLength = (value: any): boolean => {\n  // non-strict comparison is intentional, to check for both `null` and `undefined` values\n  return value != null && typeof value.length === 'number';\n};\n\nconst isDocEmpty = (doc: ProseMirrorNode | null): boolean => {\n  if (!doc) {\n    return true;\n  }\n\n  const { childCount, firstChild } = doc;\n  return Boolean(childCount === 1 && firstChild?.isTextblock && firstChild.content.size === 0);\n};\n\n// @dynamic\nexport class Validators {\n\n  static required(userSchema?: Schema): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n\n      const schema = userSchema || defaultSchema;\n      const doc = parseContent(control.value, schema);\n\n      const isEmpty = isDocEmpty(doc);\n\n      if (!isEmpty) {\n        return null;\n      }\n\n      return {\n        required: true\n      };\n    };\n  }\n\n  static maxLength(maxLength: number, userSchema?: Schema): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      const schema = userSchema || defaultSchema;\n      const doc = parseContent(control.value, schema);\n\n      const value = doc.textContent;\n\n      if (hasValidLength(value) && value.length > maxLength) {\n        return {\n          maxlength: {\n            requiredLength: maxLength,\n            actualLength: value.length\n          }\n        };\n      }\n\n      return null;\n    };\n  }\n\n  static minLength(minLength: number, userSchema?: Schema): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n\n      const schema = userSchema || defaultSchema;\n      const doc = parseContent(control.value, schema);\n\n      const value = doc.textContent;\n\n      if (isEmptyInputValue(value) || !hasValidLength(value)) {\n        // don't validate empty values to allow optional controls\n        // don't validate values without `length` property\n        return null;\n      }\n\n      if (value.length < minLength) {\n        return {\n          minlength: {\n            requiredLength: minLength, actualLength: value.length\n          }\n        };\n      }\n\n      return null;\n    };\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { EditorState, Transaction } from 'prosemirror-state';\nimport { EditorView } from 'prosemirror-view';\nimport {\n  chainCommands, createParagraphNear, liftEmptyBlock,\n  newlineInCode, splitBlock\n} from 'prosemirror-commands';\nimport { DOMParser } from 'prosemirror-model';\n\nimport MarkCommand from './commands/Mark';\nimport ListCommand from './commands/ListItem';\nimport LinkCommand, { LinkAttrs } from './commands/Link';\nimport HeadingCommand, { HeadingLevels } from './commands/Heading';\nimport ImageCommand, { ImageAttrs } from './commands/Image';\nimport TextColorCommand from './commands/TextColor';\nimport TextAlignCommand, { Align } from './commands/TextAlign';\n\nconst execMark = (name: string, toggle = false) => {\n  return (state: EditorState, dispatch: (tr: Transaction) => void) => {\n    const command = new MarkCommand(name);\n\n    if (!toggle) {\n      return command.apply()(state, dispatch);\n    }\n\n    return command.toggle()(state, dispatch);\n  };\n};\n\nclass EditorCommands {\n  private view: EditorView;\n  private state: EditorState;\n  private tr: Transaction;\n\n  constructor(view: EditorView) {\n    if (!view) {\n      throw Error('NgxEditor: Required view to initialize commands.');\n    }\n\n    this.view = view;\n    this.state = view.state;\n    this.tr = this.view.state.tr;\n  }\n\n  private applyTrx = (tr?: Transaction) => {\n    this.state = this.state.apply(tr ?? this.tr);\n    this.tr = this.state.tr;\n    this.tr.setMeta('APPLIED_TRX', true);\n  }\n\n  private dispatch = (tr: Transaction): void => {\n    this.applyTrx(tr);\n  }\n\n  exec(): boolean {\n    // No changes applied\n    if (!this.tr.getMeta('APPLIED_TRX')) {\n      return false;\n    }\n\n    const forceEmit = !this.view.state.doc.eq(this.state.doc);\n    this.view.updateState(this.state);\n\n    const tr = this.tr\n      .setMeta('FORCE_EMIT', forceEmit);\n\n    this.view.dispatch(tr);\n    return true;\n  }\n\n  focus(): this {\n    this.view.focus();\n    return this;\n  }\n\n  scrollIntoView(): this {\n    this.tr.scrollIntoView();\n    this.applyTrx();\n    return this;\n  }\n\n  insertText(text: string): this {\n    this.tr.insertText(text);\n    this.applyTrx();\n    return this;\n  }\n\n  insertNewLine(): this {\n    const newLineCommands = [newlineInCode, createParagraphNear, liftEmptyBlock, splitBlock];\n    chainCommands(...newLineCommands)(this.state, this.dispatch);\n    return this;\n  }\n\n  applyMark(name: string): this {\n    execMark(name, false)(this.state, this.dispatch);\n    return this;\n  }\n\n  toggleMark(name: string): this {\n    execMark(name, true)(this.state, this.dispatch);\n    return this;\n  }\n\n  bold(): this {\n    execMark('strong')(this.state, this.dispatch);\n    return this;\n  }\n\n  toggleBold(): this {\n    execMark('strong', true)(this.state, this.dispatch);\n    return this;\n  }\n\n  italics(): this {\n    execMark('em')(this.state, this.dispatch);\n    return this;\n  }\n\n  toggleItalics(): this {\n    execMark('em', true)(this.state, this.dispatch);\n    return this;\n  }\n\n  underline(): this {\n    execMark('u')(this.state, this.dispatch);\n    return this;\n  }\n\n  toggleUnderline(): this {\n    execMark('u', true)(this.state, this.dispatch);\n    return this;\n  }\n\n  strike(): this {\n    execMark('s')(this.state, this.dispatch);\n    return this;\n  }\n\n  toggleStrike(): this {\n    execMark('s', true)(this.state, this.dispatch);\n    return this;\n  }\n\n  code(): this {\n    execMark('code')(this.state, this.dispatch);\n    return this;\n  }\n\n  toggleCode(): this {\n    execMark('code', true)(this.state, this.dispatch);\n    return this;\n  }\n\n  toggleOrderedList(): this {\n    const command = new ListCommand(false);\n    command.toggle()(this.state, this.dispatch);\n    return this;\n  }\n\n  toggleBulletList(): this {\n    const command = new ListCommand(true);\n    command.toggle()(this.state, this.dispatch);\n    return this;\n  }\n\n  toggleHeading(level: HeadingLevels): this {\n    const command = new HeadingCommand(level);\n    command.toggle()(this.state, this.dispatch);\n    return this;\n  }\n\n  insertLink(text: string, attrs: LinkAttrs): this {\n    const command = new LinkCommand();\n    command.insert(text, attrs)(this.state, this.dispatch);\n    return this;\n  }\n\n  updateLink(attrs: LinkAttrs): this {\n    const command = new LinkCommand();\n    command.update(attrs)(this.state, this.dispatch);\n    return this;\n  }\n\n  insertImage(src: string, attrs: ImageAttrs = {}): this {\n    const command = new ImageCommand();\n    command.insert(src, attrs)(this.state, this.dispatch);\n    return this;\n  }\n\n  textColor(color: string): this {\n    const command = new TextColorCommand('text_color');\n    command.apply({ color })(this.state, this.dispatch);\n    return this;\n  }\n\n  backgroundColor(color: string): this {\n    const command = new TextColorCommand('text_background_color');\n    command.apply({ backgroundColor: color })(this.state, this.dispatch);\n    return this;\n  }\n\n  removeTextColor(): this {\n    const command = new TextColorCommand('text_color');\n    command.remove()(this.state, this.dispatch);\n    return this;\n  }\n\n  removeBackgroundColor(): this {\n    const command = new TextColorCommand('text_background_color');\n    command.remove()(this.state, this.dispatch);\n    return this;\n  }\n\n  align(p: Align): this {\n    const command = new TextAlignCommand(p);\n    command.toggle()(this.state, this.dispatch);\n    return this;\n  }\n\n  insertHTML(html: string): this {\n    const { selection, schema, tr } = this.state;\n    const { from, to } = selection;\n\n    const element = document.createElement('div');\n    element.innerHTML = html.trim();\n    const slice = DOMParser.fromSchema(schema).parseSlice(element);\n\n    const transaction = tr.replaceRange(from, to, slice);\n    this.applyTrx(transaction);\n\n    return this;\n  }\n}\n\nexport default EditorCommands;\n","import { NodeType, Schema } from 'prosemirror-model';\nimport { Plugin } from 'prosemirror-state';\nimport { keymap } from 'prosemirror-keymap';\nimport { toggleMark, baseKeymap, chainCommands, exitCode } from 'prosemirror-commands';\nimport { splitListItem, liftListItem, sinkListItem } from 'prosemirror-schema-list';\nimport { history, undo, redo } from 'prosemirror-history';\nimport {\n  inputRules, wrappingInputRule, textblockTypeInputRule,\n  smartQuotes, emDash, ellipsis, InputRule\n} from 'prosemirror-inputrules';\n\ninterface Options {\n  history: boolean;\n  keyboardShortcuts: boolean;\n  inputRules: boolean;\n}\n\ninterface ShortcutOptions {\n  history: boolean;\n}\n\nconst isMacOs = /Mac/.test(navigator.platform);\n\n// Input rules ref: https://github.com/ProseMirror/prosemirror-example-setup/\n\n// : (NodeType) → InputRule\n// Given a blockquote node type, returns an input rule that turns `\"> \"`\n// at the start of a textblock into a blockquote.\nconst blockQuoteRule = (nodeType: NodeType): InputRule => {\n  return wrappingInputRule(/^\\s*>\\s$/, nodeType);\n};\n\n// : (NodeType) → InputRule\n// Given a list node type, returns an input rule that turns a number\n// followed by a dot at the start of a textblock into an ordered list.\nconst orderedListRule = (nodeType: NodeType): InputRule => {\n  return wrappingInputRule(\n    /^(\\d+)\\.\\s$/,\n    nodeType,\n    match => ({ order: +match[1] }),\n    (match, node) => node.childCount + node.attrs.order === +match[1]\n  );\n};\n\n// : (NodeType) → InputRule\n// Given a list node type, returns an input rule that turns a bullet\n// (dash, plush, or asterisk) at the start of a textblock into a\n// bullet list.\nconst bulletListRule = (nodeType: NodeType): InputRule => {\n  return wrappingInputRule(/^\\s*([-+*])\\s$/, nodeType);\n};\n\n// : (NodeType) → InputRule\n// Given a code block node type, returns an input rule that turns a\n// textblock starting with three backticks into a code block.\nconst codeBlockRule = (nodeType: NodeType): InputRule => {\n  return textblockTypeInputRule(/^```$/, nodeType);\n};\n\n// : (NodeType, number) → InputRule\n// Given a node type and a maximum level, creates an input rule that\n// turns up to that number of `#` characters followed by a space at\n// the start of a textblock into a heading whose level corresponds to\n// the number of `#` signs.\nconst headingRule = (nodeType: NodeType, maxLevel: number): InputRule => {\n  return textblockTypeInputRule(\n    new RegExp('^(#{1,' + maxLevel + '})\\\\s$'),\n    nodeType,\n    (match) => ({ level: match[1].length })\n  );\n};\n\n// : (Schema) → Plugin\n// A set of input rules for creating the basic block quotes, lists,\n// code blocks, and heading.\nconst buildInputRules = (schema: Schema): Plugin => {\n  const rules = smartQuotes.concat(ellipsis, emDash);\n\n  rules.push(blockQuoteRule(schema.nodes.blockquote));\n  rules.push(orderedListRule(schema.nodes.ordered_list));\n  rules.push(bulletListRule(schema.nodes.bullet_list));\n  rules.push(codeBlockRule(schema.nodes.code_block));\n  rules.push(headingRule(schema.nodes.heading, 6));\n\n  return inputRules({ rules });\n};\n\nconst getKeyboardShortcuts = (schema: Schema, options: ShortcutOptions) => {\n  const historyKeyMap: Record<string, any> = {};\n\n  historyKeyMap['Mod-z'] = undo;\n  if (isMacOs) {\n    historyKeyMap['Shift-Mod-z'] = redo;\n  } else {\n    historyKeyMap['Mod-y'] = redo;\n  }\n\n  const plugins = [\n    keymap({\n      'Mod-b': toggleMark(schema.marks.strong),\n      'Mod-i': toggleMark(schema.marks.em),\n      'Mod-`': toggleMark(schema.marks.code),\n    }),\n    keymap({\n      Enter: splitListItem(schema.nodes.list_item),\n      'Shift-Enter': chainCommands(exitCode, (state, dispatch) => {\n        const tr = state.tr;\n        const br = schema.nodes.hard_break;\n        dispatch(tr.replaceSelectionWith(br.create()).scrollIntoView());\n        return true;\n      }),\n      'Mod-[': liftListItem(schema.nodes.list_item),\n      'Mod-]': sinkListItem(schema.nodes.list_item),\n      Tab: sinkListItem(schema.nodes.list_item)\n    }),\n    keymap(baseKeymap)\n  ];\n\n  if (options.history) {\n    plugins.push(keymap(historyKeyMap));\n  }\n\n  return plugins;\n};\n\nconst getDefaultPlugins = (schema: Schema, options: Options): Plugin[] => {\n  const plugins: Plugin[] = [];\n\n  if (options.keyboardShortcuts) {\n    plugins.push(...getKeyboardShortcuts(schema, { history: options.history }));\n  }\n\n  if (options.history) {\n    plugins.push(history());\n  }\n\n  if (options.inputRules) {\n    plugins.push(buildInputRules(schema));\n  }\n\n  return plugins;\n};\n\nexport default getDefaultPlugins;\n","import { Schema } from 'prosemirror-model';\nimport { EditorState, Plugin, Transaction } from 'prosemirror-state';\nimport { EditorProps, EditorView } from 'prosemirror-view';\nimport { Observable, Subject } from 'rxjs';\n\nimport { isNil } from 'ngx-editor/utils';\n\nimport EditorCommands from './EditorCommands';\nimport defautlSchema from './schema';\nimport { parseContent } from './parsers';\nimport getDefaultPlugins from './defaultPlugins';\n\ntype JSONDoc = Record<string, any>;\ntype Content = string | null | JSONDoc;\n\ninterface Options {\n  content?: Content;\n  history?: boolean;\n  keyboardShortcuts?: boolean;\n  inputRules?: boolean;\n  schema?: Schema;\n  plugins?: Plugin[];\n  nodeViews?: EditorProps['nodeViews'];\n}\n\nconst DEFAULT_OPTIONS: Options = {\n  content: null,\n  history: true,\n  keyboardShortcuts: true,\n  inputRules: true,\n  schema: defautlSchema,\n  plugins: [],\n  nodeViews: {}\n};\n\nclass Editor {\n  private options: Options;\n  view: EditorView;\n\n  constructor(options: Options = DEFAULT_OPTIONS) {\n    this.options = Object.assign({}, DEFAULT_OPTIONS, options);\n    this.createEditor();\n  }\n\n  private valueChangesSubject = new Subject<JSONDoc>();\n  private updateSubject = new Subject<EditorView>();\n\n  get valueChanges(): Observable<JSONDoc> {\n    return this.valueChangesSubject.asObservable();\n  }\n\n  get update(): Observable<EditorView> {\n    return this.updateSubject.asObservable();\n  }\n\n  get schema(): Schema {\n    return this.options.schema || defautlSchema;\n  }\n\n  get commands(): EditorCommands {\n    return new EditorCommands(this.view);\n  }\n\n  setContent(content: Content): void {\n    if (isNil(content)) {\n      return;\n    }\n\n    const { state } = this.view;\n    const { tr, doc } = state;\n\n    const newDoc = parseContent(content, this.schema);\n\n    tr.replaceWith(0, state.doc.content.size, newDoc);\n\n    // don't emit if both content is same\n    if (doc.eq(tr.doc)) {\n      return;\n    }\n\n    if (!tr.docChanged) {\n      return;\n    }\n\n    this.view.dispatch(tr);\n  }\n\n  private handleTransactions(tr: Transaction): void {\n    const state = this.view.state.apply(tr);\n    this.view.updateState(state);\n\n    this.updateSubject.next(this.view);\n\n    if (!tr.docChanged && !tr.getMeta('FORCE_EMIT')) {\n      return;\n    }\n\n    const json = state.doc.toJSON();\n    this.valueChangesSubject.next(json);\n  }\n\n  private createEditor(): void {\n    const { options } = this;\n    const { content = null, nodeViews } = options;\n    const { history = true, keyboardShortcuts = true, inputRules = true } = options;\n    const schema = this.schema;\n\n    const doc = parseContent(content, schema);\n\n    const plugins: Plugin[] = options.plugins ?? [];\n\n    const defaultPlugins = getDefaultPlugins(schema, {\n      history,\n      keyboardShortcuts,\n      inputRules\n    });\n\n    this.view = new EditorView(null, {\n      state: EditorState.create({\n        doc,\n        schema,\n        plugins: [...defaultPlugins, ...plugins, ],\n      }),\n      nodeViews,\n      dispatchTransaction: this.handleTransactions.bind(this)\n    });\n  }\n\n  registerPlugin(plugin: Plugin): void {\n    const { state } = this.view;\n    const plugins = [...state.plugins, plugin];\n\n    const newState = state.reconfigure({ plugins });\n    this.view.updateState(newState);\n  }\n\n  destroy(): void {\n    this.view.destroy();\n  }\n}\n\nexport default Editor;\n"]}