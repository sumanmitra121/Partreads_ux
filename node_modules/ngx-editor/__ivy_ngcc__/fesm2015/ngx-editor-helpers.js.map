{"version":3,"file":"ngx-editor-helpers.js","sources":["../../../projects/ngx-editor/helpers/isMarkActive.ts","../../../projects/ngx-editor/helpers/getSelectionMarks.ts","../../../projects/ngx-editor/helpers/isLinkActive.ts","../../../projects/ngx-editor/helpers/isNodeActive.ts","../../../projects/ngx-editor/helpers/bubblePosition.ts","../../../projects/ngx-editor/helpers/getSelectionNodes.ts","../../../projects/ngx-editor/helpers/markApplies.ts","../../../projects/ngx-editor/helpers/ngx-editor-helpers.ts"],"names":[],"mappings":"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","sourcesContent":["import { EditorState } from 'prosemirror-state';\nimport { MarkType } from 'prosemirror-model';\n\nexport const isMarkActive = (state: EditorState, type: MarkType): boolean => {\n  const { from, $from, to, empty } = state.selection;\n\n  if (empty) {\n    return !!type.isInSet(state.storedMarks || $from.marks());\n  } else {\n    return state.doc.rangeHasMark(from, to, type);\n  }\n};\n\nexport default isMarkActive;\n","import { EditorState } from 'prosemirror-state';\nimport { Mark } from 'prosemirror-model';\n\nexport const getSelectionMarks = (state: EditorState): Mark[] => {\n  let marks: Mark[] = [];\n\n  const { selection: { from, to, empty, $from }, storedMarks } = state;\n\n  if (empty) {\n    marks = storedMarks || $from.marks();\n  } else {\n    state.doc.nodesBetween(from, to, node => {\n      marks = [...marks, ...node.marks];\n    });\n  }\n\n  return marks;\n};\n\nexport default getSelectionMarks;\n","import { EditorState } from 'prosemirror-state';\nimport { Mark } from 'prosemirror-model';\n\nimport getSelectionMarks from './getSelectionMarks';\n\nexport const isLinkActive = (state: EditorState): boolean => {\n  const { schema, selection: { anchor, head, from } } = state;\n\n  if (!schema.marks.link) {\n    return false;\n  }\n\n  const isForwardSelection = anchor === from;\n  const linkMarks: Mark[] = getSelectionMarks(state).filter(mark => mark.type === schema.marks.link);\n\n  if (!linkMarks.length) {\n    return false;\n  }\n\n  const selectionHasOnlyMarks = isForwardSelection ?\n    (\n      state.doc.rangeHasMark(anchor, anchor + 1, schema.marks.link) &&\n      state.doc.rangeHasMark(head - 1, head, schema.marks.link)\n    ) : (\n      state.doc.rangeHasMark(anchor - 1, anchor, schema.marks.link) &&\n      state.doc.rangeHasMark(head, head + 1, schema.marks.link)\n    );\n\n  if (linkMarks.length === 1 && selectionHasOnlyMarks) {\n    return true;\n  }\n\n  return false;\n};\n\nexport default isLinkActive;\n","import { EditorState } from 'prosemirror-state';\nimport { NodeType, ResolvedPos } from 'prosemirror-model';\n\nconst findNodeType = (type: NodeType, $from: ResolvedPos): NodeType | null => {\n  for (let i = $from.depth; i > 0; i--) {\n    if ($from.node(i).type === type) {\n      return $from.node(i).type;\n    }\n  }\n\n  return null;\n};\n\nexport const isNodeActive = (state: EditorState, type: NodeType, attrs: any = {}): boolean => {\n  const { selection } = state;\n  const { $from, to } = selection;\n\n  const node: NodeType | null = findNodeType(type, $from);\n\n  if (!Object.entries(attrs).length || !node) {\n    return !!node;\n  }\n\n  return to <= $from.end() && $from.parent.hasMarkup(type, attrs);\n};\n\nexport default isNodeActive;\n","import { EditorView } from 'prosemirror-view';\n\ninterface TooltipPosition {\n  bottom: number;\n  left: number;\n}\n\nexport const calculateTooltipPos = (view: EditorView): TooltipPosition => {\n  const { state: { selection } } = view;\n  const { from, to } = selection;\n\n  // These are in screen coordinates\n  const start = view.coordsAtPos(from);\n  const end = view.coordsAtPos(to);\n\n  // The box in which the tooltip is positioned, to use as base\n  const box = view.dom.getBoundingClientRect();\n\n  // Find a center-ish x position from the selection endpoints (when\n  // crossing lines, end may be more to the left)\n  const left = Math.max((start.left + end.left) / 2, start.left + 3);\n\n  return {\n    left: left - box.left,\n    bottom: box.bottom - start.top\n  };\n};\n","import { EditorState } from 'prosemirror-state';\nimport { Node } from 'prosemirror-model';\n\nexport const getSelectionNodes = (state: EditorState): Node[] => {\n  const nodes: Node[] = [];\n\n  const { selection: { from, to } } = state;\n\n  state.doc.nodesBetween(from, to, node => {\n    nodes.push(node);\n  });\n\n  return nodes;\n};\n\nexport default getSelectionNodes;\n","import { MarkType, Node as PrmosemirroNode } from 'prosemirror-model';\nimport { SelectionRange } from 'prosemirror-state';\n\n// Ref: https://github.com/ProseMirror/prosemirror-commands/blob/master/src/commands.js\n\nexport const markApplies = (doc: PrmosemirroNode, ranges: SelectionRange[], type: MarkType): boolean => {\n  for (const range of ranges) {\n    const { $from, $to } = range;\n\n    let canApply = $from.depth === 0 ? doc.type.allowsMarkType(type) : false;\n\n    doc.nodesBetween($from.pos, $to.pos, (node: PrmosemirroNode): boolean => {\n      if (canApply) {\n        return false;\n      }\n\n      canApply = node.inlineContent && node.type.allowsMarkType(type);\n      return true;\n    });\n\n    if (canApply) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport default markApplies;\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}