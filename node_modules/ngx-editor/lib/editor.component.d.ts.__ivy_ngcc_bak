import { ElementRef, OnDestroy, OnInit, EventEmitter, Renderer2, SimpleChanges, OnChanges, Injector } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import Editor from './Editor';
export declare class NgxEditorComponent implements ControlValueAccessor, OnInit, OnChanges, OnDestroy {
    private _renderer;
    private _injector;
    private _elementRef;
    constructor(_renderer: Renderer2, _injector: Injector, _elementRef: ElementRef<HTMLElement>);
    private ngxEditor;
    editor: Editor;
    outputFormat: 'doc' | 'html';
    placeholder: string;
    focusOut: EventEmitter<void>;
    focusIn: EventEmitter<void>;
    private subscriptions;
    private onChange;
    private onTouched;
    writeValue(value: Record<string, any> | string | null): void;
    registerOnChange(fn: () => void): void;
    registerOnTouched(fn: () => void): void;
    setDisabledState(isDisabled: boolean): void;
    private handleChange;
    private setMeta;
    private setPlaceholder;
    private registerPlugins;
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
}
