import { Component, Input, ViewChild, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { BrowserModule } from '@angular/platform-browser';

import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';

const _c0 = ["myresult"];
const _c1 = ["myimage"];
const _c2 = ["zoomDiv"];
function NgImgMagnifierComponent_div_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelement(1, "div", 7, 8);
    ɵngcc0.ɵɵelementEnd();
} }
class NgImgMagnifierComponent {
    constructor() {
        this.thumbImage = '';
        this.fullImage = '';
        this.top = '2';
        this.right = '1';
        this.lensWidth = '150';
        this.lensHeight = '150';
        this.resultWidth = '35';
        this.resultHeight = '60';
        this.imgWidth = '300';
        this.imgHeight = '300';
    }
    ngOnInit() {
    }
    imageZoom() {
        this.showLensDiv();
        var img, lens, result, cx, cy;
        result = this.resultID.nativeElement;
        result.style.top = this.top + '%';
        result.style.right = this.right + '%';
        result.style.width = this.resultWidth + '%';
        result.style.height = this.resultHeight + '%';
        this.showZoom = true;
        img = this.imgID.nativeElement;
        lens = this.zoomDiv.nativeElement;
        if (img.width > (img.height * 2)) {
            lens.style.width = (img.width / 3) + "px";
            lens.style.height = (img.height / 1) + "px";
        }
        else if (img.height > (img.width * 2)) {
            lens.style.width = (img.width / 1) + "px";
            lens.style.height = (img.height / 3) + "px";
        }
        else {
            lens.style.width = this.lensWidth + "px";
            lens.style.height = this.lensHeight + "px";
        }
        lens.style.opacity = 1;
        cx = result.offsetWidth / lens.offsetWidth;
        cy = result.offsetHeight / lens.offsetHeight;
        result.style.backgroundImage = "url('" + this.fullImage + "')";
        result.style.backgroundSize = (img.width * cx) + "px " + (img.height * cy) + "px";
        lens.addEventListener("mousemove", moveLens);
        img.addEventListener("mousemove", moveLens);
        lens.addEventListener("touchmove", moveLens);
        img.addEventListener("touchmove", moveLens);
        function moveLens(e) {
            var pos, x, y;
            e.preventDefault();
            pos = getPointerPosition(e);
            x = pos.x - (lens.offsetWidth / 2);
            y = pos.y - (lens.offsetHeight / 2);
            if (x > img.width - lens.offsetWidth) {
                x = img.width - lens.offsetWidth;
            }
            if (x < 0) {
                x = 0;
            }
            if (y > img.height - lens.offsetHeight) {
                y = img.height - lens.offsetHeight;
            }
            if (y < 0) {
                y = 0;
            }
            lens.style.left = (x + 5) + "px";
            lens.style.top = (y + 5) + "px";
            result.style.backgroundPosition = "-" + (x * cx) + "px -" + (y * cy) + "px";
        }
        function getPointerPosition(e) {
            var a, x = 0, y = 0;
            e = e || window.event;
            a = img.getBoundingClientRect();
            x = e.pageX - a.left;
            y = e.pageY - a.top;
            x = x - window.pageXOffset;
            y = y - window.pageYOffset;
            return { x: x, y: y };
        }
    }
    showZoomWin() {
        this.showZoom = true;
    }
    hideZoomWin() {
        this.showZoom = false;
        this.zoomDiv.nativeElement.style.opacity = 0;
        this.zoomDiv.nativeElement.style.display = 'none';
    }
    showLensDiv() {
        this.zoomDiv.nativeElement.style.display = 'block';
    }
}
NgImgMagnifierComponent.ɵfac = function NgImgMagnifierComponent_Factory(t) { return new (t || NgImgMagnifierComponent)(); };
NgImgMagnifierComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgImgMagnifierComponent, selectors: [["ng-img-magnifier"]], viewQuery: function NgImgMagnifierComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, true);
        ɵngcc0.ɵɵviewQuery(_c1, true);
        ɵngcc0.ɵɵviewQuery(_c2, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.resultID = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.imgID = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.zoomDiv = _t.first);
    } }, inputs: { thumbImage: "thumbImage", fullImage: "fullImage", top: "top", right: "right", lensWidth: "lensWidth", lensHeight: "lensHeight", resultWidth: "resultWidth", resultHeight: "resultHeight", imgWidth: "imgWidth", imgHeight: "imgHeight" }, decls: 7, vars: 4, consts: [[1, "img-zoom-container"], [1, "outerImg", 3, "mouseenter", "mouseleave"], ["id", "myimage", 1, "mainImg", 2, "vertical-align", "middle !important", 3, "src", "width", "height", "mousemove"], ["myimage", ""], ["id", "zoomDiv ", 1, "img-zoom-lens"], ["zoomDiv", ""], [4, "ngIf"], ["id", "myresult ", 1, "img-zoom-result"], ["myresult", ""]], template: function NgImgMagnifierComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵlistener("mouseenter", function NgImgMagnifierComponent_Template_div_mouseenter_1_listener() { return ctx.showZoomWin(); })("mouseleave", function NgImgMagnifierComponent_Template_div_mouseleave_1_listener() { return ctx.hideZoomWin(); });
        ɵngcc0.ɵɵelementStart(2, "img", 2, 3);
        ɵngcc0.ɵɵlistener("mousemove", function NgImgMagnifierComponent_Template_img_mousemove_2_listener() { return ctx.imageZoom(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(4, "div", 4, 5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(6, NgImgMagnifierComponent_div_6_Template, 3, 0, "div", 6);
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵpropertyInterpolate("src", ctx.thumbImage, ɵngcc0.ɵɵsanitizeUrl);
        ɵngcc0.ɵɵpropertyInterpolate("width", ctx.imgWidth);
        ɵngcc0.ɵɵpropertyInterpolate("height", ctx.imgHeight);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showZoom);
    } }, directives: [ɵngcc1.NgIf], styles: ["html[_ngcontent-%COMP%], body[_ngcontent-%COMP%] {\n        height: 100%;\n    }", "body[_ngcontent-%COMP%] {\n        margin: 0;\n    }", "*[_ngcontent-%COMP%] {\n        box-sizing: border-box;\n    }", ".img-zoom-container[_ngcontent-%COMP%] {\n        position: relative;\n    }", ".img-zoom-lens[_ngcontent-%COMP%] {\n        position: absolute;\n        border: 1px solid #d4d4d4;\n        // background-image: url('./assets/zoom-image.png');\n        background-color: rgb(255, 255, 255, 0.2);\n        background-repeat: repeat;\n        background-size: contain;\n        opacity: 0;\n        cursor: zoom-in !important;\n        display: none;\n    }", ".img-zoom-result[_ngcontent-%COMP%] {\n        background-color: none;\n        background-repeat: no-repeat;\n        transition: 0.3s;\n        border-radius: 5px;\n        position: absolute;\n    }", "@media screen and (max-width: 800px) {\n        .img-zoom-result[_ngcontent-%COMP%] {\n            display: none;\n        }\n    }", ".show[_ngcontent-%COMP%] {\n        opacity: 500;\n    }", ".hide[_ngcontent-%COMP%] {\n        opacity: 0;\n    }", ".mainImg[_ngcontent-%COMP%] {\n        vertical-align: middle !important;\n    }", ".outerImg[_ngcontent-%COMP%] {\n        width: 310px;\n        height: auto;\n        padding-left: 5px;\n        padding-right: 5px;\n        padding-top: 5px;\n        padding-bottom: 5px;\n    }"] });
NgImgMagnifierComponent.ctorParameters = () => [];
NgImgMagnifierComponent.propDecorators = {
    thumbImage: [{ type: Input }],
    fullImage: [{ type: Input }],
    top: [{ type: Input }],
    right: [{ type: Input }],
    lensWidth: [{ type: Input }],
    lensHeight: [{ type: Input }],
    resultWidth: [{ type: Input }],
    resultHeight: [{ type: Input }],
    imgWidth: [{ type: Input }],
    imgHeight: [{ type: Input }],
    resultID: [{ type: ViewChild, args: ['myresult',] }],
    imgID: [{ type: ViewChild, args: ['myimage',] }],
    zoomDiv: [{ type: ViewChild, args: ['zoomDiv',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgImgMagnifierComponent, [{
        type: Component,
        args: [{
                selector: 'ng-img-magnifier',
                template: `
    <div class="img-zoom-container ">
      <div class="outerImg " (mouseenter)="showZoomWin() " (mouseleave)="hideZoomWin() ">
          <img #myimage id="myimage" class="mainImg" src={{thumbImage}} width={{imgWidth}} style="vertical-align: middle !important;" height={{imgHeight}} (mousemove)="imageZoom();">
          <div #zoomDiv id="zoomDiv " class="img-zoom-lens "></div>
      </div>
    </div>
    <div *ngIf="showZoom ">
        <div #myresult id="myresult " class="img-zoom-result "></div>
    </div>`,
                styles: [`html,
    body {
        height: 100%;
    }`,
                    `body {
        margin: 0;
    }`,
                    `* {
        box-sizing: border-box;
    }`,
                    `.img-zoom-container {
        position: relative;
    }`,
                    `.img-zoom-lens {
        position: absolute;
        border: 1px solid #d4d4d4;
        // background-image: url('./assets/zoom-image.png');
        background-color: rgb(255, 255, 255, 0.2);
        background-repeat: repeat;
        background-size: contain;
        opacity: 0;
        cursor: zoom-in !important;
        display: none;
    }`,
                    `.img-zoom-result {
        background-color: none;
        background-repeat: no-repeat;
        transition: 0.3s;
        border-radius: 5px;
        position: absolute;
    }`,
                    `@media screen and (max-width: 800px) {
        .img-zoom-result {
            display: none;
        }
    }`,
                    `.show {
        opacity: 500;
    }`,
                    `.hide {
        opacity: 0;
    }`,
                    `.mainImg {
        vertical-align: middle !important;
    }`,
                    `.outerImg {
        width: 310px;
        height: auto;
        padding-left: 5px;
        padding-right: 5px;
        padding-top: 5px;
        padding-bottom: 5px;
    }`]
            }]
    }], function () { return []; }, { thumbImage: [{
            type: Input
        }], fullImage: [{
            type: Input
        }], top: [{
            type: Input
        }], right: [{
            type: Input
        }], lensWidth: [{
            type: Input
        }], lensHeight: [{
            type: Input
        }], resultWidth: [{
            type: Input
        }], resultHeight: [{
            type: Input
        }], imgWidth: [{
            type: Input
        }], imgHeight: [{
            type: Input
        }], resultID: [{
            type: ViewChild,
            args: ['myresult']
        }], imgID: [{
            type: ViewChild,
            args: ['myimage']
        }], zoomDiv: [{
            type: ViewChild,
            args: ['zoomDiv']
        }] }); })();

class ImgMagnifier {
}
ImgMagnifier.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ImgMagnifier });
ImgMagnifier.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ImgMagnifier_Factory(t) { return new (t || ImgMagnifier)(); }, imports: [[
            CommonModule,
            BrowserModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ImgMagnifier, { declarations: function () { return [NgImgMagnifierComponent]; }, imports: function () { return [CommonModule,
        BrowserModule]; }, exports: function () { return [NgImgMagnifierComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ImgMagnifier, [{
        type: NgModule,
        args: [{
                declarations: [
                    NgImgMagnifierComponent,
                ],
                imports: [
                    CommonModule,
                    BrowserModule
                ],
                exports: [
                    NgImgMagnifierComponent
                ]
            }]
    }], null, null); })();

/*
 * Public API Surface of ng-img-magnifier
 */

/**
 * Generated bundle index. Do not edit.
 */

export { ImgMagnifier, NgImgMagnifierComponent };

//# sourceMappingURL=ng-img-magnifier.js.map