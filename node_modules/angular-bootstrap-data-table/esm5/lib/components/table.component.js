import { Component, Input, Output, EventEmitter, ContentChildren, QueryList, TemplateRef, ContentChild, ViewChildren } from '@angular/core';
import { DataTableColumn } from './column.component';
import { DataTableRow } from './row.component';
import { defaultTranslations } from './types';
import { drag } from '../utils/drag';
import * as i0 from "@angular/core";
var _c0 = ["dataTableExpand"];
function DataTable_data_table_header_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "data-table-header");
} }
function DataTable_th_11_span_3_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "span", 6);
} if (rf & 2) {
    var column_r6 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵproperty("textContent", column_r6.header);
} }
var _c1 = function (a0) { return { column: a0 }; };
function DataTable_th_11_span_4_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "span", 19);
} if (rf & 2) {
    var column_r6 = i0.ɵɵnextContext().$implicit;
    i0.ɵɵproperty("ngTemplateOutlet", column_r6.headerTemplate)("ngTemplateOutletContext", i0.ɵɵpureFunction1(2, _c1, column_r6));
} }
function DataTable_th_11_span_5_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "span", 20);
    i0.ɵɵelement(1, "i", 21);
    i0.ɵɵelementStart(2, "span", 22);
    i0.ɵɵelement(3, "i", 23);
    i0.ɵɵelement(4, "i", 24);
    i0.ɵɵelementEnd();
    i0.ɵɵelementEnd();
} if (rf & 2) {
    var column_r6 = i0.ɵɵnextContext().$implicit;
    var ctx_r10 = i0.ɵɵnextContext();
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("hide", column_r6.property === ctx_r10.sortBy);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("hide", column_r6.property !== ctx_r10.sortBy);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("hide", ctx_r10.sortAsc);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("hide", !ctx_r10.sortAsc);
} }
function DataTable_th_11_span_6_Template(rf, ctx) { if (rf & 1) {
    var _r16 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "span", 25);
    i0.ɵɵlistener("mousedown", function DataTable_th_11_span_6_Template_span_mousedown_0_listener($event) { i0.ɵɵrestoreView(_r16); var column_r6 = i0.ɵɵnextContext().$implicit; var _r7 = i0.ɵɵreference(1); var ctx_r15 = i0.ɵɵnextContext(); return ctx_r15.resizeColumnStart($event, column_r6, _r7); });
    i0.ɵɵelementEnd();
} }
function DataTable_th_11_Template(rf, ctx) { if (rf & 1) {
    var _r19 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "th", 13, 14);
    i0.ɵɵlistener("click", function DataTable_th_11_Template_th_click_0_listener($event) { i0.ɵɵrestoreView(_r19); var column_r6 = ctx.$implicit; var ctx_r18 = i0.ɵɵnextContext(); return ctx_r18.headerClicked(column_r6, $event); });
    i0.ɵɵpipe(2, "px");
    i0.ɵɵtemplate(3, DataTable_th_11_span_3_Template, 1, 1, "span", 15);
    i0.ɵɵtemplate(4, DataTable_th_11_span_4_Template, 1, 4, "span", 16);
    i0.ɵɵtemplate(5, DataTable_th_11_span_5_Template, 5, 4, "span", 17);
    i0.ɵɵtemplate(6, DataTable_th_11_span_6_Template, 1, 0, "span", 18);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    var column_r6 = ctx.$implicit;
    i0.ɵɵstyleProp("width", i0.ɵɵpipeBind1(2, 12, column_r6.width));
    i0.ɵɵclassProp("sortable", column_r6.sortable)("resizable", column_r6.resizable);
    i0.ɵɵproperty("hide", !column_r6.visible)("ngClass", column_r6.styleClassObject);
    i0.ɵɵadvance(3);
    i0.ɵɵproperty("ngIf", !column_r6.headerTemplate);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", column_r6.headerTemplate);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", column_r6.sortable);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngIf", column_r6.resizable);
} }
function DataTable_tbody_12_Template(rf, ctx) { if (rf & 1) {
    var _r24 = i0.ɵɵgetCurrentView();
    i0.ɵɵelementStart(0, "tbody", 26, 27);
    i0.ɵɵlistener("selectedChange", function DataTable_tbody_12_Template_tbody_selectedChange_0_listener() { i0.ɵɵrestoreView(_r24); var _r22 = i0.ɵɵreference(1); var ctx_r23 = i0.ɵɵnextContext(); return ctx_r23.onRowSelectChanged(_r22); });
    i0.ɵɵelementEnd();
} if (rf & 2) {
    var item_r20 = ctx.$implicit;
    var index_r21 = ctx.index;
    i0.ɵɵproperty("item", item_r20)("index", index_r21);
} }
function DataTable_tbody_13_tr_1_td_5_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "td", 22);
} if (rf & 2) {
    var column_r29 = ctx.$implicit;
    i0.ɵɵproperty("hide", !column_r29.visible);
} }
function DataTable_tbody_13_tr_1_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "tr");
    i0.ɵɵelement(1, "td", 22);
    i0.ɵɵelementStart(2, "td", 22);
    i0.ɵɵtext(3, "\u00A0");
    i0.ɵɵelementEnd();
    i0.ɵɵelement(4, "td", 22);
    i0.ɵɵtemplate(5, DataTable_tbody_13_tr_1_td_5_Template, 1, 1, "td", 30);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    var index_r27 = ctx.index;
    var ctx_r25 = i0.ɵɵnextContext(2);
    i0.ɵɵclassProp("row-odd", (index_r27 + ctx_r25.items.length) % 2 === 0)("row-even", (index_r27 + ctx_r25.items.length) % 2 === 1);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("hide", !ctx_r25.expandColumnVisible);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("hide", !ctx_r25.indexColumnVisible);
    i0.ɵɵadvance(2);
    i0.ɵɵproperty("hide", !ctx_r25.selectColumnVisible);
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngForOf", ctx_r25.columns);
} }
function DataTable_tbody_13_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelementStart(0, "tbody", 28);
    i0.ɵɵtemplate(1, DataTable_tbody_13_tr_1_Template, 6, 8, "tr", 29);
    i0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r3 = i0.ɵɵnextContext();
    i0.ɵɵadvance(1);
    i0.ɵɵproperty("ngForOf", ctx_r3.substituteItems);
} }
function DataTable_div_14_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "div", 31);
} }
function DataTable_data_table_pagination_15_Template(rf, ctx) { if (rf & 1) {
    i0.ɵɵelement(0, "data-table-pagination");
} }
var DataTable = /** @class */ (function () {
    function DataTable() {
        this._items = [];
        this.header = true;
        this.pagination = true;
        this.indexColumn = true;
        this.indexColumnHeader = '';
        this.selectColumn = false;
        this.multiSelect = true;
        this.substituteRows = true;
        this.expandableRows = false;
        this.translations = defaultTranslations;
        this.selectOnRowClick = false;
        this.autoReload = true;
        this.showReloading = false;
        this._sortAsc = true;
        this._offset = 0;
        this._limit = 10;
        // Reloading:
        this._reloading = false;
        this.reload = new EventEmitter();
        this._displayParams = {}; // params of the last finished reload
        this._scheduledReload = null;
        // event handlers:
        this.rowClick = new EventEmitter();
        this.rowDoubleClick = new EventEmitter();
        this.headerClick = new EventEmitter();
        this.cellClick = new EventEmitter();
        this.selectedRows = [];
        this._selectAllCheckbox = false;
        // column resizing:
        this._resizeInProgress = false;
        this.resizeLimit = 30;
    }
    Object.defineProperty(DataTable.prototype, "items", {
        get: function () {
            return this._items;
        },
        set: function (items) {
            this._items = items;
            this._onReloadFinished();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataTable.prototype, "sortBy", {
        get: function () {
            return this._sortBy;
        },
        set: function (value) {
            this._sortBy = value;
            this._triggerReload();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataTable.prototype, "sortAsc", {
        get: function () {
            return this._sortAsc;
        },
        set: function (value) {
            this._sortAsc = value;
            this._triggerReload();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataTable.prototype, "offset", {
        get: function () {
            return this._offset;
        },
        set: function (value) {
            this._offset = value;
            this._triggerReload();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataTable.prototype, "limit", {
        get: function () {
            return this._limit;
        },
        set: function (value) {
            this._limit = value;
            this._triggerReload();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataTable.prototype, "page", {
        // calculated property:
        get: function () {
            return Math.floor(this.offset / this.limit) + 1;
        },
        set: function (value) {
            this.offset = (value - 1) * this.limit;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataTable.prototype, "lastPage", {
        get: function () {
            return Math.ceil(this.itemCount / this.limit);
        },
        enumerable: true,
        configurable: true
    });
    // setting multiple observable properties simultaneously
    DataTable.prototype.sort = function (sortBy, asc) {
        this.sortBy = sortBy;
        this.sortAsc = asc;
    };
    // init
    DataTable.prototype.ngOnInit = function () {
        this._initDefaultValues();
        this._initDefaultClickEvents();
        this._updateDisplayParams();
        if (this.autoReload && this._scheduledReload == null) {
            this.reloadItems();
        }
    };
    DataTable.prototype._initDefaultValues = function () {
        this.indexColumnVisible = this.indexColumn;
        this.selectColumnVisible = this.selectColumn;
        this.expandColumnVisible = this.expandableRows;
    };
    DataTable.prototype._initDefaultClickEvents = function () {
        var _this = this;
        this.headerClick.subscribe(function (tableEvent) {
            return _this.sortColumn(tableEvent.column);
        });
        if (this.selectOnRowClick) {
            this.rowClick.subscribe(function (tableEvent) { return (tableEvent.row.selected = !tableEvent.row.selected); });
        }
    };
    Object.defineProperty(DataTable.prototype, "reloading", {
        get: function () {
            return this._reloading;
        },
        enumerable: true,
        configurable: true
    });
    DataTable.prototype.reloadItems = function () {
        this._reloading = true;
        this.reload.emit(this._getRemoteParameters());
    };
    DataTable.prototype._onReloadFinished = function () {
        this._updateDisplayParams();
        this._selectAllCheckbox = false;
        this._reloading = false;
    };
    Object.defineProperty(DataTable.prototype, "displayParams", {
        get: function () {
            return this._displayParams;
        },
        enumerable: true,
        configurable: true
    });
    DataTable.prototype._updateDisplayParams = function () {
        this._displayParams = {
            sortBy: this.sortBy,
            sortAsc: this.sortAsc,
            offset: this.offset,
            limit: this.limit
        };
    };
    // for avoiding cascading reloads if multiple params are set at once:
    DataTable.prototype._triggerReload = function () {
        var _this = this;
        if (this._scheduledReload) {
            clearTimeout(this._scheduledReload);
        }
        this._scheduledReload = setTimeout(function () {
            _this.reloadItems();
        });
    };
    DataTable.prototype.rowClicked = function (row, event) {
        this.rowClick.emit({ row: row, event: event });
    };
    DataTable.prototype.rowDoubleClicked = function (row, event) {
        this.rowDoubleClick.emit({ row: row, event: event });
    };
    DataTable.prototype.headerClicked = function (column, event) {
        if (!this._resizeInProgress) {
            this.headerClick.emit({ column: column, event: event });
        }
        else {
            this._resizeInProgress = false; // this is because I can't prevent click from mousup of the drag end
        }
    };
    DataTable.prototype.cellClicked = function (column, row, event) {
        this.cellClick.emit({ row: row, column: column, event: event });
    };
    // functions:
    DataTable.prototype._getRemoteParameters = function () {
        var params = {};
        if (this.sortBy) {
            params.sortBy = this.sortBy;
            params.sortAsc = this.sortAsc;
        }
        if (this.pagination) {
            params.offset = this.offset;
            params.limit = this.limit;
        }
        return params;
    };
    DataTable.prototype.sortColumn = function (column) {
        if (column.sortable) {
            var ascending = this.sortBy === column.property ? !this.sortAsc : true;
            this.sort(column.property, ascending);
        }
    };
    Object.defineProperty(DataTable.prototype, "columnCount", {
        get: function () {
            var count = 0;
            count += this.indexColumnVisible ? 1 : 0;
            count += this.selectColumnVisible ? 1 : 0;
            count += this.expandColumnVisible ? 1 : 0;
            this.columns.toArray().forEach(function (column) {
                count += column.visible ? 1 : 0;
            });
            return count;
        },
        enumerable: true,
        configurable: true
    });
    DataTable.prototype.getRowColor = function (item, index, row) {
        if (this.rowColors !== undefined) {
            return this.rowColors(item, row, index);
        }
    };
    Object.defineProperty(DataTable.prototype, "selectAllCheckbox", {
        get: function () {
            return this._selectAllCheckbox;
        },
        set: function (value) {
            this._selectAllCheckbox = value;
            this._onSelectAllChanged(value);
        },
        enumerable: true,
        configurable: true
    });
    DataTable.prototype._onSelectAllChanged = function (value) {
        this.rows.toArray().forEach(function (row) { return (row.selected = value); });
    };
    DataTable.prototype.onRowSelectChanged = function (row) {
        // maintain the selectedRow(s) view
        if (this.multiSelect) {
            var index = this.selectedRows.indexOf(row);
            if (row.selected && index < 0) {
                this.selectedRows.push(row);
            }
            else if (!row.selected && index >= 0) {
                this.selectedRows.splice(index, 1);
            }
        }
        else {
            if (row.selected) {
                this.selectedRow = row;
            }
            else if (this.selectedRow === row) {
                this.selectedRow = undefined;
            }
        }
        // unselect all other rows:
        if (row.selected && !this.multiSelect) {
            this.rows
                .toArray()
                .filter(function (row_) { return row_.selected; })
                .forEach(function (row_) {
                if (row_ !== row) {
                    // avoid endless loop
                    row_.selected = false;
                }
            });
        }
    };
    Object.defineProperty(DataTable.prototype, "substituteItems", {
        // other:
        get: function () {
            return Array.from({ length: this.displayParams.limit - this.items.length });
        },
        enumerable: true,
        configurable: true
    });
    DataTable.prototype.resizeColumnStart = function (event, column, columnElement) {
        var _this = this;
        this._resizeInProgress = true;
        drag(event, {
            move: function (moveEvent, dx) {
                if (_this._isResizeInLimit(columnElement, dx)) {
                    column.width = columnElement.offsetWidth + dx;
                }
            }
        });
    };
    DataTable.prototype._isResizeInLimit = function (columnElement, dx) {
        /* This is needed because CSS min-width didn't work on table-layout: fixed.
             Without the limits, resizing can make the next column disappear completely,
             and even increase the table width. The current implementation suffers from the fact,
             that offsetWidth sometimes contains out-of-date values. */
        if ((dx < 0 && columnElement.offsetWidth + dx <= this.resizeLimit) ||
            !columnElement.nextElementSibling || // resizing doesn't make sense for the last visible column
            (dx >= 0 &&
                columnElement.nextElementSibling.offsetWidth + dx <=
                    this.resizeLimit)) {
            return false;
        }
        return true;
    };
    DataTable.ɵfac = function DataTable_Factory(t) { return new (t || DataTable)(); };
    DataTable.ɵcmp = i0.ɵɵdefineComponent({ type: DataTable, selectors: [["data-table"]], contentQueries: function DataTable_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
            i0.ɵɵcontentQuery(dirIndex, _c0, true);
            i0.ɵɵcontentQuery(dirIndex, DataTableColumn, false);
        } if (rf & 2) {
            var _t;
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.expandTemplate = _t.first);
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.columns = _t);
        } }, viewQuery: function DataTable_Query(rf, ctx) { if (rf & 1) {
            i0.ɵɵviewQuery(DataTableRow, true);
        } if (rf & 2) {
            var _t;
            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.rows = _t);
        } }, inputs: { items: "items", itemCount: "itemCount", headerTitle: "headerTitle", header: "header", pagination: "pagination", indexColumn: "indexColumn", indexColumnHeader: "indexColumnHeader", rowColors: "rowColors", rowTooltip: "rowTooltip", selectColumn: "selectColumn", multiSelect: "multiSelect", substituteRows: "substituteRows", expandableRows: "expandableRows", translations: "translations", selectOnRowClick: "selectOnRowClick", autoReload: "autoReload", showReloading: "showReloading", sortBy: "sortBy", sortAsc: "sortAsc", offset: "offset", limit: "limit", page: "page" }, outputs: { reload: "reload", rowClick: "rowClick", rowDoubleClick: "rowDoubleClick", headerClick: "headerClick", cellClick: "cellClick" }, decls: 16, vars: 12, consts: [[1, "data-table-wrapper"], [4, "ngIf"], [1, "data-table-box"], [1, "table", "table-condensed", "data-table"], [1, "expand-column-header", 3, "hide"], [1, "index-column-header", 3, "hide"], [3, "textContent"], [1, "select-column-header", 3, "hide"], ["type", "checkbox", 3, "hide", "ngModel", "ngModelChange"], ["class", "column-header", 3, "hide", "sortable", "resizable", "ngClass", "width", "click", 4, "ngFor", "ngForOf"], ["class", "data-table-row-wrapper", "dataTableRow", "", 3, "item", "index", "selectedChange", 4, "ngFor", "ngForOf"], ["class", "substitute-rows", 4, "ngIf"], ["class", "loading-cover", 4, "ngIf"], [1, "column-header", 3, "hide", "ngClass", "click"], ["th", ""], [3, "textContent", 4, "ngIf"], [3, "ngTemplateOutlet", "ngTemplateOutletContext", 4, "ngIf"], ["class", "column-sort-icon", 4, "ngIf"], ["class", "column-resize-handle", 3, "mousedown", 4, "ngIf"], [3, "ngTemplateOutlet", "ngTemplateOutletContext"], [1, "column-sort-icon"], [1, "fa", "fa-sort", "column-sortable-icon", 3, "hide"], [3, "hide"], [1, "fa", "fa-sort-asc", 3, "hide"], [1, "fa", "fa-sort-desc", 3, "hide"], [1, "column-resize-handle", 3, "mousedown"], ["dataTableRow", "", 1, "data-table-row-wrapper", 3, "item", "index", "selectedChange"], ["row", ""], [1, "substitute-rows"], [3, "row-odd", "row-even", 4, "ngFor", "ngForOf"], [3, "hide", 4, "ngFor", "ngForOf"], [1, "loading-cover"]], template: function DataTable_Template(rf, ctx) { if (rf & 1) {
            i0.ɵɵelementStart(0, "div", 0);
            i0.ɵɵtemplate(1, DataTable_data_table_header_1_Template, 1, 0, "data-table-header", 1);
            i0.ɵɵelementStart(2, "div", 2);
            i0.ɵɵelementStart(3, "table", 3);
            i0.ɵɵelementStart(4, "thead");
            i0.ɵɵelementStart(5, "tr");
            i0.ɵɵelement(6, "th", 4);
            i0.ɵɵelementStart(7, "th", 5);
            i0.ɵɵelement(8, "span", 6);
            i0.ɵɵelementEnd();
            i0.ɵɵelementStart(9, "th", 7);
            i0.ɵɵelementStart(10, "input", 8);
            i0.ɵɵlistener("ngModelChange", function DataTable_Template_input_ngModelChange_10_listener($event) { return ctx.selectAllCheckbox = $event; });
            i0.ɵɵelementEnd();
            i0.ɵɵelementEnd();
            i0.ɵɵtemplate(11, DataTable_th_11_Template, 7, 14, "th", 9);
            i0.ɵɵelementEnd();
            i0.ɵɵelementEnd();
            i0.ɵɵtemplate(12, DataTable_tbody_12_Template, 2, 2, "tbody", 10);
            i0.ɵɵtemplate(13, DataTable_tbody_13_Template, 2, 1, "tbody", 11);
            i0.ɵɵelementEnd();
            i0.ɵɵtemplate(14, DataTable_div_14_Template, 1, 0, "div", 12);
            i0.ɵɵelementEnd();
            i0.ɵɵtemplate(15, DataTable_data_table_pagination_15_Template, 1, 0, "data-table-pagination", 1);
            i0.ɵɵelementEnd();
        } if (rf & 2) {
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngIf", ctx.header);
            i0.ɵɵadvance(5);
            i0.ɵɵproperty("hide", !ctx.expandColumnVisible);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("hide", !ctx.indexColumnVisible);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("textContent", ctx.indexColumnHeader);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("hide", !ctx.selectColumnVisible);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("hide", !ctx.multiSelect)("ngModel", ctx.selectAllCheckbox);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngForOf", ctx.columns);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngForOf", ctx.items);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngIf", ctx.pagination && ctx.substituteRows);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngIf", ctx.showReloading && ctx.reloading);
            i0.ɵɵadvance(1);
            i0.ɵɵproperty("ngIf", ctx.pagination);
        } }, styles: ["[_nghost-%COMP%]     .data-table.table>tbody+tbody{border-top:none}[_nghost-%COMP%]     .data-table.table td{vertical-align:middle}[_nghost-%COMP%]     .data-table>tbody>tr>td, [_nghost-%COMP%]     .data-table>thead>tr>th{overflow:hidden}[_nghost-%COMP%]     .row-odd{background-color:#f6f6f6}.data-table[_ngcontent-%COMP%]   .substitute-rows[_ngcontent-%COMP%] > tr[_ngcontent-%COMP%]:hover, [_nghost-%COMP%]     .data-table .data-table-row:hover{background-color:#ececec}.data-table[_ngcontent-%COMP%]{box-shadow:0 0 15px #ececec;table-layout:fixed}.column-header[_ngcontent-%COMP%]{position:relative}.expand-column-header[_ngcontent-%COMP%]{width:50px}.select-column-header[_ngcontent-%COMP%]{width:50px;text-align:center}.index-column-header[_ngcontent-%COMP%]{width:40px}.column-header.sortable[_ngcontent-%COMP%]{cursor:pointer}.column-header[_ngcontent-%COMP%]   .column-sort-icon[_ngcontent-%COMP%]{float:right}.column-header.resizable[_ngcontent-%COMP%]   .column-sort-icon[_ngcontent-%COMP%]{margin-right:8px}.column-header[_ngcontent-%COMP%]   .column-sort-icon[_ngcontent-%COMP%]   .column-sortable-icon[_ngcontent-%COMP%]{color:#d3d3d3}.column-header[_ngcontent-%COMP%]   .column-resize-handle[_ngcontent-%COMP%]{position:absolute;top:0;right:0;margin:0;padding:0;width:8px;height:100%;cursor:col-resize}.data-table-box[_ngcontent-%COMP%]{position:relative}.loading-cover[_ngcontent-%COMP%]{position:absolute;width:100%;height:100%;background-color:rgba(255,255,255,.3);top:0}"] });
    return DataTable;
}());
export { DataTable };
/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(DataTable, [{
        type: Component,
        args: [{
                selector: 'data-table',
                templateUrl: './table.html',
                styleUrls: ['./table.css']
            }]
    }], null, { items: [{
            type: Input
        }], itemCount: [{
            type: Input
        }], columns: [{
            type: ContentChildren,
            args: [DataTableColumn]
        }], rows: [{
            type: ViewChildren,
            args: [DataTableRow]
        }], expandTemplate: [{
            type: ContentChild,
            args: ['dataTableExpand']
        }], headerTitle: [{
            type: Input
        }], header: [{
            type: Input
        }], pagination: [{
            type: Input
        }], indexColumn: [{
            type: Input
        }], indexColumnHeader: [{
            type: Input
        }], rowColors: [{
            type: Input
        }], rowTooltip: [{
            type: Input
        }], selectColumn: [{
            type: Input
        }], multiSelect: [{
            type: Input
        }], substituteRows: [{
            type: Input
        }], expandableRows: [{
            type: Input
        }], translations: [{
            type: Input
        }], selectOnRowClick: [{
            type: Input
        }], autoReload: [{
            type: Input
        }], showReloading: [{
            type: Input
        }], sortBy: [{
            type: Input
        }], sortAsc: [{
            type: Input
        }], offset: [{
            type: Input
        }], limit: [{
            type: Input
        }], page: [{
            type: Input
        }], reload: [{
            type: Output
        }], rowClick: [{
            type: Output
        }], rowDoubleClick: [{
            type: Output
        }], headerClick: [{
            type: Output
        }], cellClick: [{
            type: Output
        }] }); })();
//# sourceMappingURL=data:application/json;base64,