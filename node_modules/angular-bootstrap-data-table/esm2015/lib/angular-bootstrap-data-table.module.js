import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { DataTable } from './components/table.component';
import { DataTableColumn } from './components/column.component';
import { DataTableRow } from './components/row.component';
import { DataTablePagination } from './components/pagination.component';
import { DataTableHeader } from './components/header.component';
import { PixelConverter } from './utils/px';
import { Hide } from './utils/hide';
import { MinPipe } from './utils/min';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/forms";
export * from './components/types';
export * from './tools/data-table-resource';
export { DataTable, DataTableColumn, DataTableRow, DataTablePagination, DataTableHeader };
export const DATA_TABLE_DIRECTIVES = [DataTable, DataTableColumn];
export class DataTableModule {
}
DataTableModule.ɵmod = i0.ɵɵdefineNgModule({ type: DataTableModule });
DataTableModule.ɵinj = i0.ɵɵdefineInjector({ factory: function DataTableModule_Factory(t) { return new (t || DataTableModule)(); }, imports: [[CommonModule, FormsModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0.ɵɵsetNgModuleScope(DataTableModule, { declarations: [DataTable,
        DataTableColumn,
        DataTableRow,
        DataTablePagination,
        DataTableHeader,
        PixelConverter,
        Hide,
        MinPipe], imports: [CommonModule, FormsModule], exports: [DataTable, DataTableColumn] }); })();
/*@__PURE__*/ (function () { i0.ɵsetClassMetadata(DataTableModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, FormsModule],
                declarations: [
                    DataTable,
                    DataTableColumn,
                    DataTableRow,
                    DataTablePagination,
                    DataTableHeader,
                    PixelConverter,
                    Hide,
                    MinPipe
                ],
                exports: [DataTable, DataTableColumn]
            }]
    }], null, null); })();
i0.ɵɵsetComponentScope(DataTable, [i1.NgClass, i1.NgComponentOutlet, i1.NgForOf, i1.NgIf, i1.NgTemplateOutlet, i1.NgStyle, i1.NgSwitch, i1.NgSwitchCase, i1.NgSwitchDefault, i1.NgPlural, i1.NgPluralCase, i2.ɵangular_packages_forms_forms_y, i2.NgSelectOption, i2.ɵangular_packages_forms_forms_x, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.RangeValueAccessor, i2.CheckboxControlValueAccessor, i2.SelectControlValueAccessor, i2.SelectMultipleControlValueAccessor, i2.RadioControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.MinLengthValidator, i2.MaxLengthValidator, i2.PatternValidator, i2.CheckboxRequiredValidator, i2.EmailValidator, i2.NgModel, i2.NgModelGroup, i2.NgForm, DataTable,
    DataTableColumn,
    DataTableRow,
    DataTablePagination,
    DataTableHeader,
    Hide], [i1.AsyncPipe, i1.UpperCasePipe, i1.LowerCasePipe, i1.JsonPipe, i1.SlicePipe, i1.DecimalPipe, i1.PercentPipe, i1.TitleCasePipe, i1.CurrencyPipe, i1.DatePipe, i1.I18nPluralPipe, i1.I18nSelectPipe, i1.KeyValuePipe, PixelConverter,
    MinPipe]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhci1ib290c3RyYXAtZGF0YS10YWJsZS5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hbmd1bGFyLWJvb3RzdHJhcC1kYXRhLXRhYmxlLyIsInNvdXJjZXMiOlsibGliL2FuZ3VsYXItYm9vdHN0cmFwLWRhdGEtdGFibGUubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUU3QyxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDekQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQ2hFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUN4RSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFFaEUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUM1QyxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sY0FBYyxDQUFDO0FBQ3BDLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxhQUFhLENBQUM7Ozs7QUFFdEMsY0FBYyxvQkFBb0IsQ0FBQztBQUNuQyxjQUFjLDZCQUE2QixDQUFDO0FBRTVDLE9BQU8sRUFDTCxTQUFTLEVBQ1QsZUFBZSxFQUNmLFlBQVksRUFDWixtQkFBbUIsRUFDbkIsZUFBZSxFQUNoQixDQUFDO0FBQ0YsTUFBTSxDQUFDLE1BQU0scUJBQXFCLEdBQUcsQ0FBQyxTQUFTLEVBQUUsZUFBZSxDQUFDLENBQUM7QUFnQmxFLE1BQU0sT0FBTyxlQUFlOzttREFBZixlQUFlOzZHQUFmLGVBQWUsa0JBYmpCLENBQUMsWUFBWSxFQUFFLFdBQVcsQ0FBQzt3RkFhekIsZUFBZSxtQkFYeEIsU0FBUztRQUNULGVBQWU7UUFDZixZQUFZO1FBQ1osbUJBQW1CO1FBQ25CLGVBQWU7UUFDZixjQUFjO1FBQ2QsSUFBSTtRQUNKLE9BQU8sYUFUQyxZQUFZLEVBQUUsV0FBVyxhQVd6QixTQUFTLEVBQUUsZUFBZTtrREFFekIsZUFBZTtjQWQzQixRQUFRO2VBQUM7Z0JBQ1IsT0FBTyxFQUFFLENBQUMsWUFBWSxFQUFFLFdBQVcsQ0FBQztnQkFDcEMsWUFBWSxFQUFFO29CQUNaLFNBQVM7b0JBQ1QsZUFBZTtvQkFDZixZQUFZO29CQUNaLG1CQUFtQjtvQkFDbkIsZUFBZTtvQkFDZixjQUFjO29CQUNkLElBQUk7b0JBQ0osT0FBTztpQkFDUjtnQkFDRCxPQUFPLEVBQUUsQ0FBQyxTQUFTLEVBQUUsZUFBZSxDQUFDO2FBQ3RDOzt1QkFWRyxTQUFTLGtyQkFBVCxTQUFTO0lBQ1QsZUFBZTtJQUNmLFlBQVk7SUFDWixtQkFBbUI7SUFDbkIsZUFBZTtJQUVmLElBQUksd05BREosY0FBYztJQUVkLE9BQU8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQgeyBGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuXHJcbmltcG9ydCB7IERhdGFUYWJsZSB9IGZyb20gJy4vY29tcG9uZW50cy90YWJsZS5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBEYXRhVGFibGVDb2x1bW4gfSBmcm9tICcuL2NvbXBvbmVudHMvY29sdW1uLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IERhdGFUYWJsZVJvdyB9IGZyb20gJy4vY29tcG9uZW50cy9yb3cuY29tcG9uZW50JztcclxuaW1wb3J0IHsgRGF0YVRhYmxlUGFnaW5hdGlvbiB9IGZyb20gJy4vY29tcG9uZW50cy9wYWdpbmF0aW9uLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IERhdGFUYWJsZUhlYWRlciB9IGZyb20gJy4vY29tcG9uZW50cy9oZWFkZXIuY29tcG9uZW50JztcclxuXHJcbmltcG9ydCB7IFBpeGVsQ29udmVydGVyIH0gZnJvbSAnLi91dGlscy9weCc7XHJcbmltcG9ydCB7IEhpZGUgfSBmcm9tICcuL3V0aWxzL2hpZGUnO1xyXG5pbXBvcnQgeyBNaW5QaXBlIH0gZnJvbSAnLi91dGlscy9taW4nO1xyXG5cclxuZXhwb3J0ICogZnJvbSAnLi9jb21wb25lbnRzL3R5cGVzJztcclxuZXhwb3J0ICogZnJvbSAnLi90b29scy9kYXRhLXRhYmxlLXJlc291cmNlJztcclxuXHJcbmV4cG9ydCB7XHJcbiAgRGF0YVRhYmxlLFxyXG4gIERhdGFUYWJsZUNvbHVtbixcclxuICBEYXRhVGFibGVSb3csXHJcbiAgRGF0YVRhYmxlUGFnaW5hdGlvbixcclxuICBEYXRhVGFibGVIZWFkZXJcclxufTtcclxuZXhwb3J0IGNvbnN0IERBVEFfVEFCTEVfRElSRUNUSVZFUyA9IFtEYXRhVGFibGUsIERhdGFUYWJsZUNvbHVtbl07XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGltcG9ydHM6IFtDb21tb25Nb2R1bGUsIEZvcm1zTW9kdWxlXSxcclxuICBkZWNsYXJhdGlvbnM6IFtcclxuICAgIERhdGFUYWJsZSxcclxuICAgIERhdGFUYWJsZUNvbHVtbixcclxuICAgIERhdGFUYWJsZVJvdyxcclxuICAgIERhdGFUYWJsZVBhZ2luYXRpb24sXHJcbiAgICBEYXRhVGFibGVIZWFkZXIsXHJcbiAgICBQaXhlbENvbnZlcnRlcixcclxuICAgIEhpZGUsXHJcbiAgICBNaW5QaXBlXHJcbiAgXSxcclxuICBleHBvcnRzOiBbRGF0YVRhYmxlLCBEYXRhVGFibGVDb2x1bW5dXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBEYXRhVGFibGVNb2R1bGUge31cclxuIl19