(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('@angular/forms')) :
    typeof define === 'function' && define.amd ? define('angular-bootstrap-data-table', ['exports', '@angular/core', '@angular/common', '@angular/forms'], factory) :
    (global = global || self, factory(global['angular-bootstrap-data-table'] = {}, global.ng.core, global.ng.common, global.ng.forms));
}(this, (function (exports, core, common, forms) { 'use strict';

    var _c0 = ["dataTableCell"];
    var _c1 = ["dataTableHeader"];
    var DataTableColumn = /** @class */ (function () {
        function DataTableColumn() {
            this.sortable = false;
            this.resizable = false;
            this.visible = true;
            this.styleClassObject = {}; // for [ngClass]
        }
        DataTableColumn.prototype.getCellColor = function (row, index) {
            if (this.cellColors !== undefined) {
                return this.cellColors(row.item, row, this, index);
            }
        };
        DataTableColumn.prototype.ngOnInit = function () {
            this._initCellClass();
        };
        DataTableColumn.prototype._initCellClass = function () {
            var _a;
            if (!this.styleClass && this.property) {
                if (/^[a-zA-Z0-9_]+$/.test(this.property)) {
                    this.styleClass = 'column-' + this.property;
                }
                else {
                    this.styleClass =
                        'column-' + this.property.replace(/[^a-zA-Z0-9_]/g, '');
                }
            }
            if (this.styleClass != null) {
                this.styleClassObject = (_a = {},
                    _a[this.styleClass] = true,
                    _a);
            }
        };
        DataTableColumn.ɵfac = function DataTableColumn_Factory(t) { return new (t || DataTableColumn)(); };
        DataTableColumn.ɵdir = core.ɵɵdefineDirective({ type: DataTableColumn, selectors: [["data-table-column"]], contentQueries: function DataTableColumn_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
                core.ɵɵcontentQuery(dirIndex, _c0, true);
                core.ɵɵcontentQuery(dirIndex, _c1, true);
            } if (rf & 2) {
                var _t;
                core.ɵɵqueryRefresh(_t = core.ɵɵloadQuery()) && (ctx.cellTemplate = _t.first);
                core.ɵɵqueryRefresh(_t = core.ɵɵloadQuery()) && (ctx.headerTemplate = _t.first);
            } }, inputs: { header: "header", sortable: "sortable", resizable: "resizable", property: "property", styleClass: "styleClass", cellColors: "cellColors", width: "width", visible: "visible" } });
        return DataTableColumn;
    }());
    /*@__PURE__*/ (function () { core.ɵsetClassMetadata(DataTableColumn, [{
            type: core.Directive,
            args: [{
                    selector: 'data-table-column'
                }]
        }], null, { header: [{
                type: core.Input
            }], sortable: [{
                type: core.Input
            }], resizable: [{
                type: core.Input
            }], property: [{
                type: core.Input
            }], styleClass: [{
                type: core.Input
            }], cellColors: [{
                type: core.Input
            }], width: [{
                type: core.Input
            }], visible: [{
                type: core.Input
            }], cellTemplate: [{
                type: core.ContentChild,
                args: ['dataTableCell']
            }], headerTemplate: [{
                type: core.ContentChild,
                args: ['dataTableHeader']
            }] }); })();

    function isBlank(obj) {
        return obj === undefined || obj === null;
    }
    var Hide = /** @class */ (function () {
        function Hide(_elementRef, _renderer) {
            this._elementRef = _elementRef;
            this._renderer = _renderer;
            this._prevCondition = null;
        }
        Object.defineProperty(Hide.prototype, "hide", {
            set: function (newCondition) {
                this.initDisplayStyle();
                if (newCondition && (isBlank(this._prevCondition) || !this._prevCondition)) {
                    this._prevCondition = true;
                    this._renderer.setStyle(this._elementRef.nativeElement, 'display', 'none');
                }
                else if (!newCondition && (isBlank(this._prevCondition) || this._prevCondition)) {
                    this._prevCondition = false;
                    this._renderer.setStyle(this._elementRef.nativeElement, 'display', this._displayStyle);
                }
            },
            enumerable: true,
            configurable: true
        });
        Hide.prototype.initDisplayStyle = function () {
            if (this._displayStyle === undefined) {
                var displayStyle = this._elementRef.nativeElement.style.display;
                if (displayStyle && displayStyle !== 'none') {
                    this._displayStyle = displayStyle;
                }
            }
        };
        Hide.ɵfac = function Hide_Factory(t) { return new (t || Hide)(core.ɵɵdirectiveInject(core.ElementRef), core.ɵɵdirectiveInject(core.Renderer2)); };
        Hide.ɵdir = core.ɵɵdefineDirective({ type: Hide, selectors: [["", "hide", ""]], inputs: { hide: "hide" } });
        return Hide;
    }());
    /*@__PURE__*/ (function () { core.ɵsetClassMetadata(Hide, [{
            type: core.Directive,
            args: [{ selector: '[hide]', inputs: ['hide'] }]
        }], function () { return [{ type: core.ElementRef }, { type: core.Renderer2 }]; }, null); })();

    var _c0$1 = ["dataTableRow", ""];
    function DataTableRow_td_7_div_1_Template(rf, ctx) { if (rf & 1) {
        core.ɵɵelement(0, "div", 12);
    } if (rf & 2) {
        var column_r2 = core.ɵɵnextContext().$implicit;
        var ctx_r3 = core.ɵɵnextContext();
        core.ɵɵproperty("textContent", ctx_r3.item[column_r2.property]);
    } }
    var _c1$1 = function (a0, a1, a2) { return { column: a0, row: a1, item: a2 }; };
    function DataTableRow_td_7_div_2_Template(rf, ctx) { if (rf & 1) {
        core.ɵɵelement(0, "div", 13);
    } if (rf & 2) {
        var column_r2 = core.ɵɵnextContext().$implicit;
        var ctx_r4 = core.ɵɵnextContext();
        core.ɵɵproperty("ngTemplateOutlet", column_r2.cellTemplate)("ngTemplateOutletContext", core.ɵɵpureFunction3(2, _c1$1, column_r2, ctx_r4._this, ctx_r4.item));
    } }
    function DataTableRow_td_7_Template(rf, ctx) { if (rf & 1) {
        core.ɵɵelementStart(0, "td", 9);
        core.ɵɵtemplate(1, DataTableRow_td_7_div_1_Template, 1, 1, "div", 10);
        core.ɵɵtemplate(2, DataTableRow_td_7_div_2_Template, 1, 6, "div", 11);
        core.ɵɵelementEnd();
    } if (rf & 2) {
        var column_r2 = ctx.$implicit;
        var ctx_r0 = core.ɵɵnextContext();
        core.ɵɵstyleProp("background-color", column_r2.getCellColor(ctx_r0._this, ctx_r0.index));
        core.ɵɵproperty("hide", !column_r2.visible)("ngClass", column_r2.styleClassObject);
        core.ɵɵadvance(1);
        core.ɵɵproperty("ngIf", !column_r2.cellTemplate);
        core.ɵɵadvance(1);
        core.ɵɵproperty("ngIf", column_r2.cellTemplate);
    } }
    var _c2 = function (a0, a1) { return { row: a0, item: a1 }; };
    function DataTableRow_tr_8_Template(rf, ctx) { if (rf & 1) {
        core.ɵɵelementStart(0, "tr", 14);
        core.ɵɵelementStart(1, "td");
        core.ɵɵelement(2, "div", 13);
        core.ɵɵelementEnd();
        core.ɵɵelementEnd();
    } if (rf & 2) {
        var ctx_r1 = core.ɵɵnextContext();
        core.ɵɵproperty("hide", !ctx_r1.expanded);
        core.ɵɵadvance(1);
        core.ɵɵattribute("colspan", ctx_r1.dataTable.columnCount);
        core.ɵɵadvance(1);
        core.ɵɵproperty("ngTemplateOutlet", ctx_r1.dataTable.expandTemplate)("ngTemplateOutletContext", core.ɵɵpureFunction2(4, _c2, ctx_r1._this, ctx_r1.item));
    } }
    var DataTableRow = /** @class */ (function () {
        function DataTableRow(dataTable) {
            this.dataTable = dataTable;
            this.selectedChange = new core.EventEmitter();
            this._this = this; // FIXME is there no template keyword for this in angular 2?
        }
        Object.defineProperty(DataTableRow.prototype, "selected", {
            get: function () {
                return this._selected;
            },
            set: function (selected) {
                this._selected = selected;
                this.selectedChange.emit(selected);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataTableRow.prototype, "displayIndex", {
            // other:
            get: function () {
                if (this.dataTable.pagination) {
                    return this.dataTable.displayParams.offset + this.index + 1;
                }
                else {
                    return this.index + 1;
                }
            },
            enumerable: true,
            configurable: true
        });
        DataTableRow.prototype.getTooltip = function () {
            if (this.dataTable.rowTooltip) {
                return this.dataTable.rowTooltip(this.item, this, this.index);
            }
            return '';
        };
        DataTableRow.prototype.ngOnDestroy = function () {
            this.selected = false;
        };
        DataTableRow.ɵfac = function DataTableRow_Factory(t) { return new (t || DataTableRow)(core.ɵɵdirectiveInject(core.forwardRef(function () { return DataTable; }))); };
        DataTableRow.ɵcmp = core.ɵɵdefineComponent({ type: DataTableRow, selectors: [["", "dataTableRow", ""]], inputs: { item: "item", index: "index" }, outputs: { selectedChange: "selectedChange" }, attrs: _c0$1, decls: 9, vars: 20, consts: [[1, "data-table-row", 3, "title", "dblclick", "click"], [1, "row-expand-button", 3, "hide", "click"], [1, "fa", "fa-arrow-circle-o-right", 3, "hide"], [1, "fa", "fa-arrow-circle-o-down", 3, "hide"], [1, "index-column", 3, "hide", "textContent"], [1, "select-column", 3, "hide"], ["type", "checkbox", 3, "ngModel", "ngModelChange"], ["class", "data-column", 3, "hide", "ngClass", "background-color", 4, "ngFor", "ngForOf"], ["class", "row-expansion", 3, "hide", 4, "ngIf"], [1, "data-column", 3, "hide", "ngClass"], [3, "textContent", 4, "ngIf"], [3, "ngTemplateOutlet", "ngTemplateOutletContext", 4, "ngIf"], [3, "textContent"], [3, "ngTemplateOutlet", "ngTemplateOutletContext"], [1, "row-expansion", 3, "hide"]], template: function DataTableRow_Template(rf, ctx) { if (rf & 1) {
                core.ɵɵelementStart(0, "tr", 0);
                core.ɵɵlistener("dblclick", function DataTableRow_Template_tr_dblclick_0_listener($event) { return ctx.dataTable.rowDoubleClicked(ctx._this, $event); })("click", function DataTableRow_Template_tr_click_0_listener($event) { return ctx.dataTable.rowClicked(ctx._this, $event); });
                core.ɵɵelementStart(1, "td", 1);
                core.ɵɵlistener("click", function DataTableRow_Template_td_click_1_listener($event) { ctx.expanded = !ctx.expanded; return $event.stopPropagation(); });
                core.ɵɵelement(2, "span", 2);
                core.ɵɵelement(3, "span", 3);
                core.ɵɵelementEnd();
                core.ɵɵelement(4, "td", 4);
                core.ɵɵelementStart(5, "td", 5);
                core.ɵɵelementStart(6, "input", 6);
                core.ɵɵlistener("ngModelChange", function DataTableRow_Template_input_ngModelChange_6_listener($event) { return ctx.selected = $event; });
                core.ɵɵelementEnd();
                core.ɵɵelementEnd();
                core.ɵɵtemplate(7, DataTableRow_td_7_Template, 3, 6, "td", 7);
                core.ɵɵelementEnd();
                core.ɵɵtemplate(8, DataTableRow_tr_8_Template, 3, 7, "tr", 8);
            } if (rf & 2) {
                core.ɵɵstyleProp("background-color", ctx.dataTable.getRowColor(ctx.item, ctx.index, ctx._this));
                core.ɵɵclassProp("row-odd", ctx.index % 2 === 0)("row-even", ctx.index % 2 === 1)("selected", ctx.selected)("clickable", ctx.dataTable.selectOnRowClick);
                core.ɵɵproperty("title", ctx.getTooltip());
                core.ɵɵadvance(1);
                core.ɵɵproperty("hide", !ctx.dataTable.expandColumnVisible);
                core.ɵɵadvance(1);
                core.ɵɵproperty("hide", ctx.expanded);
                core.ɵɵadvance(1);
                core.ɵɵproperty("hide", !ctx.expanded);
                core.ɵɵadvance(1);
                core.ɵɵproperty("hide", !ctx.dataTable.indexColumnVisible)("textContent", ctx.displayIndex);
                core.ɵɵadvance(1);
                core.ɵɵproperty("hide", !ctx.dataTable.selectColumnVisible);
                core.ɵɵadvance(1);
                core.ɵɵproperty("ngModel", ctx.selected);
                core.ɵɵadvance(1);
                core.ɵɵproperty("ngForOf", ctx.dataTable.columns);
                core.ɵɵadvance(1);
                core.ɵɵproperty("ngIf", ctx.dataTable.expandableRows);
            } }, directives: [Hide, forms.CheckboxControlValueAccessor, forms.NgControlStatus, forms.NgModel, common.NgForOf, common.NgIf, common.NgClass, common.NgTemplateOutlet], styles: [".select-column[_ngcontent-%COMP%]{text-align:center}.row-expand-button[_ngcontent-%COMP%]{cursor:pointer;text-align:center}.clickable[_ngcontent-%COMP%]{cursor:pointer}"] });
        return DataTableRow;
    }());
    /*@__PURE__*/ (function () { core.ɵsetClassMetadata(DataTableRow, [{
            type: core.Component,
            args: [{
                    selector: '[dataTableRow]',
                    templateUrl: './row.html',
                    styleUrls: ['./row.css']
                }]
        }], function () { return [{ type: DataTable, decorators: [{
                    type: core.Inject,
                    args: [core.forwardRef(function () { return DataTable; })]
                }] }]; }, { item: [{
                type: core.Input
            }], index: [{
                type: core.Input
            }], selectedChange: [{
                type: core.Output
            }] }); })();

    var defaultTranslations = {
        indexColumn: 'index',
        selectColumn: 'select',
        expandColumn: 'expand',
        paginationLimit: 'Limit',
        paginationRange: 'Results'
    };

    function drag(event, _a) {
        var move = _a.move, up = _a.up;
        var startX = event.pageX;
        var startY = event.pageY;
        var x = startX;
        var y = startY;
        var moved = false;
        function mouseMoveHandler(event) {
            var dx = event.pageX - x;
            var dy = event.pageY - y;
            x = event.pageX;
            y = event.pageY;
            if (dx || dy)
                moved = true;
            move(event, dx, dy, x, y);
            event.preventDefault(); // to avoid text selection
        }
        function mouseUpHandler(event) {
            x = event.pageX;
            y = event.pageY;
            document.removeEventListener('mousemove', mouseMoveHandler);
            document.removeEventListener('mouseup', mouseUpHandler);
            if (up)
                up(event, x, y, moved);
        }
        document.addEventListener('mousemove', mouseMoveHandler);
        document.addEventListener('mouseup', mouseUpHandler);
    }

    var _c0$2 = ["dataTableExpand"];
    function DataTable_data_table_header_1_Template(rf, ctx) { if (rf & 1) {
        core.ɵɵelement(0, "data-table-header");
    } }
    function DataTable_th_11_span_3_Template(rf, ctx) { if (rf & 1) {
        core.ɵɵelement(0, "span", 6);
    } if (rf & 2) {
        var column_r6 = core.ɵɵnextContext().$implicit;
        core.ɵɵproperty("textContent", column_r6.header);
    } }
    var _c1$2 = function (a0) { return { column: a0 }; };
    function DataTable_th_11_span_4_Template(rf, ctx) { if (rf & 1) {
        core.ɵɵelement(0, "span", 19);
    } if (rf & 2) {
        var column_r6 = core.ɵɵnextContext().$implicit;
        core.ɵɵproperty("ngTemplateOutlet", column_r6.headerTemplate)("ngTemplateOutletContext", core.ɵɵpureFunction1(2, _c1$2, column_r6));
    } }
    function DataTable_th_11_span_5_Template(rf, ctx) { if (rf & 1) {
        core.ɵɵelementStart(0, "span", 20);
        core.ɵɵelement(1, "i", 21);
        core.ɵɵelementStart(2, "span", 22);
        core.ɵɵelement(3, "i", 23);
        core.ɵɵelement(4, "i", 24);
        core.ɵɵelementEnd();
        core.ɵɵelementEnd();
    } if (rf & 2) {
        var column_r6 = core.ɵɵnextContext().$implicit;
        var ctx_r10 = core.ɵɵnextContext();
        core.ɵɵadvance(1);
        core.ɵɵproperty("hide", column_r6.property === ctx_r10.sortBy);
        core.ɵɵadvance(1);
        core.ɵɵproperty("hide", column_r6.property !== ctx_r10.sortBy);
        core.ɵɵadvance(1);
        core.ɵɵproperty("hide", ctx_r10.sortAsc);
        core.ɵɵadvance(1);
        core.ɵɵproperty("hide", !ctx_r10.sortAsc);
    } }
    function DataTable_th_11_span_6_Template(rf, ctx) { if (rf & 1) {
        var _r16 = core.ɵɵgetCurrentView();
        core.ɵɵelementStart(0, "span", 25);
        core.ɵɵlistener("mousedown", function DataTable_th_11_span_6_Template_span_mousedown_0_listener($event) { core.ɵɵrestoreView(_r16); var column_r6 = core.ɵɵnextContext().$implicit; var _r7 = core.ɵɵreference(1); var ctx_r15 = core.ɵɵnextContext(); return ctx_r15.resizeColumnStart($event, column_r6, _r7); });
        core.ɵɵelementEnd();
    } }
    function DataTable_th_11_Template(rf, ctx) { if (rf & 1) {
        var _r19 = core.ɵɵgetCurrentView();
        core.ɵɵelementStart(0, "th", 13, 14);
        core.ɵɵlistener("click", function DataTable_th_11_Template_th_click_0_listener($event) { core.ɵɵrestoreView(_r19); var column_r6 = ctx.$implicit; var ctx_r18 = core.ɵɵnextContext(); return ctx_r18.headerClicked(column_r6, $event); });
        core.ɵɵpipe(2, "px");
        core.ɵɵtemplate(3, DataTable_th_11_span_3_Template, 1, 1, "span", 15);
        core.ɵɵtemplate(4, DataTable_th_11_span_4_Template, 1, 4, "span", 16);
        core.ɵɵtemplate(5, DataTable_th_11_span_5_Template, 5, 4, "span", 17);
        core.ɵɵtemplate(6, DataTable_th_11_span_6_Template, 1, 0, "span", 18);
        core.ɵɵelementEnd();
    } if (rf & 2) {
        var column_r6 = ctx.$implicit;
        core.ɵɵstyleProp("width", core.ɵɵpipeBind1(2, 12, column_r6.width));
        core.ɵɵclassProp("sortable", column_r6.sortable)("resizable", column_r6.resizable);
        core.ɵɵproperty("hide", !column_r6.visible)("ngClass", column_r6.styleClassObject);
        core.ɵɵadvance(3);
        core.ɵɵproperty("ngIf", !column_r6.headerTemplate);
        core.ɵɵadvance(1);
        core.ɵɵproperty("ngIf", column_r6.headerTemplate);
        core.ɵɵadvance(1);
        core.ɵɵproperty("ngIf", column_r6.sortable);
        core.ɵɵadvance(1);
        core.ɵɵproperty("ngIf", column_r6.resizable);
    } }
    function DataTable_tbody_12_Template(rf, ctx) { if (rf & 1) {
        var _r24 = core.ɵɵgetCurrentView();
        core.ɵɵelementStart(0, "tbody", 26, 27);
        core.ɵɵlistener("selectedChange", function DataTable_tbody_12_Template_tbody_selectedChange_0_listener() { core.ɵɵrestoreView(_r24); var _r22 = core.ɵɵreference(1); var ctx_r23 = core.ɵɵnextContext(); return ctx_r23.onRowSelectChanged(_r22); });
        core.ɵɵelementEnd();
    } if (rf & 2) {
        var item_r20 = ctx.$implicit;
        var index_r21 = ctx.index;
        core.ɵɵproperty("item", item_r20)("index", index_r21);
    } }
    function DataTable_tbody_13_tr_1_td_5_Template(rf, ctx) { if (rf & 1) {
        core.ɵɵelement(0, "td", 22);
    } if (rf & 2) {
        var column_r29 = ctx.$implicit;
        core.ɵɵproperty("hide", !column_r29.visible);
    } }
    function DataTable_tbody_13_tr_1_Template(rf, ctx) { if (rf & 1) {
        core.ɵɵelementStart(0, "tr");
        core.ɵɵelement(1, "td", 22);
        core.ɵɵelementStart(2, "td", 22);
        core.ɵɵtext(3, "\u00A0");
        core.ɵɵelementEnd();
        core.ɵɵelement(4, "td", 22);
        core.ɵɵtemplate(5, DataTable_tbody_13_tr_1_td_5_Template, 1, 1, "td", 30);
        core.ɵɵelementEnd();
    } if (rf & 2) {
        var index_r27 = ctx.index;
        var ctx_r25 = core.ɵɵnextContext(2);
        core.ɵɵclassProp("row-odd", (index_r27 + ctx_r25.items.length) % 2 === 0)("row-even", (index_r27 + ctx_r25.items.length) % 2 === 1);
        core.ɵɵadvance(1);
        core.ɵɵproperty("hide", !ctx_r25.expandColumnVisible);
        core.ɵɵadvance(1);
        core.ɵɵproperty("hide", !ctx_r25.indexColumnVisible);
        core.ɵɵadvance(2);
        core.ɵɵproperty("hide", !ctx_r25.selectColumnVisible);
        core.ɵɵadvance(1);
        core.ɵɵproperty("ngForOf", ctx_r25.columns);
    } }
    function DataTable_tbody_13_Template(rf, ctx) { if (rf & 1) {
        core.ɵɵelementStart(0, "tbody", 28);
        core.ɵɵtemplate(1, DataTable_tbody_13_tr_1_Template, 6, 8, "tr", 29);
        core.ɵɵelementEnd();
    } if (rf & 2) {
        var ctx_r3 = core.ɵɵnextContext();
        core.ɵɵadvance(1);
        core.ɵɵproperty("ngForOf", ctx_r3.substituteItems);
    } }
    function DataTable_div_14_Template(rf, ctx) { if (rf & 1) {
        core.ɵɵelement(0, "div", 31);
    } }
    function DataTable_data_table_pagination_15_Template(rf, ctx) { if (rf & 1) {
        core.ɵɵelement(0, "data-table-pagination");
    } }
    var DataTable = /** @class */ (function () {
        function DataTable() {
            this._items = [];
            this.header = true;
            this.pagination = true;
            this.indexColumn = true;
            this.indexColumnHeader = '';
            this.selectColumn = false;
            this.multiSelect = true;
            this.substituteRows = true;
            this.expandableRows = false;
            this.translations = defaultTranslations;
            this.selectOnRowClick = false;
            this.autoReload = true;
            this.showReloading = false;
            this._sortAsc = true;
            this._offset = 0;
            this._limit = 10;
            // Reloading:
            this._reloading = false;
            this.reload = new core.EventEmitter();
            this._displayParams = {}; // params of the last finished reload
            this._scheduledReload = null;
            // event handlers:
            this.rowClick = new core.EventEmitter();
            this.rowDoubleClick = new core.EventEmitter();
            this.headerClick = new core.EventEmitter();
            this.cellClick = new core.EventEmitter();
            this.selectedRows = [];
            this._selectAllCheckbox = false;
            // column resizing:
            this._resizeInProgress = false;
            this.resizeLimit = 30;
        }
        Object.defineProperty(DataTable.prototype, "items", {
            get: function () {
                return this._items;
            },
            set: function (items) {
                this._items = items;
                this._onReloadFinished();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataTable.prototype, "sortBy", {
            get: function () {
                return this._sortBy;
            },
            set: function (value) {
                this._sortBy = value;
                this._triggerReload();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataTable.prototype, "sortAsc", {
            get: function () {
                return this._sortAsc;
            },
            set: function (value) {
                this._sortAsc = value;
                this._triggerReload();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataTable.prototype, "offset", {
            get: function () {
                return this._offset;
            },
            set: function (value) {
                this._offset = value;
                this._triggerReload();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataTable.prototype, "limit", {
            get: function () {
                return this._limit;
            },
            set: function (value) {
                this._limit = value;
                this._triggerReload();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataTable.prototype, "page", {
            // calculated property:
            get: function () {
                return Math.floor(this.offset / this.limit) + 1;
            },
            set: function (value) {
                this.offset = (value - 1) * this.limit;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataTable.prototype, "lastPage", {
            get: function () {
                return Math.ceil(this.itemCount / this.limit);
            },
            enumerable: true,
            configurable: true
        });
        // setting multiple observable properties simultaneously
        DataTable.prototype.sort = function (sortBy, asc) {
            this.sortBy = sortBy;
            this.sortAsc = asc;
        };
        // init
        DataTable.prototype.ngOnInit = function () {
            this._initDefaultValues();
            this._initDefaultClickEvents();
            this._updateDisplayParams();
            if (this.autoReload && this._scheduledReload == null) {
                this.reloadItems();
            }
        };
        DataTable.prototype._initDefaultValues = function () {
            this.indexColumnVisible = this.indexColumn;
            this.selectColumnVisible = this.selectColumn;
            this.expandColumnVisible = this.expandableRows;
        };
        DataTable.prototype._initDefaultClickEvents = function () {
            var _this = this;
            this.headerClick.subscribe(function (tableEvent) {
                return _this.sortColumn(tableEvent.column);
            });
            if (this.selectOnRowClick) {
                this.rowClick.subscribe(function (tableEvent) { return (tableEvent.row.selected = !tableEvent.row.selected); });
            }
        };
        Object.defineProperty(DataTable.prototype, "reloading", {
            get: function () {
                return this._reloading;
            },
            enumerable: true,
            configurable: true
        });
        DataTable.prototype.reloadItems = function () {
            this._reloading = true;
            this.reload.emit(this._getRemoteParameters());
        };
        DataTable.prototype._onReloadFinished = function () {
            this._updateDisplayParams();
            this._selectAllCheckbox = false;
            this._reloading = false;
        };
        Object.defineProperty(DataTable.prototype, "displayParams", {
            get: function () {
                return this._displayParams;
            },
            enumerable: true,
            configurable: true
        });
        DataTable.prototype._updateDisplayParams = function () {
            this._displayParams = {
                sortBy: this.sortBy,
                sortAsc: this.sortAsc,
                offset: this.offset,
                limit: this.limit
            };
        };
        // for avoiding cascading reloads if multiple params are set at once:
        DataTable.prototype._triggerReload = function () {
            var _this = this;
            if (this._scheduledReload) {
                clearTimeout(this._scheduledReload);
            }
            this._scheduledReload = setTimeout(function () {
                _this.reloadItems();
            });
        };
        DataTable.prototype.rowClicked = function (row, event) {
            this.rowClick.emit({ row: row, event: event });
        };
        DataTable.prototype.rowDoubleClicked = function (row, event) {
            this.rowDoubleClick.emit({ row: row, event: event });
        };
        DataTable.prototype.headerClicked = function (column, event) {
            if (!this._resizeInProgress) {
                this.headerClick.emit({ column: column, event: event });
            }
            else {
                this._resizeInProgress = false; // this is because I can't prevent click from mousup of the drag end
            }
        };
        DataTable.prototype.cellClicked = function (column, row, event) {
            this.cellClick.emit({ row: row, column: column, event: event });
        };
        // functions:
        DataTable.prototype._getRemoteParameters = function () {
            var params = {};
            if (this.sortBy) {
                params.sortBy = this.sortBy;
                params.sortAsc = this.sortAsc;
            }
            if (this.pagination) {
                params.offset = this.offset;
                params.limit = this.limit;
            }
            return params;
        };
        DataTable.prototype.sortColumn = function (column) {
            if (column.sortable) {
                var ascending = this.sortBy === column.property ? !this.sortAsc : true;
                this.sort(column.property, ascending);
            }
        };
        Object.defineProperty(DataTable.prototype, "columnCount", {
            get: function () {
                var count = 0;
                count += this.indexColumnVisible ? 1 : 0;
                count += this.selectColumnVisible ? 1 : 0;
                count += this.expandColumnVisible ? 1 : 0;
                this.columns.toArray().forEach(function (column) {
                    count += column.visible ? 1 : 0;
                });
                return count;
            },
            enumerable: true,
            configurable: true
        });
        DataTable.prototype.getRowColor = function (item, index, row) {
            if (this.rowColors !== undefined) {
                return this.rowColors(item, row, index);
            }
        };
        Object.defineProperty(DataTable.prototype, "selectAllCheckbox", {
            get: function () {
                return this._selectAllCheckbox;
            },
            set: function (value) {
                this._selectAllCheckbox = value;
                this._onSelectAllChanged(value);
            },
            enumerable: true,
            configurable: true
        });
        DataTable.prototype._onSelectAllChanged = function (value) {
            this.rows.toArray().forEach(function (row) { return (row.selected = value); });
        };
        DataTable.prototype.onRowSelectChanged = function (row) {
            // maintain the selectedRow(s) view
            if (this.multiSelect) {
                var index = this.selectedRows.indexOf(row);
                if (row.selected && index < 0) {
                    this.selectedRows.push(row);
                }
                else if (!row.selected && index >= 0) {
                    this.selectedRows.splice(index, 1);
                }
            }
            else {
                if (row.selected) {
                    this.selectedRow = row;
                }
                else if (this.selectedRow === row) {
                    this.selectedRow = undefined;
                }
            }
            // unselect all other rows:
            if (row.selected && !this.multiSelect) {
                this.rows
                    .toArray()
                    .filter(function (row_) { return row_.selected; })
                    .forEach(function (row_) {
                    if (row_ !== row) {
                        // avoid endless loop
                        row_.selected = false;
                    }
                });
            }
        };
        Object.defineProperty(DataTable.prototype, "substituteItems", {
            // other:
            get: function () {
                return Array.from({ length: this.displayParams.limit - this.items.length });
            },
            enumerable: true,
            configurable: true
        });
        DataTable.prototype.resizeColumnStart = function (event, column, columnElement) {
            var _this = this;
            this._resizeInProgress = true;
            drag(event, {
                move: function (moveEvent, dx) {
                    if (_this._isResizeInLimit(columnElement, dx)) {
                        column.width = columnElement.offsetWidth + dx;
                    }
                }
            });
        };
        DataTable.prototype._isResizeInLimit = function (columnElement, dx) {
            /* This is needed because CSS min-width didn't work on table-layout: fixed.
                 Without the limits, resizing can make the next column disappear completely,
                 and even increase the table width. The current implementation suffers from the fact,
                 that offsetWidth sometimes contains out-of-date values. */
            if ((dx < 0 && columnElement.offsetWidth + dx <= this.resizeLimit) ||
                !columnElement.nextElementSibling || // resizing doesn't make sense for the last visible column
                (dx >= 0 &&
                    columnElement.nextElementSibling.offsetWidth + dx <=
                        this.resizeLimit)) {
                return false;
            }
            return true;
        };
        DataTable.ɵfac = function DataTable_Factory(t) { return new (t || DataTable)(); };
        DataTable.ɵcmp = core.ɵɵdefineComponent({ type: DataTable, selectors: [["data-table"]], contentQueries: function DataTable_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
                core.ɵɵcontentQuery(dirIndex, _c0$2, true);
                core.ɵɵcontentQuery(dirIndex, DataTableColumn, false);
            } if (rf & 2) {
                var _t;
                core.ɵɵqueryRefresh(_t = core.ɵɵloadQuery()) && (ctx.expandTemplate = _t.first);
                core.ɵɵqueryRefresh(_t = core.ɵɵloadQuery()) && (ctx.columns = _t);
            } }, viewQuery: function DataTable_Query(rf, ctx) { if (rf & 1) {
                core.ɵɵviewQuery(DataTableRow, true);
            } if (rf & 2) {
                var _t;
                core.ɵɵqueryRefresh(_t = core.ɵɵloadQuery()) && (ctx.rows = _t);
            } }, inputs: { items: "items", itemCount: "itemCount", headerTitle: "headerTitle", header: "header", pagination: "pagination", indexColumn: "indexColumn", indexColumnHeader: "indexColumnHeader", rowColors: "rowColors", rowTooltip: "rowTooltip", selectColumn: "selectColumn", multiSelect: "multiSelect", substituteRows: "substituteRows", expandableRows: "expandableRows", translations: "translations", selectOnRowClick: "selectOnRowClick", autoReload: "autoReload", showReloading: "showReloading", sortBy: "sortBy", sortAsc: "sortAsc", offset: "offset", limit: "limit", page: "page" }, outputs: { reload: "reload", rowClick: "rowClick", rowDoubleClick: "rowDoubleClick", headerClick: "headerClick", cellClick: "cellClick" }, decls: 16, vars: 12, consts: [[1, "data-table-wrapper"], [4, "ngIf"], [1, "data-table-box"], [1, "table", "table-condensed", "data-table"], [1, "expand-column-header", 3, "hide"], [1, "index-column-header", 3, "hide"], [3, "textContent"], [1, "select-column-header", 3, "hide"], ["type", "checkbox", 3, "hide", "ngModel", "ngModelChange"], ["class", "column-header", 3, "hide", "sortable", "resizable", "ngClass", "width", "click", 4, "ngFor", "ngForOf"], ["class", "data-table-row-wrapper", "dataTableRow", "", 3, "item", "index", "selectedChange", 4, "ngFor", "ngForOf"], ["class", "substitute-rows", 4, "ngIf"], ["class", "loading-cover", 4, "ngIf"], [1, "column-header", 3, "hide", "ngClass", "click"], ["th", ""], [3, "textContent", 4, "ngIf"], [3, "ngTemplateOutlet", "ngTemplateOutletContext", 4, "ngIf"], ["class", "column-sort-icon", 4, "ngIf"], ["class", "column-resize-handle", 3, "mousedown", 4, "ngIf"], [3, "ngTemplateOutlet", "ngTemplateOutletContext"], [1, "column-sort-icon"], [1, "fa", "fa-sort", "column-sortable-icon", 3, "hide"], [3, "hide"], [1, "fa", "fa-sort-asc", 3, "hide"], [1, "fa", "fa-sort-desc", 3, "hide"], [1, "column-resize-handle", 3, "mousedown"], ["dataTableRow", "", 1, "data-table-row-wrapper", 3, "item", "index", "selectedChange"], ["row", ""], [1, "substitute-rows"], [3, "row-odd", "row-even", 4, "ngFor", "ngForOf"], [3, "hide", 4, "ngFor", "ngForOf"], [1, "loading-cover"]], template: function DataTable_Template(rf, ctx) { if (rf & 1) {
                core.ɵɵelementStart(0, "div", 0);
                core.ɵɵtemplate(1, DataTable_data_table_header_1_Template, 1, 0, "data-table-header", 1);
                core.ɵɵelementStart(2, "div", 2);
                core.ɵɵelementStart(3, "table", 3);
                core.ɵɵelementStart(4, "thead");
                core.ɵɵelementStart(5, "tr");
                core.ɵɵelement(6, "th", 4);
                core.ɵɵelementStart(7, "th", 5);
                core.ɵɵelement(8, "span", 6);
                core.ɵɵelementEnd();
                core.ɵɵelementStart(9, "th", 7);
                core.ɵɵelementStart(10, "input", 8);
                core.ɵɵlistener("ngModelChange", function DataTable_Template_input_ngModelChange_10_listener($event) { return ctx.selectAllCheckbox = $event; });
                core.ɵɵelementEnd();
                core.ɵɵelementEnd();
                core.ɵɵtemplate(11, DataTable_th_11_Template, 7, 14, "th", 9);
                core.ɵɵelementEnd();
                core.ɵɵelementEnd();
                core.ɵɵtemplate(12, DataTable_tbody_12_Template, 2, 2, "tbody", 10);
                core.ɵɵtemplate(13, DataTable_tbody_13_Template, 2, 1, "tbody", 11);
                core.ɵɵelementEnd();
                core.ɵɵtemplate(14, DataTable_div_14_Template, 1, 0, "div", 12);
                core.ɵɵelementEnd();
                core.ɵɵtemplate(15, DataTable_data_table_pagination_15_Template, 1, 0, "data-table-pagination", 1);
                core.ɵɵelementEnd();
            } if (rf & 2) {
                core.ɵɵadvance(1);
                core.ɵɵproperty("ngIf", ctx.header);
                core.ɵɵadvance(5);
                core.ɵɵproperty("hide", !ctx.expandColumnVisible);
                core.ɵɵadvance(1);
                core.ɵɵproperty("hide", !ctx.indexColumnVisible);
                core.ɵɵadvance(1);
                core.ɵɵproperty("textContent", ctx.indexColumnHeader);
                core.ɵɵadvance(1);
                core.ɵɵproperty("hide", !ctx.selectColumnVisible);
                core.ɵɵadvance(1);
                core.ɵɵproperty("hide", !ctx.multiSelect)("ngModel", ctx.selectAllCheckbox);
                core.ɵɵadvance(1);
                core.ɵɵproperty("ngForOf", ctx.columns);
                core.ɵɵadvance(1);
                core.ɵɵproperty("ngForOf", ctx.items);
                core.ɵɵadvance(1);
                core.ɵɵproperty("ngIf", ctx.pagination && ctx.substituteRows);
                core.ɵɵadvance(1);
                core.ɵɵproperty("ngIf", ctx.showReloading && ctx.reloading);
                core.ɵɵadvance(1);
                core.ɵɵproperty("ngIf", ctx.pagination);
            } }, styles: ["[_nghost-%COMP%]     .data-table.table>tbody+tbody{border-top:none}[_nghost-%COMP%]     .data-table.table td{vertical-align:middle}[_nghost-%COMP%]     .data-table>tbody>tr>td, [_nghost-%COMP%]     .data-table>thead>tr>th{overflow:hidden}[_nghost-%COMP%]     .row-odd{background-color:#f6f6f6}.data-table[_ngcontent-%COMP%]   .substitute-rows[_ngcontent-%COMP%] > tr[_ngcontent-%COMP%]:hover, [_nghost-%COMP%]     .data-table .data-table-row:hover{background-color:#ececec}.data-table[_ngcontent-%COMP%]{box-shadow:0 0 15px #ececec;table-layout:fixed}.column-header[_ngcontent-%COMP%]{position:relative}.expand-column-header[_ngcontent-%COMP%]{width:50px}.select-column-header[_ngcontent-%COMP%]{width:50px;text-align:center}.index-column-header[_ngcontent-%COMP%]{width:40px}.column-header.sortable[_ngcontent-%COMP%]{cursor:pointer}.column-header[_ngcontent-%COMP%]   .column-sort-icon[_ngcontent-%COMP%]{float:right}.column-header.resizable[_ngcontent-%COMP%]   .column-sort-icon[_ngcontent-%COMP%]{margin-right:8px}.column-header[_ngcontent-%COMP%]   .column-sort-icon[_ngcontent-%COMP%]   .column-sortable-icon[_ngcontent-%COMP%]{color:#d3d3d3}.column-header[_ngcontent-%COMP%]   .column-resize-handle[_ngcontent-%COMP%]{position:absolute;top:0;right:0;margin:0;padding:0;width:8px;height:100%;cursor:col-resize}.data-table-box[_ngcontent-%COMP%]{position:relative}.loading-cover[_ngcontent-%COMP%]{position:absolute;width:100%;height:100%;background-color:rgba(255,255,255,.3);top:0}"] });
        return DataTable;
    }());
    /*@__PURE__*/ (function () { core.ɵsetClassMetadata(DataTable, [{
            type: core.Component,
            args: [{
                    selector: 'data-table',
                    templateUrl: './table.html',
                    styleUrls: ['./table.css']
                }]
        }], null, { items: [{
                type: core.Input
            }], itemCount: [{
                type: core.Input
            }], columns: [{
                type: core.ContentChildren,
                args: [DataTableColumn]
            }], rows: [{
                type: core.ViewChildren,
                args: [DataTableRow]
            }], expandTemplate: [{
                type: core.ContentChild,
                args: ['dataTableExpand']
            }], headerTitle: [{
                type: core.Input
            }], header: [{
                type: core.Input
            }], pagination: [{
                type: core.Input
            }], indexColumn: [{
                type: core.Input
            }], indexColumnHeader: [{
                type: core.Input
            }], rowColors: [{
                type: core.Input
            }], rowTooltip: [{
                type: core.Input
            }], selectColumn: [{
                type: core.Input
            }], multiSelect: [{
                type: core.Input
            }], substituteRows: [{
                type: core.Input
            }], expandableRows: [{
                type: core.Input
            }], translations: [{
                type: core.Input
            }], selectOnRowClick: [{
                type: core.Input
            }], autoReload: [{
                type: core.Input
            }], showReloading: [{
                type: core.Input
            }], sortBy: [{
                type: core.Input
            }], sortAsc: [{
                type: core.Input
            }], offset: [{
                type: core.Input
            }], limit: [{
                type: core.Input
            }], page: [{
                type: core.Input
            }], reload: [{
                type: core.Output
            }], rowClick: [{
                type: core.Output
            }], rowDoubleClick: [{
                type: core.Output
            }], headerClick: [{
                type: core.Output
            }], cellClick: [{
                type: core.Output
            }] }); })();

    var MinPipe = /** @class */ (function () {
        function MinPipe() {
        }
        MinPipe.prototype.transform = function (value) {
            return Math.min.apply(null, value);
        };
        MinPipe.ɵfac = function MinPipe_Factory(t) { return new (t || MinPipe)(); };
        MinPipe.ɵpipe = core.ɵɵdefinePipe({ name: "min", type: MinPipe, pure: true });
        return MinPipe;
    }());
    /*@__PURE__*/ (function () { core.ɵsetClassMetadata(MinPipe, [{
            type: core.Pipe,
            args: [{
                    name: 'min'
                }]
        }], null, null); })();

    var _c0$3 = function (a0, a1) { return [a0, a1]; };
    var DataTablePagination = /** @class */ (function () {
        function DataTablePagination(dataTable) {
            this.dataTable = dataTable;
        }
        DataTablePagination.prototype.pageBack = function () {
            this.dataTable.offset -= Math.min(this.dataTable.limit, this.dataTable.offset);
        };
        DataTablePagination.prototype.pageForward = function () {
            this.dataTable.offset += this.dataTable.limit;
        };
        DataTablePagination.prototype.pageFirst = function () {
            this.dataTable.offset = 0;
        };
        DataTablePagination.prototype.pageLast = function () {
            this.dataTable.offset = (this.maxPage - 1) * this.dataTable.limit;
        };
        Object.defineProperty(DataTablePagination.prototype, "maxPage", {
            get: function () {
                return Math.ceil(this.dataTable.itemCount / this.dataTable.limit);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataTablePagination.prototype, "limit", {
            get: function () {
                return this.dataTable.limit;
            },
            set: function (value) {
                this.dataTable.limit = Number(value); // TODO better way to handle that value of number <input> is string?
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(DataTablePagination.prototype, "page", {
            get: function () {
                return this.dataTable.page;
            },
            set: function (value) {
                this.dataTable.page = Number(value);
            },
            enumerable: true,
            configurable: true
        });
        DataTablePagination.ɵfac = function DataTablePagination_Factory(t) { return new (t || DataTablePagination)(core.ɵɵdirectiveInject(core.forwardRef(function () { return DataTable; }))); };
        DataTablePagination.ɵcmp = core.ɵɵdefineComponent({ type: DataTablePagination, selectors: [["data-table-pagination"]], decls: 33, vars: 18, consts: [[1, "pagination-box"], [1, "pagination-range"], [3, "textContent"], [1, "pagination-controllers"], [1, "pagination-limit"], [1, "input-group"], [1, "input-group-addon"], ["type", "number", "min", "1", "step", "1", 1, "form-control", 3, "ngModel", "blur", "keyup.enter", "keyup.esc"], ["limitInput", ""], [1, "pagination-pages"], [1, "btn", "btn-default", "pagination-firstpage", 3, "disabled", "click"], [1, "btn", "btn-default", "pagination-prevpage", 3, "disabled", "click"], [1, "pagination-page"], ["type", "number", "min", "1", "step", "1", 1, "form-control", 3, "max", "ngModel", "blur", "keyup.enter", "keyup.esc"], ["pageInput", ""], [1, "btn", "btn-default", "pagination-nextpage", 3, "disabled", "click"], [1, "btn", "btn-default", "pagination-lastpage", 3, "disabled", "click"]], template: function DataTablePagination_Template(rf, ctx) { if (rf & 1) {
                var _r2 = core.ɵɵgetCurrentView();
                core.ɵɵelementStart(0, "div", 0);
                core.ɵɵelementStart(1, "div", 1);
                core.ɵɵtext(2);
                core.ɵɵelement(3, "span", 2);
                core.ɵɵtext(4, " - ");
                core.ɵɵelement(5, "span", 2);
                core.ɵɵpipe(6, "min");
                core.ɵɵtext(7, " / ");
                core.ɵɵelement(8, "span", 2);
                core.ɵɵelementEnd();
                core.ɵɵelementStart(9, "div", 3);
                core.ɵɵelementStart(10, "div", 4);
                core.ɵɵelementStart(11, "div", 5);
                core.ɵɵelementStart(12, "span", 6);
                core.ɵɵtext(13);
                core.ɵɵelementEnd();
                core.ɵɵelementStart(14, "input", 7, 8);
                core.ɵɵlistener("blur", function DataTablePagination_Template_input_blur_14_listener() { core.ɵɵrestoreView(_r2); var _r0 = core.ɵɵreference(15); return ctx.limit = _r0.value; })("keyup.enter", function DataTablePagination_Template_input_keyup_enter_14_listener() { core.ɵɵrestoreView(_r2); var _r0 = core.ɵɵreference(15); return ctx.limit = _r0.value; })("keyup.esc", function DataTablePagination_Template_input_keyup_esc_14_listener() { core.ɵɵrestoreView(_r2); var _r0 = core.ɵɵreference(15); return _r0.value = ctx.limit; });
                core.ɵɵelementEnd();
                core.ɵɵelementEnd();
                core.ɵɵelementEnd();
                core.ɵɵelementStart(16, "div", 9);
                core.ɵɵelementStart(17, "button", 10);
                core.ɵɵlistener("click", function DataTablePagination_Template_button_click_17_listener() { return ctx.pageFirst(); });
                core.ɵɵtext(18, " \u00AB ");
                core.ɵɵelementEnd();
                core.ɵɵelementStart(19, "button", 11);
                core.ɵɵlistener("click", function DataTablePagination_Template_button_click_19_listener() { return ctx.pageBack(); });
                core.ɵɵtext(20, " \u2039 ");
                core.ɵɵelementEnd();
                core.ɵɵelementStart(21, "div", 12);
                core.ɵɵelementStart(22, "div", 5);
                core.ɵɵelementStart(23, "input", 13, 14);
                core.ɵɵlistener("blur", function DataTablePagination_Template_input_blur_23_listener() { core.ɵɵrestoreView(_r2); var _r1 = core.ɵɵreference(24); return ctx.page = _r1.value; })("keyup.enter", function DataTablePagination_Template_input_keyup_enter_23_listener() { core.ɵɵrestoreView(_r2); var _r1 = core.ɵɵreference(24); return ctx.page = _r1.value; })("keyup.esc", function DataTablePagination_Template_input_keyup_esc_23_listener() { core.ɵɵrestoreView(_r2); var _r1 = core.ɵɵreference(24); return _r1.value = ctx.page; });
                core.ɵɵelementEnd();
                core.ɵɵelementStart(25, "div", 6);
                core.ɵɵelementStart(26, "span");
                core.ɵɵtext(27, "/");
                core.ɵɵelementEnd();
                core.ɵɵelement(28, "span", 2);
                core.ɵɵelementEnd();
                core.ɵɵelementEnd();
                core.ɵɵelementEnd();
                core.ɵɵelementStart(29, "button", 15);
                core.ɵɵlistener("click", function DataTablePagination_Template_button_click_29_listener() { return ctx.pageForward(); });
                core.ɵɵtext(30, " \u203A ");
                core.ɵɵelementEnd();
                core.ɵɵelementStart(31, "button", 16);
                core.ɵɵlistener("click", function DataTablePagination_Template_button_click_31_listener() { return ctx.pageLast(); });
                core.ɵɵtext(32, " \u00BB ");
                core.ɵɵelementEnd();
                core.ɵɵelementEnd();
                core.ɵɵelementEnd();
                core.ɵɵelementEnd();
            } if (rf & 2) {
                core.ɵɵadvance(2);
                core.ɵɵtextInterpolate1(" ", ctx.dataTable.translations.paginationRange, ": ");
                core.ɵɵadvance(1);
                core.ɵɵproperty("textContent", ctx.dataTable.offset + 1);
                core.ɵɵadvance(2);
                core.ɵɵproperty("textContent", core.ɵɵpipeBind1(6, 13, core.ɵɵpureFunction2(15, _c0$3, ctx.dataTable.offset + ctx.dataTable.limit, ctx.dataTable.itemCount)));
                core.ɵɵadvance(3);
                core.ɵɵproperty("textContent", ctx.dataTable.itemCount);
                core.ɵɵadvance(5);
                core.ɵɵtextInterpolate1("", ctx.dataTable.translations.paginationLimit, ":");
                core.ɵɵadvance(1);
                core.ɵɵproperty("ngModel", ctx.limit);
                core.ɵɵadvance(3);
                core.ɵɵproperty("disabled", ctx.dataTable.offset <= 0);
                core.ɵɵadvance(2);
                core.ɵɵproperty("disabled", ctx.dataTable.offset <= 0);
                core.ɵɵadvance(4);
                core.ɵɵpropertyInterpolate("max", ctx.maxPage);
                core.ɵɵproperty("ngModel", ctx.page);
                core.ɵɵadvance(5);
                core.ɵɵproperty("textContent", ctx.dataTable.lastPage);
                core.ɵɵadvance(1);
                core.ɵɵproperty("disabled", ctx.dataTable.offset + ctx.dataTable.limit >= ctx.dataTable.itemCount);
                core.ɵɵadvance(2);
                core.ɵɵproperty("disabled", ctx.dataTable.offset + ctx.dataTable.limit >= ctx.dataTable.itemCount);
            } }, directives: [forms.NumberValueAccessor, forms.DefaultValueAccessor, forms.NgControlStatus, forms.NgModel], pipes: [MinPipe], styles: [".pagination-box[_ngcontent-%COMP%]{position:relative;margin-top:-10px}.pagination-range[_ngcontent-%COMP%]{margin-top:7px;margin-left:3px;display:inline-block}.pagination-controllers[_ngcontent-%COMP%]{float:right}.pagination-controllers[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{min-width:60px;text-align:right}.pagination-limit[_ngcontent-%COMP%]{margin-right:25px;display:inline-table;width:150px}.pagination-pages[_ngcontent-%COMP%]{display:inline-block}.pagination-page[_ngcontent-%COMP%]{width:110px;display:inline-table}.pagination-page[_ngcontent-%COMP%]   .input-group-addon[_ngcontent-%COMP%]{display:inline}.pagination-box[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{outline:0!important}.pagination-firstpage[_ngcontent-%COMP%], .pagination-lastpage[_ngcontent-%COMP%], .pagination-nextpage[_ngcontent-%COMP%], .pagination-prevpage[_ngcontent-%COMP%]{vertical-align:top}.pagination-reload[_ngcontent-%COMP%]{color:gray;font-size:12px}"] });
        return DataTablePagination;
    }());
    /*@__PURE__*/ (function () { core.ɵsetClassMetadata(DataTablePagination, [{
            type: core.Component,
            args: [{
                    selector: 'data-table-pagination',
                    templateUrl: './pagination.html',
                    styleUrls: ['./pagination.css']
                }]
        }], function () { return [{ type: DataTable, decorators: [{
                    type: core.Inject,
                    args: [core.forwardRef(function () { return DataTable; })]
                }] }]; }, null); })();

    function DataTableHeader_div_8_div_1_Template(rf, ctx) { if (rf & 1) {
        var _r6 = core.ɵɵgetCurrentView();
        core.ɵɵelementStart(0, "div", 12);
        core.ɵɵelementStart(1, "label");
        core.ɵɵelementStart(2, "input", 13);
        core.ɵɵlistener("ngModelChange", function DataTableHeader_div_8_div_1_Template_input_ngModelChange_2_listener($event) { core.ɵɵrestoreView(_r6); var ctx_r5 = core.ɵɵnextContext(2); return ctx_r5.dataTable.expandColumnVisible = $event; });
        core.ɵɵelementEnd();
        core.ɵɵelementStart(3, "span");
        core.ɵɵtext(4);
        core.ɵɵelementEnd();
        core.ɵɵelementEnd();
        core.ɵɵelementEnd();
    } if (rf & 2) {
        var ctx_r1 = core.ɵɵnextContext(2);
        core.ɵɵadvance(2);
        core.ɵɵproperty("ngModel", ctx_r1.dataTable.expandColumnVisible);
        core.ɵɵadvance(2);
        core.ɵɵtextInterpolate(ctx_r1.dataTable.translations.expandColumn);
    } }
    function DataTableHeader_div_8_div_2_Template(rf, ctx) { if (rf & 1) {
        var _r8 = core.ɵɵgetCurrentView();
        core.ɵɵelementStart(0, "div", 12);
        core.ɵɵelementStart(1, "label");
        core.ɵɵelementStart(2, "input", 13);
        core.ɵɵlistener("ngModelChange", function DataTableHeader_div_8_div_2_Template_input_ngModelChange_2_listener($event) { core.ɵɵrestoreView(_r8); var ctx_r7 = core.ɵɵnextContext(2); return ctx_r7.dataTable.indexColumnVisible = $event; });
        core.ɵɵelementEnd();
        core.ɵɵelementStart(3, "span");
        core.ɵɵtext(4);
        core.ɵɵelementEnd();
        core.ɵɵelementEnd();
        core.ɵɵelementEnd();
    } if (rf & 2) {
        var ctx_r2 = core.ɵɵnextContext(2);
        core.ɵɵadvance(2);
        core.ɵɵproperty("ngModel", ctx_r2.dataTable.indexColumnVisible);
        core.ɵɵadvance(2);
        core.ɵɵtextInterpolate(ctx_r2.dataTable.translations.indexColumn);
    } }
    function DataTableHeader_div_8_div_3_Template(rf, ctx) { if (rf & 1) {
        var _r10 = core.ɵɵgetCurrentView();
        core.ɵɵelementStart(0, "div", 12);
        core.ɵɵelementStart(1, "label");
        core.ɵɵelementStart(2, "input", 13);
        core.ɵɵlistener("ngModelChange", function DataTableHeader_div_8_div_3_Template_input_ngModelChange_2_listener($event) { core.ɵɵrestoreView(_r10); var ctx_r9 = core.ɵɵnextContext(2); return ctx_r9.dataTable.selectColumnVisible = $event; });
        core.ɵɵelementEnd();
        core.ɵɵelementStart(3, "span");
        core.ɵɵtext(4);
        core.ɵɵelementEnd();
        core.ɵɵelementEnd();
        core.ɵɵelementEnd();
    } if (rf & 2) {
        var ctx_r3 = core.ɵɵnextContext(2);
        core.ɵɵadvance(2);
        core.ɵɵproperty("ngModel", ctx_r3.dataTable.selectColumnVisible);
        core.ɵɵadvance(2);
        core.ɵɵtextInterpolate(ctx_r3.dataTable.translations.selectColumn);
    } }
    function DataTableHeader_div_8_div_4_Template(rf, ctx) { if (rf & 1) {
        var _r13 = core.ɵɵgetCurrentView();
        core.ɵɵelementStart(0, "div", 14);
        core.ɵɵelementStart(1, "label");
        core.ɵɵelementStart(2, "input", 13);
        core.ɵɵlistener("ngModelChange", function DataTableHeader_div_8_div_4_Template_input_ngModelChange_2_listener($event) { core.ɵɵrestoreView(_r13); var column_r11 = ctx.$implicit; return column_r11.visible = $event; });
        core.ɵɵelementEnd();
        core.ɵɵelement(3, "span", 15);
        core.ɵɵelementEnd();
        core.ɵɵelementEnd();
    } if (rf & 2) {
        var column_r11 = ctx.$implicit;
        core.ɵɵadvance(2);
        core.ɵɵproperty("ngModel", column_r11.visible);
        core.ɵɵadvance(1);
        core.ɵɵproperty("textContent", column_r11.header);
    } }
    function DataTableHeader_div_8_Template(rf, ctx) { if (rf & 1) {
        core.ɵɵelementStart(0, "div", 9);
        core.ɵɵtemplate(1, DataTableHeader_div_8_div_1_Template, 5, 2, "div", 10);
        core.ɵɵtemplate(2, DataTableHeader_div_8_div_2_Template, 5, 2, "div", 10);
        core.ɵɵtemplate(3, DataTableHeader_div_8_div_3_Template, 5, 2, "div", 10);
        core.ɵɵtemplate(4, DataTableHeader_div_8_div_4_Template, 4, 2, "div", 11);
        core.ɵɵelementEnd();
    } if (rf & 2) {
        var ctx_r0 = core.ɵɵnextContext();
        core.ɵɵadvance(1);
        core.ɵɵproperty("ngIf", ctx_r0.dataTable.expandableRows);
        core.ɵɵadvance(1);
        core.ɵɵproperty("ngIf", ctx_r0.dataTable.indexColumn);
        core.ɵɵadvance(1);
        core.ɵɵproperty("ngIf", ctx_r0.dataTable.selectColumn);
        core.ɵɵadvance(1);
        core.ɵɵproperty("ngForOf", ctx_r0.dataTable.columns);
    } }
    var DataTableHeader = /** @class */ (function () {
        function DataTableHeader(dataTable) {
            this.dataTable = dataTable;
            this.columnSelectorOpen = false;
        }
        DataTableHeader.prototype._closeSelector = function () {
            this.columnSelectorOpen = false;
        };
        DataTableHeader.ɵfac = function DataTableHeader_Factory(t) { return new (t || DataTableHeader)(core.ɵɵdirectiveInject(core.forwardRef(function () { return DataTable; }))); };
        DataTableHeader.ɵcmp = core.ɵɵdefineComponent({ type: DataTableHeader, selectors: [["data-table-header"]], hostBindings: function DataTableHeader_HostBindings(rf, ctx) { if (rf & 1) {
                core.ɵɵlistener("click", function DataTableHeader_click_HostBindingHandler() { return ctx._closeSelector(); }, false, core.ɵɵresolveDocument);
            } }, decls: 9, vars: 4, consts: [[1, "data-table-header"], [1, "title", 3, "textContent"], [1, "button-panel"], ["type", "button", 1, "btn", "btn-default", "btn-sm", "refresh-button", 3, "click"], [1, "fa", "fa-refresh"], ["type", "button", 1, "btn", "btn-default", "btn-sm", "column-selector-button", 3, "click"], [1, "fa", "fa-list"], [1, "column-selector-wrapper", 3, "click"], ["class", "column-selector-box card", 4, "ngIf"], [1, "column-selector-box", "card"], ["class", "column-selector-fixed-column checkbox", 4, "ngIf"], ["class", "column-selector-column checkbox", 4, "ngFor", "ngForOf"], [1, "column-selector-fixed-column", "checkbox"], ["type", "checkbox", 3, "ngModel", "ngModelChange"], [1, "column-selector-column", "checkbox"], [3, "textContent"]], template: function DataTableHeader_Template(rf, ctx) { if (rf & 1) {
                core.ɵɵelementStart(0, "div", 0);
                core.ɵɵelement(1, "h4", 1);
                core.ɵɵelementStart(2, "div", 2);
                core.ɵɵelementStart(3, "button", 3);
                core.ɵɵlistener("click", function DataTableHeader_Template_button_click_3_listener() { return ctx.dataTable.reloadItems(); });
                core.ɵɵelement(4, "i", 4);
                core.ɵɵelementEnd();
                core.ɵɵelementStart(5, "button", 5);
                core.ɵɵlistener("click", function DataTableHeader_Template_button_click_5_listener($event) { ctx.columnSelectorOpen = !ctx.columnSelectorOpen; return $event.stopPropagation(); });
                core.ɵɵelement(6, "i", 6);
                core.ɵɵelementEnd();
                core.ɵɵelementStart(7, "div", 7);
                core.ɵɵlistener("click", function DataTableHeader_Template_div_click_7_listener($event) { return $event.stopPropagation(); });
                core.ɵɵtemplate(8, DataTableHeader_div_8_Template, 5, 4, "div", 8);
                core.ɵɵelementEnd();
                core.ɵɵelementEnd();
                core.ɵɵelementEnd();
            } if (rf & 2) {
                core.ɵɵadvance(1);
                core.ɵɵproperty("textContent", ctx.dataTable.headerTitle);
                core.ɵɵadvance(4);
                core.ɵɵclassProp("active", ctx.columnSelectorOpen);
                core.ɵɵadvance(3);
                core.ɵɵproperty("ngIf", ctx.columnSelectorOpen);
            } }, directives: [common.NgIf, common.NgForOf, forms.CheckboxControlValueAccessor, forms.NgControlStatus, forms.NgModel], styles: [".data-table-header[_ngcontent-%COMP%]{min-height:25px;margin-bottom:10px}.title[_ngcontent-%COMP%]{display:inline-block;margin:5px 0 0 5px}.button-panel[_ngcontent-%COMP%]{float:right}.button-panel[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{outline:0!important}.column-selector-wrapper[_ngcontent-%COMP%]{position:relative}.column-selector-box[_ngcontent-%COMP%]{box-shadow:0 0 10px #d3d3d3;width:150px;padding:10px;position:absolute;right:0;top:1px;z-index:1060}.column-selector-box[_ngcontent-%COMP%]   .checkbox[_ngcontent-%COMP%]{margin-bottom:4px}.column-selector-fixed-column[_ngcontent-%COMP%]{font-style:italic}"] });
        return DataTableHeader;
    }());
    /*@__PURE__*/ (function () { core.ɵsetClassMetadata(DataTableHeader, [{
            type: core.Component,
            args: [{
                    selector: 'data-table-header',
                    templateUrl: './header.html',
                    styleUrls: ['./header.css'],
                    host: {
                        '(document:click)': '_closeSelector()'
                    }
                }]
        }], function () { return [{ type: DataTable, decorators: [{
                    type: core.Inject,
                    args: [core.forwardRef(function () { return DataTable; })]
                }] }]; }, null); })();

    var PixelConverter = /** @class */ (function () {
        function PixelConverter() {
        }
        PixelConverter.prototype.transform = function (value) {
            if (value === undefined) {
                return;
            }
            if (typeof value === 'string') {
                return value;
            }
            if (typeof value === 'number') {
                return value + 'px';
            }
        };
        PixelConverter.ɵfac = function PixelConverter_Factory(t) { return new (t || PixelConverter)(); };
        PixelConverter.ɵpipe = core.ɵɵdefinePipe({ name: "px", type: PixelConverter, pure: true });
        return PixelConverter;
    }());
    /*@__PURE__*/ (function () { core.ɵsetClassMetadata(PixelConverter, [{
            type: core.Pipe,
            args: [{
                    name: 'px'
                }]
        }], null, null); })();

    var DataTableResource = /** @class */ (function () {
        function DataTableResource(items) {
            this.items = items;
        }
        DataTableResource.prototype.query = function (params, filter) {
            var result = [];
            if (filter) {
                result = this.items.filter(filter);
            }
            else {
                result = this.items.slice(); // shallow copy to use for sorting instead of changing the original
            }
            if (params.sortBy) {
                result.sort(function (a, b) {
                    if (typeof a[params.sortBy] === 'string') {
                        return a[params.sortBy].localeCompare(b[params.sortBy]);
                    }
                    else {
                        return a[params.sortBy] - b[params.sortBy];
                    }
                });
                if (params.sortAsc === false) {
                    result.reverse();
                }
            }
            if (params.offset !== undefined) {
                if (params.limit === undefined) {
                    result = result.slice(params.offset, result.length);
                }
                else {
                    result = result.slice(params.offset, params.offset + params.limit);
                }
            }
            return new Promise(function (resolve, reject) {
                setTimeout(function () { return resolve(result); });
            });
        };
        DataTableResource.prototype.count = function () {
            var _this = this;
            return new Promise(function (resolve, reject) {
                setTimeout(function () { return resolve(_this.items.length); });
            });
        };
        return DataTableResource;
    }());

    var DATA_TABLE_DIRECTIVES = [DataTable, DataTableColumn];
    var DataTableModule = /** @class */ (function () {
        function DataTableModule() {
        }
        DataTableModule.ɵmod = core.ɵɵdefineNgModule({ type: DataTableModule });
        DataTableModule.ɵinj = core.ɵɵdefineInjector({ factory: function DataTableModule_Factory(t) { return new (t || DataTableModule)(); }, imports: [[common.CommonModule, forms.FormsModule]] });
        return DataTableModule;
    }());
    (function () { (typeof ngJitMode === "undefined" || ngJitMode) && core.ɵɵsetNgModuleScope(DataTableModule, { declarations: [DataTable,
            DataTableColumn,
            DataTableRow,
            DataTablePagination,
            DataTableHeader,
            PixelConverter,
            Hide,
            MinPipe], imports: [common.CommonModule, forms.FormsModule], exports: [DataTable, DataTableColumn] }); })();
    /*@__PURE__*/ (function () { core.ɵsetClassMetadata(DataTableModule, [{
            type: core.NgModule,
            args: [{
                    imports: [common.CommonModule, forms.FormsModule],
                    declarations: [
                        DataTable,
                        DataTableColumn,
                        DataTableRow,
                        DataTablePagination,
                        DataTableHeader,
                        PixelConverter,
                        Hide,
                        MinPipe
                    ],
                    exports: [DataTable, DataTableColumn]
                }]
        }], null, null); })();
    core.ɵɵsetComponentScope(DataTable, [common.NgClass, common.NgComponentOutlet, common.NgForOf, common.NgIf, common.NgTemplateOutlet, common.NgStyle, common.NgSwitch, common.NgSwitchCase, common.NgSwitchDefault, common.NgPlural, common.NgPluralCase, forms.ɵangular_packages_forms_forms_y, forms.NgSelectOption, forms.ɵangular_packages_forms_forms_x, forms.DefaultValueAccessor, forms.NumberValueAccessor, forms.RangeValueAccessor, forms.CheckboxControlValueAccessor, forms.SelectControlValueAccessor, forms.SelectMultipleControlValueAccessor, forms.RadioControlValueAccessor, forms.NgControlStatus, forms.NgControlStatusGroup, forms.RequiredValidator, forms.MinLengthValidator, forms.MaxLengthValidator, forms.PatternValidator, forms.CheckboxRequiredValidator, forms.EmailValidator, forms.NgModel, forms.NgModelGroup, forms.NgForm, DataTable,
        DataTableColumn,
        DataTableRow,
        DataTablePagination,
        DataTableHeader,
        Hide], [common.AsyncPipe, common.UpperCasePipe, common.LowerCasePipe, common.JsonPipe, common.SlicePipe, common.DecimalPipe, common.PercentPipe, common.TitleCasePipe, common.CurrencyPipe, common.DatePipe, common.I18nPluralPipe, common.I18nSelectPipe, common.KeyValuePipe, PixelConverter,
        MinPipe]);

    exports.DATA_TABLE_DIRECTIVES = DATA_TABLE_DIRECTIVES;
    exports.DataTable = DataTable;
    exports.DataTableColumn = DataTableColumn;
    exports.DataTableHeader = DataTableHeader;
    exports.DataTableModule = DataTableModule;
    exports.DataTablePagination = DataTablePagination;
    exports.DataTableResource = DataTableResource;
    exports.DataTableRow = DataTableRow;
    exports.defaultTranslations = defaultTranslations;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=angular-bootstrap-data-table.umd.js.map
