{"version":3,"file":"ngx-toast-notifications.js","sources":["ngx-toast-notifications/toast.ts","ngx-toast-notifications/toast-container/toast-container.component.ts","ngx-toast-notifications/toast-container.service.ts","ngx-toast-notifications/toast-notifications.config.ts","ngx-toast-notifications/toast-content/basic-toast-content.component.ts","ngx-toast-notifications/toaster.ts","ngx-toast-notifications/core/toast-natifications.ts","ngx-toast-notifications/toast-content/toast-content.directive.ts","ngx-toast-notifications/toast-notifications.module.ts","ngx-toast-notifications/core/toast-notification-core.module.ts","ngx-toast-notifications/client/toast-notification-client.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Observable, Subject } from 'rxjs';\r\nimport { Type } from '@angular/core';\r\nimport { ToastType } from './toast-notifications.config';\r\nimport { ToastConfig } from './toast.config';\r\n\r\nexport class Toast {\r\n\r\n  readonly autoClose: boolean;\r\n  readonly duration: number;\r\n  readonly text: string;\r\n  readonly caption: string;\r\n  readonly type: ToastType;\r\n  readonly component: Type<any>;\r\n\r\n  private readonly _closeFunction: (toast: Toast) => void;\r\n  private readonly _onClose = new Subject<any>();\r\n  private _timeoutId: any;\r\n\r\n  constructor(\r\n      config: ToastConfig,\r\n      closeFunction: (toast: Toast) => void,\r\n  ) {\r\n    this.autoClose = config.autoClose;\r\n    this.duration = config.duration > 0 ? config.duration : 0;\r\n    this.text = config.text;\r\n    this.caption = config.caption;\r\n    this.type = config.type;\r\n    this.component = config.component;\r\n    this._closeFunction = closeFunction;\r\n    this._setTimeout();\r\n  }\r\n\r\n  get onClose(): Observable<any> {\r\n    return this._onClose.asObservable();\r\n  }\r\n\r\n  close(result?: any) {\r\n    if (!this._onClose.closed) {\r\n      this._onClose.next(result);\r\n      this._onClose.complete();\r\n    }\r\n    this._closeFunction(this);\r\n    this._clearTimeout();\r\n  }\r\n\r\n  private _setTimeout() {\r\n    if (this.autoClose && this.duration > 0) {\r\n      this._timeoutId = setTimeout(() => this.close(), this.duration);\r\n    }\r\n  }\r\n\r\n  private _clearTimeout() {\r\n    if (this._timeoutId) {\r\n      clearTimeout(this._timeoutId);\r\n    }\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component } from '@angular/core';\r\nimport { animate, animateChild, query, style, transition, trigger } from '@angular/animations';\r\nimport { ToastConfig } from '../toast.config';\r\nimport { Toast } from '../toast';\r\nimport { ToastPosition } from '../toast-notifications.config';\r\n\r\nconst nestedTransition = transition('* => *', [\r\n  query('@*', animateChild(), {optional: true})\r\n]);\r\n\r\nconst shrinkInTransition = transition('void => *', [\r\n  style({height: 0, opacity: 0, 'margin-top': 0}),\r\n  animate(200, style({height: '*', opacity: 1, 'margin-top': '1rem'}))\r\n]);\r\n\r\nconst shrinkOutTransition = transition('* => void', [\r\n  style({height: '!', opacity: 1, 'margin-top': '1rem'}),\r\n  animate(150, style({height: 0, opacity: 0, 'margin-top': 0}))\r\n]);\r\n\r\nconst progressTransition = transition('void => *', [\r\n  style({width: 0, opacity: 0}),\r\n  animate('{{duration}}', style({width: '100%', opacity: 1}))\r\n]);\r\n\r\n@Component({\r\n  templateUrl: './toast-container.component.html',\r\n  styleUrls: ['./toast-container.component.scss'],\r\n  animations: [\r\n    trigger('nested', [nestedTransition]),\r\n    trigger('shrink', [shrinkInTransition, shrinkOutTransition]),\r\n    trigger('progress', [progressTransition]),\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ToastContainerComponent {\r\n\r\n  tl: Toast[] = [];\r\n  tc: Toast[] = [];\r\n  tr: Toast[] = [];\r\n  bl: Toast[] = [];\r\n  bc: Toast[] = [];\r\n  br: Toast[] = [];\r\n\r\n  constructor(\r\n    private _changeDetector: ChangeDetectorRef,\r\n  ) {\r\n  }\r\n\r\n  add(config: ToastConfig): Toast | null {\r\n    const collection = this._getCollection(config.position);\r\n    if (config.preventDuplicates && this._isDuplicate(collection, config)) {\r\n      return null;\r\n    }\r\n    const toast = new Toast(config, (t) => this._delete(collection, t));\r\n    collection.push(toast);\r\n    this._changeDetector.detectChanges();\r\n    return toast;\r\n  }\r\n\r\n  private _delete(collection: Toast[], toast: Toast): void {\r\n    collection.splice(collection.indexOf(toast), 1);\r\n    this._changeDetector.detectChanges();\r\n  }\r\n\r\n  private _isDuplicate(collection: Toast[], config: ToastConfig): boolean {\r\n    return collection.some(t => {\r\n      return t.type === config.type\r\n        && t.component === config.component\r\n        && t.caption === config.caption\r\n        && t.text === config.text;\r\n    })\r\n  }\r\n\r\n  private _getCollection(position: ToastPosition): Toast[] {\r\n    switch (position) {\r\n      case 'top-left':\r\n        return this.tl;\r\n      case 'top-center':\r\n        return this.tc;\r\n      case 'top-right':\r\n        return this.tr;\r\n      case 'bottom-left':\r\n        return this.bl;\r\n      case 'bottom-center':\r\n        return this.bc;\r\n      default:\r\n        return this.br;\r\n    }\r\n  }\r\n}\r\n","import {\r\n  ApplicationRef,\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  EmbeddedViewRef,\r\n  Inject,\r\n  Injectable,\r\n  Injector,\r\n  OnDestroy,\r\n  Renderer2,\r\n  RendererFactory2\r\n} from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { ToastContainerComponent } from './toast-container/toast-container.component';\r\n\r\nconst TOAST_CONTAINER_CLASS_NAME = 'toast-container';\r\n\r\n@Injectable()\r\nexport class ToastContainerService implements OnDestroy {\r\n\r\n  private _renderer: Renderer2;\r\n  private _containerElement: HTMLElement;\r\n  private _componentRef: ComponentRef<ToastContainerComponent>;\r\n\r\n  constructor(\r\n    rendererFactory: RendererFactory2,\r\n    @Inject(DOCUMENT) private _document: any,\r\n    private _factoryResolver: ComponentFactoryResolver,\r\n    private _appRef: ApplicationRef,\r\n    private _injector: Injector,\r\n  ) {\r\n    this._renderer = rendererFactory.createRenderer(null, null);\r\n  }\r\n\r\n  get ref(): ComponentRef<ToastContainerComponent> {\r\n    if (!this._componentRef) {\r\n      this._attach();\r\n    }\r\n    return this._componentRef;\r\n  }\r\n\r\n  private get containerElement(): HTMLElement {\r\n    if (!this._containerElement) {\r\n      this._containerElement = this._renderer.createElement('div');\r\n      this._renderer.addClass(this._containerElement, TOAST_CONTAINER_CLASS_NAME);\r\n      this._renderer.appendChild(this._document.body, this._containerElement);\r\n    }\r\n    return this._containerElement;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._detach();\r\n    this._destroyContainer();\r\n  }\r\n\r\n  private _attach() {\r\n    this._detach();\r\n    const componentFactory = this._factoryResolver.resolveComponentFactory(ToastContainerComponent);\r\n    this._componentRef = componentFactory.create(this._injector);\r\n    const hostView = this._componentRef.hostView as EmbeddedViewRef<any>;\r\n    this._appRef.attachView(hostView);\r\n    const rootNode = hostView.rootNodes[0] as HTMLElement;\r\n    this._renderer.appendChild(this.containerElement, rootNode);\r\n  }\r\n\r\n  private _detach() {\r\n    if (this._componentRef) {\r\n      this._appRef.detachView(this._componentRef.hostView);\r\n      this._componentRef.destroy();\r\n      this._componentRef = null;\r\n    }\r\n  }\r\n\r\n  private _destroyContainer() {\r\n    if (this._containerElement && this._containerElement.parentNode) {\r\n      this._renderer.removeChild(this._containerElement.parentNode, this._containerElement);\r\n      this._containerElement = null;\r\n    }\r\n  }\r\n}\r\n","import { InjectionToken, Type } from '@angular/core';\r\n\r\nexport const TOAST_NOTIFICATIONS_CONFIG = new InjectionToken<ToastNotificationsConfig>('ToastNotificationsConfig');\r\n\r\nexport type ToastType = 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark';\r\nexport type ToastPosition = 'top-left' | 'top-center' | 'top-right' | 'bottom-left' | 'bottom-center' | 'bottom-right';\r\n\r\nexport interface ToastNotificationsConfig {\r\n  position?: ToastPosition\r\n  autoClose?: boolean;\r\n  duration?: number;\r\n  type?: ToastType;\r\n  component?: Type<any>;\r\n  preventDuplicates?: boolean;\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { Toast } from '../toast';\r\n\r\n@Component({\r\n  templateUrl: './basic-toast-content.component.html',\r\n  styleUrls: ['./basic-toast-content.component.scss'],\r\n})\r\nexport class BasicToastContentComponent {\r\n  @Input() toast: Toast;\r\n}\r\n","import { Inject, Injectable, Type } from '@angular/core';\r\nimport { ToastConfig } from './toast.config';\r\nimport { ToastContainerService } from './toast-container.service';\r\nimport { TOAST_NOTIFICATIONS_CONFIG, ToastNotificationsConfig } from './toast-notifications.config';\r\nimport { BasicToastContentComponent } from './toast-content/basic-toast-content.component';\r\nimport { Toast } from './toast';\r\n\r\nconst DEFAULT_CONFIG: ToastConfig = {\r\n  autoClose: true,\r\n  duration: 8000,\r\n  type: 'light',\r\n  position: 'bottom-right',\r\n  component: BasicToastContentComponent,\r\n};\r\n\r\n@Injectable()\r\nexport class Toaster {\r\n\r\n  constructor(\r\n      @Inject(TOAST_NOTIFICATIONS_CONFIG) private _config: ToastNotificationsConfig,\r\n      private _containerService: ToastContainerService,\r\n  ) {\r\n  }\r\n\r\n  open(text: string): Toast | null;\r\n  open(config: ToastConfig): Toast | null;\r\n  open(text: string, config?: ToastConfig): Toast | null;\r\n  open(component: Type<any>, config?: ToastConfig): Toast | null;\r\n  open(config: ToastConfig | string | Type<any>, componentConfig?: ToastConfig): Toast | null {\r\n    if (typeof config === 'string') {\r\n      config = {text: config as string, ...componentConfig};\r\n    }\r\n    if (config instanceof Type) {\r\n      config = {...componentConfig, component: config as Type<any>};\r\n    }\r\n    config = {...DEFAULT_CONFIG, ...this._config, ...config};\r\n    return this._containerService.ref.instance.add(config);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ToastConfig } from '../toast.config';\r\nimport { ToastType } from '../toast-notifications.config';\r\nimport { Toaster } from '../toaster';\r\n\r\n@Injectable()\r\n/**\r\n * @deprecated since version 1.0.0 use Toaster\r\n */\r\nexport class ToastNotifications {\r\n\r\n  constructor(\r\n      private _toaster: Toaster,\r\n  ) {\r\n  }\r\n\r\n  /**\r\n   * @deprecated since version 1.0.0\r\n   */\r\n  next(toast: {text: string, caption?: string, type?: ToastType, lifetime?: number, duration?: number}) {\r\n    const config: ToastConfig = {\r\n      text: toast.text,\r\n      caption: toast.caption,\r\n      type: toast.type,\r\n      duration: toast.duration || toast.lifetime,\r\n      component: null,\r\n    };\r\n    this._toaster.open(config);\r\n  }\r\n}\r\n","import {\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  Directive,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\nimport { Toast } from '../toast';\r\n\r\n@Directive({\r\n  selector: '[toastContent]',\r\n})\r\nexport class ToastContentDirective implements OnInit, OnDestroy {\r\n\r\n  @Input() toast: Toast;\r\n  private _componentRef: ComponentRef<any>;\r\n\r\n  constructor(\r\n      private _viewContainerRef: ViewContainerRef,\r\n      private _componentFactoryResolver: ComponentFactoryResolver,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const componentFactory = this._componentFactoryResolver.resolveComponentFactory(this.toast.component);\r\n    this._componentRef = this._viewContainerRef.createComponent(componentFactory);\r\n    this._componentRef.instance.toast = this.toast;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this._componentRef) {\r\n      this._componentRef.destroy();\r\n      this._componentRef = null;\r\n    }\r\n  }\r\n}\r\n","import { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TOAST_NOTIFICATIONS_CONFIG, ToastNotificationsConfig } from './toast-notifications.config';\r\nimport { ToastContainerComponent } from './toast-container/toast-container.component';\r\nimport { BasicToastContentComponent } from './toast-content/basic-toast-content.component';\r\nimport { ToastContentDirective } from './toast-content/toast-content.directive';\r\nimport { Toaster } from './toaster';\r\nimport { ToastContainerService } from './toast-container.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  declarations: [\r\n    ToastContainerComponent,\r\n    BasicToastContentComponent,\r\n    ToastContentDirective,\r\n  ],\r\n  entryComponents: [\r\n    ToastContainerComponent,\r\n    BasicToastContentComponent,\r\n  ],\r\n  providers: [\r\n    Toaster,\r\n    ToastContainerService,\r\n    {provide: TOAST_NOTIFICATIONS_CONFIG, useValue: {}},\r\n  ],\r\n})\r\nexport class ToastNotificationsModule {\r\n\r\n  constructor(@Optional() @SkipSelf() parentModule: ToastNotificationsModule) {\r\n    if (parentModule) {\r\n      throw new Error('ToastNotificationsModule is already loaded. Import it in the root module only');\r\n    }\r\n  }\r\n\r\n  static forRoot(config: ToastNotificationsConfig = {}): ModuleWithProviders {\r\n    return {\r\n      ngModule: ToastNotificationsModule,\r\n      providers: [\r\n        {provide: TOAST_NOTIFICATIONS_CONFIG, useValue: config},\r\n      ]\r\n    };\r\n  }\r\n}\r\n","import { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { ToastNotifications } from './toast-natifications';\r\nimport { TOAST_NOTIFICATIONS_CONFIG } from '../toast-notifications.config';\r\nimport { ToastNotificationsModule } from '../toast-notifications.module';\r\n\r\nconst defaultConfig: {lifetime?: number, duration?: number} = {lifetime: 8000};\r\n\r\n@NgModule({\r\n  imports: [\r\n    ToastNotificationsModule,\r\n  ],\r\n  providers: [\r\n    ToastNotifications,\r\n  ],\r\n})\r\n/**\r\n * @deprecated since version 1.0.0 use ToastNotificationsModule\r\n */\r\nexport class ToastNotificationCoreModule {\r\n\r\n  constructor(@Optional() @SkipSelf() parentModule: ToastNotificationCoreModule) {\r\n    if (parentModule) {\r\n      throw new Error('ToastNotificationCoreModule is already loaded. Import it in the root module only');\r\n    }\r\n  }\r\n\r\n  static forRoot(config = defaultConfig): ModuleWithProviders {\r\n    return {\r\n      ngModule: ToastNotificationCoreModule,\r\n      providers: [\r\n        {provide: TOAST_NOTIFICATIONS_CONFIG, useValue: {duration: config.duration || config.lifetime}}\r\n      ]\r\n    };\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\n@NgModule()\r\n/**\r\n * @deprecated since version 1.0.0\r\n */\r\nexport class ToastNotificationClientModule {\r\n}\r\n"]}