/**
 * @fileoverview added by tsickle
 * Generated from: toast-container/toast-container.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectionStrategy, ChangeDetectorRef, Component } from '@angular/core';
import { animate, animateChild, query, style, transition, trigger } from '@angular/animations';
import { Toast } from '../toast';
/** @type {?} */
const nestedTransition = transition('* => *', [
    query('@*', animateChild(), { optional: true })
]);
/** @type {?} */
const shrinkInTransition = transition('void => *', [
    style({ height: 0, opacity: 0, 'margin-top': 0 }),
    animate(200, style({ height: '*', opacity: 1, 'margin-top': '1rem' }))
]);
/** @type {?} */
const shrinkOutTransition = transition('* => void', [
    style({ height: '!', opacity: 1, 'margin-top': '1rem' }),
    animate(150, style({ height: 0, opacity: 0, 'margin-top': 0 }))
]);
/** @type {?} */
const progressTransition = transition('void => *', [
    style({ width: 0, opacity: 0 }),
    animate('{{duration}}', style({ width: '100%', opacity: 1 }))
]);
export class ToastContainerComponent {
    /**
     * @param {?} _changeDetector
     */
    constructor(_changeDetector) {
        this._changeDetector = _changeDetector;
        this.tl = [];
        this.tc = [];
        this.tr = [];
        this.bl = [];
        this.bc = [];
        this.br = [];
    }
    /**
     * @param {?} config
     * @return {?}
     */
    add(config) {
        /** @type {?} */
        const collection = this._getCollection(config.position);
        if (config.preventDuplicates && this._isDuplicate(collection, config)) {
            return null;
        }
        /** @type {?} */
        const toast = new Toast(config, (/**
         * @param {?} t
         * @return {?}
         */
        (t) => this._delete(collection, t)));
        collection.push(toast);
        this._changeDetector.detectChanges();
        return toast;
    }
    /**
     * @private
     * @param {?} collection
     * @param {?} toast
     * @return {?}
     */
    _delete(collection, toast) {
        collection.splice(collection.indexOf(toast), 1);
        this._changeDetector.detectChanges();
    }
    /**
     * @private
     * @param {?} collection
     * @param {?} config
     * @return {?}
     */
    _isDuplicate(collection, config) {
        return collection.some((/**
         * @param {?} t
         * @return {?}
         */
        t => {
            return t.type === config.type
                && t.component === config.component
                && t.caption === config.caption
                && t.text === config.text;
        }));
    }
    /**
     * @private
     * @param {?} position
     * @return {?}
     */
    _getCollection(position) {
        switch (position) {
            case 'top-left':
                return this.tl;
            case 'top-center':
                return this.tc;
            case 'top-right':
                return this.tr;
            case 'bottom-left':
                return this.bl;
            case 'bottom-center':
                return this.bc;
            default:
                return this.br;
        }
    }
}
ToastContainerComponent.decorators = [
    { type: Component, args: [{
                template: "<ng-template #toastPanel let-toasts>\r\n  <div *ngFor=\"let toast of toasts\" [@nested]>\r\n    <div class=\"toast-card\" [ngClass]=\"toast.type || 'light'\" [@shrink]>\r\n      <ng-template toastContent [toast]=\"toast\"></ng-template>\r\n      <div *ngIf=\"toast.autoClose\"\r\n           class=\"lifetime-progress\"\r\n           role=\"progressbar\"\r\n           [@progress]=\"{value: '*', params: {duration: toast.duration + 'ms'}}\"></div>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n\r\n<div class=\"toast-overlay\">\r\n  <div class=\"toast-panel top-center\">\r\n    <ng-container *ngTemplateOutlet=\"toastPanel; context: {$implicit: tc}\"></ng-container>\r\n  </div>\r\n  <div class=\"toast-panel top-left\">\r\n    <ng-container *ngTemplateOutlet=\"toastPanel; context: {$implicit: tl}\"></ng-container>\r\n  </div>\r\n  <div class=\"toast-panel top-right\">\r\n    <ng-container *ngTemplateOutlet=\"toastPanel; context: {$implicit: tr}\"></ng-container>\r\n  </div>\r\n  <div class=\"toast-panel bottom-center\">\r\n    <ng-container *ngTemplateOutlet=\"toastPanel; context: {$implicit: bc}\"></ng-container>\r\n  </div>\r\n  <div class=\"toast-panel bottom-left\">\r\n    <ng-container *ngTemplateOutlet=\"toastPanel; context: {$implicit: bl}\"></ng-container>\r\n  </div>\r\n  <div class=\"toast-panel bottom-right\">\r\n    <ng-container *ngTemplateOutlet=\"toastPanel; context: {$implicit: br}\"></ng-container>\r\n  </div>\r\n</div>\r\n",
                animations: [
                    trigger('nested', [nestedTransition]),
                    trigger('shrink', [shrinkInTransition, shrinkOutTransition]),
                    trigger('progress', [progressTransition]),
                ],
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [".toast-overlay{pointer-events:none;position:fixed;z-index:9000;left:0;top:0;width:100%;height:100%}@media (max-width:575px){.toast-overlay{display:flex;justify-content:flex-end;flex-direction:column}}.toast-panel{width:100%;font-size:1rem;line-height:1.5;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif}.toast-card{pointer-events:auto;overflow:hidden;background-clip:border-box;min-width:0;background-color:#f8f9fa;color:#212529;margin-top:1rem;box-shadow:rgba(0,0,0,.15) 0 .2rem 1.5rem .3rem}@media (min-width:576px){.toast-panel{position:absolute;max-width:20rem}.toast-panel.top-left{top:0;left:1rem}.toast-panel.top-center{top:0;left:50%;margin-left:-10rem}.toast-panel.top-right{top:0;right:1rem}.toast-panel.bottom-left{bottom:1rem;left:1rem}.toast-panel.bottom-center{bottom:1rem;left:50%;margin-left:-10rem}.toast-panel.bottom-right{bottom:1rem;right:1rem}.toast-card{border-radius:.15rem;box-shadow:rgba(0,0,0,.2) 0 .3rem .4rem -.2rem,rgba(0,0,0,.15) 0 .2rem 1.5rem .3rem}}.toast-card.danger,.toast-card.dark,.toast-card.info,.toast-card.primary,.toast-card.secondary,.toast-card.success{color:#f8f9fa}.toast-card.danger .lifetime-progress,.toast-card.dark .lifetime-progress,.toast-card.info .lifetime-progress,.toast-card.primary .lifetime-progress,.toast-card.secondary .lifetime-progress,.toast-card.success .lifetime-progress{background-color:#f8f9fa}.toast-card.light .lifetime-progress,.toast-card.primary,.toast-card.warning .lifetime-progress{background-color:#007bff}.toast-card.secondary{background-color:#868e96}.toast-card.success{background-color:#28a745}.toast-card.danger{background-color:#dc3545}.toast-card.warning{background-color:#ffc107}.toast-card.info{background-color:#17a2b8}.toast-card.light{background-color:#f8f9fa}.toast-card.dark{background-color:#343a40}.toast-card .lifetime-progress{display:flex;height:2px;width:0;border-radius:1px}"]
            }] }
];
/** @nocollapse */
ToastContainerComponent.ctorParameters = () => [
    { type: ChangeDetectorRef }
];
if (false) {
    /** @type {?} */
    ToastContainerComponent.prototype.tl;
    /** @type {?} */
    ToastContainerComponent.prototype.tc;
    /** @type {?} */
    ToastContainerComponent.prototype.tr;
    /** @type {?} */
    ToastContainerComponent.prototype.bl;
    /** @type {?} */
    ToastContainerComponent.prototype.bc;
    /** @type {?} */
    ToastContainerComponent.prototype.br;
    /**
     * @type {?}
     * @private
     */
    ToastContainerComponent.prototype._changeDetector;
}
//# sourceMappingURL=data:application/json;base64,