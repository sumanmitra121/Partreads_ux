{"version":3,"file":"facebook-login-provider.js","sourceRoot":"","sources":["../../../lib/src/providers/facebook-login-provider.ts"],"names":[],"mappings":"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","sourcesContent":["import { BaseLoginProvider } from '../entities/base-login-provider';\r\nimport { SocialUser } from '../entities/user';\r\nimport { LoginOpt } from '../auth.service';\r\n\r\ndeclare let FB: any;\r\n\r\nexport class FacebookLoginProvider extends BaseLoginProvider {\r\n\r\n  public static readonly PROVIDER_ID = 'FACEBOOK';\r\n\r\n  constructor(\r\n    private clientId: string,\r\n    private opt: LoginOpt = { scope: 'email,public_profile' },\r\n    private locale: string = 'en_US',\r\n    private fields: string = 'name,email,picture,first_name,last_name',\r\n    private version: string = 'v2.9'\r\n  ) { super(); }\r\n\r\n  initialize(): Promise<void> {\r\n    return new Promise((resolve, reject) => {\r\n      this.loadScript(FacebookLoginProvider.PROVIDER_ID,\r\n        `//connect.facebook.net/${this.locale}/sdk.js`,\r\n        () => {\r\n          FB.init({\r\n            appId: this.clientId,\r\n            autoLogAppEvents: true,\r\n            cookie: true,\r\n            xfbml: true,\r\n            version: this.version\r\n          });\r\n          // FB.AppEvents.logPageView(); #FIX for #18\r\n\r\n          this._readyState.next(true);\r\n          resolve();\r\n        });\r\n    });\r\n  }\r\n\r\n  getLoginStatus(): Promise<SocialUser> {\r\n    return new Promise((resolve, reject) => {\r\n      this.onReady().then(() => {\r\n        FB.getLoginStatus((response: any) => {\r\n          if (response.status === 'connected') {\r\n            let authResponse = response.authResponse;\r\n            FB.api(`/me?fields=${this.fields}`, (fbUser: any) => {\r\n              let user: SocialUser = new SocialUser();\r\n\r\n              user.id = fbUser.id;\r\n              user.name = fbUser.name;\r\n              user.email = fbUser.email;\r\n              user.photoUrl = 'https://graph.facebook.com/' + fbUser.id + '/picture?type=normal';\r\n              user.firstName = fbUser.first_name;\r\n              user.lastName = fbUser.last_name;\r\n              user.authToken = authResponse.accessToken;\r\n\r\n              user.facebook = fbUser;\r\n\r\n              resolve(user);\r\n            });\r\n          }\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  signIn(opt?: LoginOpt): Promise<SocialUser> {\r\n    return new Promise((resolve, reject) => {\r\n      this.onReady().then(() => {\r\n        FB.login((response: any) => {\r\n          if (response.authResponse) {\r\n            let authResponse = response.authResponse;\r\n            FB.api(`/me?fields=${this.fields}`, (fbUser: any) => {\r\n              let user: SocialUser = new SocialUser();\r\n\r\n              user.id = fbUser.id;\r\n              user.name = fbUser.name;\r\n              user.email = fbUser.email;\r\n              user.photoUrl = 'https://graph.facebook.com/' + fbUser.id + '/picture?type=normal';\r\n              user.firstName = fbUser.first_name;\r\n              user.lastName = fbUser.last_name;\r\n              user.authToken = authResponse.accessToken;\r\n\r\n              user.facebook = fbUser;\r\n\r\n              resolve(user);\r\n            });\r\n          } else {\r\n            reject('User cancelled login or did not fully authorize.');\r\n           }\r\n        }, this.opt);\r\n      });\r\n    });\r\n  }\r\n\r\n  signOut(): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      this.onReady().then(() => {\r\n        FB.logout((response: any) => {\r\n          resolve();\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n"]}